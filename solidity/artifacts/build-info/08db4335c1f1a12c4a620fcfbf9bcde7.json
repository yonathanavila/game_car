{
	"id": "08db4335c1f1a12c4a620fcfbf9bcde7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/game.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\ncontract GameLogic is AccessControl {\n    using SafeERC20 for IERC20;\n\n    IERC20 public gameToken; // Reference to the ERC20 token contract\n    uint256 public tokenMultiplier = 1; // Default multiplier for token rewards\n    uint256 public constant REPAIR_COST = 100 * 10 ** 18; // Repair cost: 100 tokens\n\n    // Define roles\n    bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\n\n    struct Player {\n        uint256 score;\n        uint256 lastSubmissionTimestamp;\n    }\n\n    struct LeaderboardEntry {\n        address player;\n        uint256 score;\n    }\n\n    mapping(address => Player) public players; // Player data\n    address[] public playerAddresses; // List of player addresses for leaderboard\n\n    // Events for transparency\n    event ScoreSubmitted(address indexed player, uint256 score, uint256 tokensEarned);\n    event FormulaUpdated(uint256 newMultiplier);\n    event VehicleRepaired(address indexed player, string component);\n    event PlayerAdded(address indexed player);\n\n    constructor(address _tokenAddress) {\n        gameToken = IERC20(_tokenAddress);\n        // Set deployer as the default admin\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(ADMIN_ROLE, msg.sender);\n    }\n\n    // Submit score (only callable by admin)\n    function submitScore(address player, uint256 score) external onlyRole(ADMIN_ROLE) {\n        require(player != address(0), \"Invalid player address\");\n        require(score > 0, \"Score must be greater than zero\");\n\n        // Update or initialize player data\n        if (players[player].score == 0 && players[player].lastSubmissionTimestamp == 0) {\n            playerAddresses.push(player);\n            emit PlayerAdded(player);\n        }\n\n        players[player].score += score;\n        players[player].lastSubmissionTimestamp = block.timestamp;\n\n        // Calculate tokens based on formula: tokens = score * tokenMultiplier\n        uint256 tokensToMint = score * tokenMultiplier * 10 ** 18;\n        gameToken.safeTransfer(player, tokensToMint);\n\n        emit ScoreSubmitted(player, score, tokensToMint);\n    }\n\n    // Retrieve score for a wallet\n    function getScore(address wallet) external view returns (uint256) {\n        return players[wallet].score;\n    }\n\n    // Get paginated leaderboard\n    function getLeaderboard(uint256 offset, uint256 limit) external view returns (LeaderboardEntry[] memory) {\n        require(offset < playerAddresses.length, \"Offset out of bounds\");\n        uint256 maxLength = playerAddresses.length - offset;\n        uint256 actualLength = limit > maxLength ? maxLength : limit;\n        LeaderboardEntry[] memory leaderboard = new LeaderboardEntry[](actualLength);\n\n        // Create a copy of entries for sorting\n        LeaderboardEntry[] memory entries = new LeaderboardEntry[](playerAddresses.length);\n        for (uint256 i = 0; i < playerAddresses.length; i++) {\n            entries[i] = LeaderboardEntry(playerAddresses[i], players[playerAddresses[i]].score);\n        }\n\n        // Selection sort for efficiency\n        for (uint256 i = 0; i < entries.length && i < offset + actualLength; i++) {\n            uint256 maxIndex = i;\n            for (uint256 j = i + 1; j < entries.length; j++) {\n                if (entries[j].score > entries[maxIndex].score) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                (entries[i], entries[maxIndex]) = (entries[maxIndex], entries[i]);\n            }\n        }\n\n        // Copy requested entries to result\n        for (uint256 i = 0; i < actualLength; i++) {\n            leaderboard[i] = entries[offset + i];\n        }\n\n        return leaderboard;\n    }\n\n    // Repair vehicle component\n    function repairVehicle(string calldata component) external {\n        require(gameToken.allowance(msg.sender, address(this)) >= REPAIR_COST, \"Insufficient allowance\");\n        gameToken.safeTransferFrom(msg.sender, address(this), REPAIR_COST);\n        emit VehicleRepaired(msg.sender, component);\n    }\n\n    // Update token reward formula (only callable by admin)\n    function updateTokenMultiplier(uint256 newMultiplier) external onlyRole(ADMIN_ROLE) {\n        require(newMultiplier > 0, \"Multiplier must be greater than zero\");\n        tokenMultiplier = newMultiplier;\n        emit FormulaUpdated(newMultiplier);\n    }\n\n    // Admin management functions\n    function grantAdminRole(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        grantRole(ADMIN_ROLE, account);\n    }\n\n    function revokeAdminRole(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        revokeRole(ADMIN_ROLE, account);\n    }\n}"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/IAccessControl.sol)\n\npragma solidity >=0.8.4;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)22_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)22_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)22_storage"
							},
							"t_struct(RoleData)22_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 19,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 21,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x9870605E8F38FC4A69034310 SWAP3 0xB7 0xB8 PUSH9 0xBC6456AB2E01DF7BCE 0xB2 OR 0xCD DUP7 PUSH21 0xD764736F6C634300081E0033000000000000000000 ",
							"sourceMap": "698:9376:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x9870605E8F38FC4A69034310 SWAP3 0xB7 0xB8 PUSH9 0xBC6456AB2E01DF7BCE 0xB2 OR 0xCD DUP7 PUSH21 0xD764736F6C634300081E0033000000000000000000 ",
							"sourceMap": "698:9376:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/game.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/game.sol": {
				"GameLogic": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newMultiplier",
									"type": "uint256"
								}
							],
							"name": "FormulaUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "player",
									"type": "address"
								}
							],
							"name": "PlayerAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "player",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "score",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokensEarned",
									"type": "uint256"
								}
							],
							"name": "ScoreSubmitted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "player",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "component",
									"type": "string"
								}
							],
							"name": "VehicleRepaired",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "REPAIR_COST",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "gameToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "offset",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "limit",
									"type": "uint256"
								}
							],
							"name": "getLeaderboard",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "player",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "score",
											"type": "uint256"
										}
									],
									"internalType": "struct GameLogic.LeaderboardEntry[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "wallet",
									"type": "address"
								}
							],
							"name": "getScore",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantAdminRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "playerAddresses",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "players",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "score",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastSubmissionTimestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "component",
									"type": "string"
								}
							],
							"name": "repairVehicle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeAdminRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "player",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "score",
									"type": "uint256"
								}
							],
							"name": "submitScore",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenMultiplier",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newMultiplier",
									"type": "uint256"
								}
							],
							"name": "updateTokenMultiplier",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/game.sol\":241:4877  contract GameLogic is AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/game.sol\":419:420  1 */\n  0x01\n    /* \"contracts/game.sol\":386:420  uint256 public tokenMultiplier = 1 */\n  0x02\n  sstore\n    /* \"contracts/game.sol\":1243:1469  constructor(address _tokenAddress) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/game.sol\":1307:1320  _tokenAddress */\n  dup1\n    /* \"contracts/game.sol\":1288:1297  gameToken */\n  0x01\n  0x00\n    /* \"contracts/game.sol\":1288:1321  gameToken = IERC20(_tokenAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/game.sol\":1376:1418  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n  0x00\n    /* \"contracts/game.sol\":1387:1405  DEFAULT_ADMIN_ROLE */\n  0x00\n  shl\n    /* \"contracts/game.sol\":1407:1417  msg.sender */\n  caller\n    /* \"contracts/game.sol\":1376:1386  _grantRole */\n  shl(0x20, tag_7)\n    /* \"contracts/game.sol\":1376:1418  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/game.sol\":1428:1462  _grantRole(ADMIN_ROLE, msg.sender) */\n  tag_8\n    /* \"contracts/game.sol\":609:632  keccak256(\"ADMIN_ROLE\") */\n  0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n    /* \"contracts/game.sol\":1451:1461  msg.sender */\n  caller\n    /* \"contracts/game.sol\":1428:1438  _grantRole */\n  shl(0x20, tag_7)\n    /* \"contracts/game.sol\":1428:1462  _grantRole(ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/game.sol\":1243:1469  constructor(address _tokenAddress) {... */\n  pop\n    /* \"contracts/game.sol\":241:4877  contract GameLogic is AccessControl {... */\n  jump(tag_9)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6232:6236  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6261:6265  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6267:6274  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6260  hasRole */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n  tag_13\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6323:6327  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6297  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6298:6302  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6311  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6312:6319  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6327  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n  tag_14\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6383  _msgSender */\n  shl(0x20, tag_15)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6364:6371  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6358:6362  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6407:6411  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n  swap1\n  pop\n  jump(tag_10)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6449:6454  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_10:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2907:2911  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2937:2941  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2950  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2951:2958  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2923:2959  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_15:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_20:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_22:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_23:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_32\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_22\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_24:\n    /* \"#utility.yul\":641:665   */\n  tag_34\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_23\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_35:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_25:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_37\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_24\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_40\n  tag_20\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":932:1051   */\ntag_39:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_41\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_25\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/game.sol\":241:4877  contract GameLogic is AccessControl {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/game.sol\":241:4877  contract GameLogic is AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9a19c7b0\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xd12af19a\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xd12af19a\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xd47875d0\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xe2eb41ff\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xed4b7eaa\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x9a19c7b0\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xba3f5a12\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xc3dfdae6\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc634b78e\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x3596362b\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x3596362b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x73af16fc\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x75b238fc\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x15c6aee2\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1db544c0\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/game.sol\":876:908  address[] public playerAddresses */\n    tag_4:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/game.sol\":1520:2330  function submitScore(address player, uint256 score) external onlyRole(ADMIN_ROLE) {... */\n    tag_5:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_6:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_7:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"contracts/game.sol\":4323:4575  function updateTokenMultiplier(uint256 newMultiplier) external onlyRole(ADMIN_ROLE) {... */\n    tag_8:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_9:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      stop\n        /* \"contracts/game.sol\":2521:3918  function getLeaderboard(uint256 offset, uint256 limit) external view returns (LeaderboardEntry[] memory) {... */\n    tag_10:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/game.sol\":572:632  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n    tag_11:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_12:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/game.sol\":4747:4875  function revokeAdminRole(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_13:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_14:\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/game.sol\":386:420  uint256 public tokenMultiplier = 1 */\n    tag_15:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/game.sol\":316:339  IERC20 public gameToken */\n    tag_16:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/game.sol\":4615:4741  function grantAdminRole(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_17:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n    tag_86:\n      stop\n        /* \"contracts/game.sol\":466:518  uint256 public constant REPAIR_COST = 100 * 10 ** 18 */\n    tag_18:\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/game.sol\":2371:2482  function getScore(address wallet) external view returns (uint256) {... */\n    tag_19:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_20:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n    tag_96:\n      stop\n        /* \"contracts/game.sol\":814:855  mapping(address => Player) public players */\n    tag_21:\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_102\n      swap3\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/game.sol\":3956:4257  function repairVehicle(string calldata component) external {... */\n    tag_22:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      tag_107\n      jump\t// in\n    tag_104:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2626:2630  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2664:2696  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2696  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2660  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2696  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_109\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2736  super.supportsInterface(interfaceId) */\n      tag_110\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2735  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2723  super.supportsInterface */\n      tag_111\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2736  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_109:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2642:2736  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/game.sol\":876:908  address[] public playerAddresses */\n    tag_35:\n      0x04\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/game.sol\":1520:2330  function submitScore(address player, uint256 score) external onlyRole(ADMIN_ROLE) {... */\n    tag_41:\n        /* \"contracts/game.sol\":609:632  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_115\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_116\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_115:\n        /* \"contracts/game.sol\":1638:1639  0 */\n      0x00\n        /* \"contracts/game.sol\":1620:1640  player != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/game.sol\":1620:1626  player */\n      dup4\n        /* \"contracts/game.sol\":1620:1640  player != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/game.sol\":1612:1667  require(player != address(0), \"Invalid player address\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \"contracts/game.sol\":1693:1694  0 */\n      0x00\n        /* \"contracts/game.sol\":1685:1690  score */\n      dup3\n        /* \"contracts/game.sol\":1685:1694  score > 0 */\n      gt\n        /* \"contracts/game.sol\":1677:1730  require(score > 0, \"Score must be greater than zero\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"contracts/game.sol\":1814:1815  0 */\n      0x00\n        /* \"contracts/game.sol\":1789:1796  players */\n      0x03\n        /* \"contracts/game.sol\":1789:1804  players[player] */\n      0x00\n        /* \"contracts/game.sol\":1797:1803  player */\n      dup6\n        /* \"contracts/game.sol\":1789:1804  players[player] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/game.sol\":1789:1810  players[player].score */\n      0x00\n      add\n      sload\n        /* \"contracts/game.sol\":1789:1815  players[player].score == 0 */\n      eq\n        /* \"contracts/game.sol\":1789:1863  players[player].score == 0 && players[player].lastSubmissionTimestamp == 0 */\n      dup1\n      iszero\n      tag_124\n      jumpi\n      pop\n        /* \"contracts/game.sol\":1862:1863  0 */\n      0x00\n        /* \"contracts/game.sol\":1819:1826  players */\n      0x03\n        /* \"contracts/game.sol\":1819:1834  players[player] */\n      0x00\n        /* \"contracts/game.sol\":1827:1833  player */\n      dup6\n        /* \"contracts/game.sol\":1819:1834  players[player] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/game.sol\":1819:1858  players[player].lastSubmissionTimestamp */\n      0x01\n      add\n      sload\n        /* \"contracts/game.sol\":1819:1863  players[player].lastSubmissionTimestamp == 0 */\n      eq\n        /* \"contracts/game.sol\":1789:1863  players[player].score == 0 && players[player].lastSubmissionTimestamp == 0 */\n    tag_124:\n        /* \"contracts/game.sol\":1785:1956  if (players[player].score == 0 && players[player].lastSubmissionTimestamp == 0) {... */\n      iszero\n      tag_125\n      jumpi\n        /* \"contracts/game.sol\":1879:1894  playerAddresses */\n      0x04\n        /* \"contracts/game.sol\":1900:1906  player */\n      dup4\n        /* \"contracts/game.sol\":1879:1907  playerAddresses.push(player) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/game.sol\":1938:1944  player */\n      dup3\n        /* \"contracts/game.sol\":1926:1945  PlayerAdded(player) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf2ae205522024c14e5a7a26ba6d1fb1252dc8e161b5abc79ed5795fd3c5b9261\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/game.sol\":1785:1956  if (players[player].score == 0 && players[player].lastSubmissionTimestamp == 0) {... */\n    tag_125:\n        /* \"contracts/game.sol\":1991:1996  score */\n      dup2\n        /* \"contracts/game.sol\":1966:1973  players */\n      0x03\n        /* \"contracts/game.sol\":1966:1981  players[player] */\n      0x00\n        /* \"contracts/game.sol\":1974:1980  player */\n      dup6\n        /* \"contracts/game.sol\":1966:1981  players[player] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/game.sol\":1966:1987  players[player].score */\n      0x00\n      add\n      0x00\n        /* \"contracts/game.sol\":1966:1996  players[player].score += score */\n      dup3\n      dup3\n      sload\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/game.sol\":2048:2063  block.timestamp */\n      timestamp\n        /* \"contracts/game.sol\":2006:2013  players */\n      0x03\n        /* \"contracts/game.sol\":2006:2021  players[player] */\n      0x00\n        /* \"contracts/game.sol\":2014:2020  player */\n      dup6\n        /* \"contracts/game.sol\":2006:2021  players[player] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/game.sol\":2006:2045  players[player].lastSubmissionTimestamp */\n      0x01\n      add\n        /* \"contracts/game.sol\":2006:2063  players[player].lastSubmissionTimestamp = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/game.sol\":2153:2173  uint256 tokensToMint */\n      0x00\n        /* \"contracts/game.sol\":2202:2210  10 ** 18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/game.sol\":2184:2199  tokenMultiplier */\n      sload(0x02)\n        /* \"contracts/game.sol\":2176:2181  score */\n      dup5\n        /* \"contracts/game.sol\":2176:2199  score * tokenMultiplier */\n      tag_129\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"contracts/game.sol\":2176:2210  score * tokenMultiplier * 10 ** 18 */\n      tag_131\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_131:\n        /* \"contracts/game.sol\":2153:2210  uint256 tokensToMint = score * tokenMultiplier * 10 ** 18 */\n      swap1\n      pop\n        /* \"contracts/game.sol\":2220:2264  gameToken.safeTransfer(player, tokensToMint) */\n      tag_132\n        /* \"contracts/game.sol\":2243:2249  player */\n      dup5\n        /* \"contracts/game.sol\":2251:2263  tokensToMint */\n      dup3\n        /* \"contracts/game.sol\":2220:2229  gameToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/game.sol\":2220:2242  gameToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_133\n      swap1\n        /* \"contracts/game.sol\":2220:2264  gameToken.safeTransfer(player, tokensToMint) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_132:\n        /* \"contracts/game.sol\":2295:2301  player */\n      dup4\n        /* \"contracts/game.sol\":2280:2323  ScoreSubmitted(player, score, tokensToMint) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb7f20d0949b6a8bc59d005af4a52f7ff5d0cfcde9056fa556adb0e4b24dcb6d2\n        /* \"contracts/game.sol\":2303:2308  score */\n      dup5\n        /* \"contracts/game.sol\":2310:2322  tokensToMint */\n      dup4\n        /* \"contracts/game.sol\":2280:2323  ScoreSubmitted(player, score, tokensToMint) */\n      mload(0x40)\n      tag_134\n      swap3\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/game.sol\":1602:2330  {... */\n      pop\n        /* \"contracts/game.sol\":1520:2330  function submitScore(address player, uint256 score) external onlyRole(ADMIN_ROLE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3851:3858  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3884:3888  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3870:3899  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4294  getRoleAdmin(role) */\n      tag_136\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4289:4293  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4288  getRoleAdmin */\n      tag_45\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4294  getRoleAdmin(role) */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_138\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_116\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      tag_140\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4317:4321  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4323:4330  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4316  _grantRole */\n      tag_141\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      jump\t// in\n    tag_140:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/game.sol\":4323:4575  function updateTokenMultiplier(uint256 newMultiplier) external onlyRole(ADMIN_ROLE) {... */\n    tag_54:\n        /* \"contracts/game.sol\":609:632  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_143\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_116\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_143:\n        /* \"contracts/game.sol\":4441:4442  0 */\n      0x00\n        /* \"contracts/game.sol\":4425:4438  newMultiplier */\n      dup3\n        /* \"contracts/game.sol\":4425:4442  newMultiplier > 0 */\n      gt\n        /* \"contracts/game.sol\":4417:4483  require(newMultiplier > 0, \"Multiplier must be greater than zero\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_145:\n        /* \"contracts/game.sol\":4511:4524  newMultiplier */\n      dup2\n        /* \"contracts/game.sol\":4493:4508  tokenMultiplier */\n      0x02\n        /* \"contracts/game.sol\":4493:4524  tokenMultiplier = newMultiplier */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/game.sol\":4539:4568  FormulaUpdated(newMultiplier) */\n      0xe6b19b2c6617851a0f4c49df91138e172046ffa3fc94114d4a7294d0e4362dd6\n        /* \"contracts/game.sol\":4554:4567  newMultiplier */\n      dup3\n        /* \"contracts/game.sol\":4539:4568  FormulaUpdated(newMultiplier) */\n      mload(0x40)\n      tag_148\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/game.sol\":4323:4575  function updateTokenMultiplier(uint256 newMultiplier) external onlyRole(ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5431  _msgSender() */\n      tag_150\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5429  _msgSender */\n      tag_151\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5431  _msgSender() */\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5431  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5415  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5431  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n      tag_152\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5454:5484  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      tag_153\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5517:5521  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5523:5541  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5516  _revokeRole */\n      tag_154\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_153:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/game.sol\":2521:3918  function getLeaderboard(uint256 offset, uint256 limit) external view returns (LeaderboardEntry[] memory) {... */\n    tag_61:\n        /* \"contracts/game.sol\":2599:2624  LeaderboardEntry[] memory */\n      0x60\n        /* \"contracts/game.sol\":2653:2668  playerAddresses */\n      0x04\n        /* \"contracts/game.sol\":2653:2675  playerAddresses.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/game.sol\":2644:2650  offset */\n      dup4\n        /* \"contracts/game.sol\":2644:2675  offset < playerAddresses.length */\n      lt\n        /* \"contracts/game.sol\":2636:2700  require(offset < playerAddresses.length, \"Offset out of bounds\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_157\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_156:\n        /* \"contracts/game.sol\":2710:2727  uint256 maxLength */\n      0x00\n        /* \"contracts/game.sol\":2755:2761  offset */\n      dup4\n        /* \"contracts/game.sol\":2730:2745  playerAddresses */\n      0x04\n        /* \"contracts/game.sol\":2730:2752  playerAddresses.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/game.sol\":2730:2761  playerAddresses.length - offset */\n      tag_159\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n        /* \"contracts/game.sol\":2710:2761  uint256 maxLength = playerAddresses.length - offset */\n      swap1\n      pop\n        /* \"contracts/game.sol\":2771:2791  uint256 actualLength */\n      0x00\n        /* \"contracts/game.sol\":2802:2811  maxLength */\n      dup2\n        /* \"contracts/game.sol\":2794:2799  limit */\n      dup5\n        /* \"contracts/game.sol\":2794:2811  limit > maxLength */\n      gt\n        /* \"contracts/game.sol\":2794:2831  limit > maxLength ? maxLength : limit */\n      tag_161\n      jumpi\n        /* \"contracts/game.sol\":2826:2831  limit */\n      dup4\n        /* \"contracts/game.sol\":2794:2831  limit > maxLength ? maxLength : limit */\n      jump(tag_162)\n    tag_161:\n        /* \"contracts/game.sol\":2814:2823  maxLength */\n      dup2\n        /* \"contracts/game.sol\":2794:2831  limit > maxLength ? maxLength : limit */\n    tag_162:\n        /* \"contracts/game.sol\":2771:2831  uint256 actualLength = limit > maxLength ? maxLength : limit */\n      swap1\n      pop\n        /* \"contracts/game.sol\":2841:2878  LeaderboardEntry[] memory leaderboard */\n      0x00\n        /* \"contracts/game.sol\":2904:2916  actualLength */\n      dup2\n        /* \"contracts/game.sol\":2881:2917  new LeaderboardEntry[](actualLength) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_163\n      jumpi\n      tag_164\n      tag_165\n      jump\t// in\n    tag_164:\n    tag_163:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_166\n      jumpi\n      dup2\n      0x20\n      add\n    tag_167:\n      tag_168\n      tag_169\n      jump\t// in\n    tag_168:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_167\n      jumpi\n      swap1\n      pop\n    tag_166:\n      pop\n        /* \"contracts/game.sol\":2841:2917  LeaderboardEntry[] memory leaderboard = new LeaderboardEntry[](actualLength) */\n      swap1\n      pop\n        /* \"contracts/game.sol\":2976:3009  LeaderboardEntry[] memory entries */\n      0x00\n        /* \"contracts/game.sol\":3035:3050  playerAddresses */\n      0x04\n        /* \"contracts/game.sol\":3035:3057  playerAddresses.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/game.sol\":3012:3058  new LeaderboardEntry[](playerAddresses.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_170\n      jumpi\n      tag_171\n      tag_165\n      jump\t// in\n    tag_171:\n    tag_170:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_172\n      jumpi\n      dup2\n      0x20\n      add\n    tag_173:\n      tag_174\n      tag_169\n      jump\t// in\n    tag_174:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_173\n      jumpi\n      swap1\n      pop\n    tag_172:\n      pop\n        /* \"contracts/game.sol\":2976:3058  LeaderboardEntry[] memory entries = new LeaderboardEntry[](playerAddresses.length) */\n      swap1\n      pop\n        /* \"contracts/game.sol\":3073:3082  uint256 i */\n      0x00\n        /* \"contracts/game.sol\":3085:3086  0 */\n      0x00\n        /* \"contracts/game.sol\":3073:3086  uint256 i = 0 */\n      swap1\n      pop\n        /* \"contracts/game.sol\":3068:3230  for (uint256 i = 0; i < playerAddresses.length; i++) {... */\n    tag_175:\n        /* \"contracts/game.sol\":3092:3107  playerAddresses */\n      0x04\n        /* \"contracts/game.sol\":3092:3114  playerAddresses.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/game.sol\":3088:3089  i */\n      dup2\n        /* \"contracts/game.sol\":3088:3114  i < playerAddresses.length */\n      lt\n        /* \"contracts/game.sol\":3068:3230  for (uint256 i = 0; i < playerAddresses.length; i++) {... */\n      iszero\n      tag_176\n      jumpi\n        /* \"contracts/game.sol\":3148:3219  LeaderboardEntry(playerAddresses[i], players[playerAddresses[i]].score) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/game.sol\":3165:3180  playerAddresses */\n      0x04\n        /* \"contracts/game.sol\":3181:3182  i */\n      dup4\n        /* \"contracts/game.sol\":3165:3183  playerAddresses[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_178\n      jumpi\n      tag_179\n      tag_180\n      jump\t// in\n    tag_179:\n    tag_178:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/game.sol\":3148:3219  LeaderboardEntry(playerAddresses[i], players[playerAddresses[i]].score) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/game.sol\":3185:3192  players */\n      0x03\n        /* \"contracts/game.sol\":3185:3212  players[playerAddresses[i]] */\n      0x00\n        /* \"contracts/game.sol\":3193:3208  playerAddresses */\n      0x04\n        /* \"contracts/game.sol\":3209:3210  i */\n      dup6\n        /* \"contracts/game.sol\":3193:3211  playerAddresses[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_182\n      jumpi\n      tag_183\n      tag_180\n      jump\t// in\n    tag_183:\n    tag_182:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/game.sol\":3185:3212  players[playerAddresses[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/game.sol\":3185:3218  players[playerAddresses[i]].score */\n      0x00\n      add\n      sload\n        /* \"contracts/game.sol\":3148:3219  LeaderboardEntry(playerAddresses[i], players[playerAddresses[i]].score) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/game.sol\":3135:3142  entries */\n      dup3\n        /* \"contracts/game.sol\":3143:3144  i */\n      dup3\n        /* \"contracts/game.sol\":3135:3145  entries[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_185\n      jumpi\n      tag_186\n      tag_180\n      jump\t// in\n    tag_186:\n    tag_185:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/game.sol\":3135:3219  entries[i] = LeaderboardEntry(playerAddresses[i], players[playerAddresses[i]].score) */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"contracts/game.sol\":3116:3119  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/game.sol\":3068:3230  for (uint256 i = 0; i < playerAddresses.length; i++) {... */\n      jump(tag_175)\n    tag_176:\n      pop\n        /* \"contracts/game.sol\":3286:3295  uint256 i */\n      0x00\n        /* \"contracts/game.sol\":3298:3299  0 */\n      0x00\n        /* \"contracts/game.sol\":3286:3299  uint256 i = 0 */\n      swap1\n      pop\n        /* \"contracts/game.sol\":3281:3725  for (uint256 i = 0; i < entries.length && i < offset + actualLength; i++) {... */\n    tag_187:\n        /* \"contracts/game.sol\":3305:3312  entries */\n      dup2\n        /* \"contracts/game.sol\":3305:3319  entries.length */\n      mload\n        /* \"contracts/game.sol\":3301:3302  i */\n      dup2\n        /* \"contracts/game.sol\":3301:3319  i < entries.length */\n      lt\n        /* \"contracts/game.sol\":3301:3348  i < entries.length && i < offset + actualLength */\n      dup1\n      iszero\n      tag_190\n      jumpi\n      pop\n        /* \"contracts/game.sol\":3336:3348  actualLength */\n      dup4\n        /* \"contracts/game.sol\":3327:3333  offset */\n      dup9\n        /* \"contracts/game.sol\":3327:3348  offset + actualLength */\n      tag_191\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_191:\n        /* \"contracts/game.sol\":3323:3324  i */\n      dup2\n        /* \"contracts/game.sol\":3323:3348  i < offset + actualLength */\n      lt\n        /* \"contracts/game.sol\":3301:3348  i < entries.length && i < offset + actualLength */\n    tag_190:\n        /* \"contracts/game.sol\":3281:3725  for (uint256 i = 0; i < entries.length && i < offset + actualLength; i++) {... */\n      iszero\n      tag_188\n      jumpi\n        /* \"contracts/game.sol\":3369:3385  uint256 maxIndex */\n      0x00\n        /* \"contracts/game.sol\":3388:3389  i */\n      dup2\n        /* \"contracts/game.sol\":3369:3389  uint256 maxIndex = i */\n      swap1\n      pop\n        /* \"contracts/game.sol\":3408:3417  uint256 j */\n      0x00\n        /* \"contracts/game.sol\":3424:3425  1 */\n      0x01\n        /* \"contracts/game.sol\":3420:3421  i */\n      dup4\n        /* \"contracts/game.sol\":3420:3425  i + 1 */\n      tag_195\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_195:\n        /* \"contracts/game.sol\":3408:3425  uint256 j = i + 1 */\n      swap1\n      pop\n        /* \"contracts/game.sol\":3403:3585  for (uint256 j = i + 1; j < entries.length; j++) {... */\n    tag_192:\n        /* \"contracts/game.sol\":3431:3438  entries */\n      dup4\n        /* \"contracts/game.sol\":3431:3445  entries.length */\n      mload\n        /* \"contracts/game.sol\":3427:3428  j */\n      dup2\n        /* \"contracts/game.sol\":3427:3445  j < entries.length */\n      lt\n        /* \"contracts/game.sol\":3403:3585  for (uint256 j = i + 1; j < entries.length; j++) {... */\n      iszero\n      tag_193\n      jumpi\n        /* \"contracts/game.sol\":3493:3500  entries */\n      dup4\n        /* \"contracts/game.sol\":3501:3509  maxIndex */\n      dup3\n        /* \"contracts/game.sol\":3493:3510  entries[maxIndex] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_196\n      jumpi\n      tag_197\n      tag_180\n      jump\t// in\n    tag_197:\n    tag_196:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/game.sol\":3493:3516  entries[maxIndex].score */\n      0x20\n      add\n      mload\n        /* \"contracts/game.sol\":3474:3481  entries */\n      dup5\n        /* \"contracts/game.sol\":3482:3483  j */\n      dup3\n        /* \"contracts/game.sol\":3474:3484  entries[j] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_198\n      jumpi\n      tag_199\n      tag_180\n      jump\t// in\n    tag_199:\n    tag_198:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/game.sol\":3474:3490  entries[j].score */\n      0x20\n      add\n      mload\n        /* \"contracts/game.sol\":3474:3516  entries[j].score > entries[maxIndex].score */\n      gt\n        /* \"contracts/game.sol\":3470:3571  if (entries[j].score > entries[maxIndex].score) {... */\n      iszero\n      tag_200\n      jumpi\n        /* \"contracts/game.sol\":3551:3552  j */\n      dup1\n        /* \"contracts/game.sol\":3540:3552  maxIndex = j */\n      swap2\n      pop\n        /* \"contracts/game.sol\":3470:3571  if (entries[j].score > entries[maxIndex].score) {... */\n    tag_200:\n        /* \"contracts/game.sol\":3447:3450  j++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/game.sol\":3403:3585  for (uint256 j = i + 1; j < entries.length; j++) {... */\n      jump(tag_192)\n    tag_193:\n      pop\n        /* \"contracts/game.sol\":3614:3615  i */\n      dup2\n        /* \"contracts/game.sol\":3602:3610  maxIndex */\n      dup2\n        /* \"contracts/game.sol\":3602:3615  maxIndex != i */\n      eq\n        /* \"contracts/game.sol\":3598:3715  if (maxIndex != i) {... */\n      tag_201\n      jumpi\n        /* \"contracts/game.sol\":3670:3677  entries */\n      dup3\n        /* \"contracts/game.sol\":3678:3686  maxIndex */\n      dup2\n        /* \"contracts/game.sol\":3670:3687  entries[maxIndex] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_202\n      jumpi\n      tag_203\n      tag_180\n      jump\t// in\n    tag_203:\n    tag_202:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/game.sol\":3689:3696  entries */\n      dup4\n        /* \"contracts/game.sol\":3697:3698  i */\n      dup4\n        /* \"contracts/game.sol\":3689:3699  entries[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_204\n      jumpi\n      tag_205\n      tag_180\n      jump\t// in\n    tag_205:\n    tag_204:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/game.sol\":3636:3643  entries */\n      dup5\n        /* \"contracts/game.sol\":3644:3645  i */\n      dup5\n        /* \"contracts/game.sol\":3636:3646  entries[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_206\n      jumpi\n      tag_207\n      tag_180\n      jump\t// in\n    tag_207:\n    tag_206:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/game.sol\":3648:3655  entries */\n      dup6\n        /* \"contracts/game.sol\":3656:3664  maxIndex */\n      dup5\n        /* \"contracts/game.sol\":3648:3665  entries[maxIndex] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_208\n      jumpi\n      tag_209\n      tag_180\n      jump\t// in\n    tag_209:\n    tag_208:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/game.sol\":3635:3700  (entries[i], entries[maxIndex]) = (entries[maxIndex], entries[i]) */\n      dup3\n      swap1\n      mstore\n      dup3\n      swap1\n      mstore\n      pop\n      pop\n        /* \"contracts/game.sol\":3598:3715  if (maxIndex != i) {... */\n    tag_201:\n        /* \"contracts/game.sol\":3355:3725  {... */\n      pop\n        /* \"contracts/game.sol\":3350:3353  i++ */\n      dup1\n      dup1\n      tag_210\n      swap1\n      tag_211\n      jump\t// in\n    tag_210:\n      swap2\n      pop\n      pop\n        /* \"contracts/game.sol\":3281:3725  for (uint256 i = 0; i < entries.length && i < offset + actualLength; i++) {... */\n      jump(tag_187)\n    tag_188:\n      pop\n        /* \"contracts/game.sol\":3784:3793  uint256 i */\n      0x00\n        /* \"contracts/game.sol\":3796:3797  0 */\n      0x00\n        /* \"contracts/game.sol\":3784:3797  uint256 i = 0 */\n      swap1\n      pop\n        /* \"contracts/game.sol\":3779:3883  for (uint256 i = 0; i < actualLength; i++) {... */\n    tag_212:\n        /* \"contracts/game.sol\":3803:3815  actualLength */\n      dup4\n        /* \"contracts/game.sol\":3799:3800  i */\n      dup2\n        /* \"contracts/game.sol\":3799:3815  i < actualLength */\n      lt\n        /* \"contracts/game.sol\":3779:3883  for (uint256 i = 0; i < actualLength; i++) {... */\n      iszero\n      tag_213\n      jumpi\n        /* \"contracts/game.sol\":3853:3860  entries */\n      dup2\n        /* \"contracts/game.sol\":3870:3871  i */\n      dup2\n        /* \"contracts/game.sol\":3861:3867  offset */\n      dup10\n        /* \"contracts/game.sol\":3861:3871  offset + i */\n      tag_215\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_215:\n        /* \"contracts/game.sol\":3853:3872  entries[offset + i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_216\n      jumpi\n      tag_217\n      tag_180\n      jump\t// in\n    tag_217:\n    tag_216:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/game.sol\":3836:3847  leaderboard */\n      dup4\n        /* \"contracts/game.sol\":3848:3849  i */\n      dup3\n        /* \"contracts/game.sol\":3836:3850  leaderboard[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_218\n      jumpi\n      tag_219\n      tag_180\n      jump\t// in\n    tag_219:\n    tag_218:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/game.sol\":3836:3872  leaderboard[i] = entries[offset + i] */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"contracts/game.sol\":3817:3820  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/game.sol\":3779:3883  for (uint256 i = 0; i < actualLength; i++) {... */\n      jump(tag_212)\n    tag_213:\n      pop\n        /* \"contracts/game.sol\":3900:3911  leaderboard */\n      dup2\n        /* \"contracts/game.sol\":3893:3911  return leaderboard */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/game.sol\":2521:3918  function getLeaderboard(uint256 offset, uint256 limit) external view returns (LeaderboardEntry[] memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/game.sol\":572:632  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n    tag_65:\n        /* \"contracts/game.sol\":609:632  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"contracts/game.sol\":572:632  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2907:2911  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2937:2941  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2950  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2951:2958  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2923:2959  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/game.sol\":4747:4875  function revokeAdminRole(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n      0x00\n        /* \"contracts/game.sol\":4807:4825  DEFAULT_ADMIN_ROLE */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_222\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_116\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_222:\n        /* \"contracts/game.sol\":4837:4868  revokeRole(ADMIN_ROLE, account) */\n      tag_224\n        /* \"contracts/game.sol\":609:632  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"contracts/game.sol\":4860:4867  account */\n      dup4\n        /* \"contracts/game.sol\":4837:4847  revokeRole */\n      tag_98\n        /* \"contracts/game.sol\":4837:4868  revokeRole(ADMIN_ROLE, account) */\n      jump\t// in\n    tag_224:\n        /* \"contracts/game.sol\":4747:4875  function revokeAdminRole(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_76:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      0x00\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/game.sol\":386:420  uint256 public tokenMultiplier = 1 */\n    tag_79:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/game.sol\":316:339  IERC20 public gameToken */\n    tag_83:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/game.sol\":4615:4741  function grantAdminRole(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n      0x00\n        /* \"contracts/game.sol\":4674:4692  DEFAULT_ADMIN_ROLE */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_226\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_116\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_226:\n        /* \"contracts/game.sol\":4704:4734  grantRole(ADMIN_ROLE, account) */\n      tag_228\n        /* \"contracts/game.sol\":609:632  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"contracts/game.sol\":4726:4733  account */\n      dup4\n        /* \"contracts/game.sol\":4704:4713  grantRole */\n      tag_51\n        /* \"contracts/game.sol\":4704:4734  grantRole(ADMIN_ROLE, account) */\n      jump\t// in\n    tag_228:\n        /* \"contracts/game.sol\":4615:4741  function grantAdminRole(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/game.sol\":466:518  uint256 public constant REPAIR_COST = 100 * 10 ** 18 */\n    tag_90:\n        /* \"contracts/game.sol\":504:518  100 * 10 ** 18 */\n      0x056bc75e2d63100000\n        /* \"contracts/game.sol\":466:518  uint256 public constant REPAIR_COST = 100 * 10 ** 18 */\n      dup2\n      jump\t// out\n        /* \"contracts/game.sol\":2371:2482  function getScore(address wallet) external view returns (uint256) {... */\n    tag_94:\n        /* \"contracts/game.sol\":2428:2435  uint256 */\n      0x00\n        /* \"contracts/game.sol\":2454:2461  players */\n      0x03\n        /* \"contracts/game.sol\":2454:2469  players[wallet] */\n      0x00\n        /* \"contracts/game.sol\":2462:2468  wallet */\n      dup4\n        /* \"contracts/game.sol\":2454:2469  players[wallet] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/game.sol\":2454:2475  players[wallet].score */\n      0x00\n      add\n      sload\n        /* \"contracts/game.sol\":2447:2475  return players[wallet].score */\n      swap1\n      pop\n        /* \"contracts/game.sol\":2371:2482  function getScore(address wallet) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4711  getRoleAdmin(role) */\n      tag_230\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4706:4710  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4705  getRoleAdmin */\n      tag_45\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4711  getRoleAdmin(role) */\n      jump\t// in\n    tag_230:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_232\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_116\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      tag_234\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4735:4739  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4741:4748  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4734  _revokeRole */\n      tag_154\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      jump\t// in\n    tag_234:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/game.sol\":814:855  mapping(address => Player) public players */\n    tag_101:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/game.sol\":3956:4257  function repairVehicle(string calldata component) external {... */\n    tag_107:\n        /* \"contracts/game.sol\":504:518  100 * 10 ** 18 */\n      0x056bc75e2d63100000\n        /* \"contracts/game.sol\":4033:4042  gameToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/game.sol\":4033:4052  gameToken.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/game.sol\":4053:4063  msg.sender */\n      caller\n        /* \"contracts/game.sol\":4073:4077  this */\n      address\n        /* \"contracts/game.sol\":4033:4079  gameToken.allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap3\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_239\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_239:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_240\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_240:\n        /* \"contracts/game.sol\":4033:4094  gameToken.allowance(msg.sender, address(this)) >= REPAIR_COST */\n      lt\n      iszero\n        /* \"contracts/game.sol\":4025:4121  require(gameToken.allowance(msg.sender, address(this)) >= REPAIR_COST, \"Insufficient allowance\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_243\n      swap1\n      tag_244\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_242:\n        /* \"contracts/game.sol\":4131:4197  gameToken.safeTransferFrom(msg.sender, address(this), REPAIR_COST) */\n      tag_245\n        /* \"contracts/game.sol\":4158:4168  msg.sender */\n      caller\n        /* \"contracts/game.sol\":4178:4182  this */\n      address\n        /* \"contracts/game.sol\":504:518  100 * 10 ** 18 */\n      0x056bc75e2d63100000\n        /* \"contracts/game.sol\":4131:4140  gameToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/game.sol\":4131:4157  gameToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_246\n      swap1\n        /* \"contracts/game.sol\":4131:4197  gameToken.safeTransferFrom(msg.sender, address(this), REPAIR_COST) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_245:\n        /* \"contracts/game.sol\":4228:4238  msg.sender */\n      caller\n        /* \"contracts/game.sol\":4212:4250  VehicleRepaired(msg.sender, component) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x769873612369de25d7a32b1071976767e3071b8182b9353e1cd5d6cf25b33dca\n        /* \"contracts/game.sol\":4240:4249  component */\n      dup4\n      dup4\n        /* \"contracts/game.sol\":4212:4250  VehicleRepaired(msg.sender, component) */\n      mload(0x40)\n      tag_247\n      swap3\n      swap2\n      swap1\n      tag_248\n      jump\t// in\n    tag_247:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/game.sol\":3956:4257  function repairVehicle(string calldata component) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":730:876  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":806:810  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":844:869  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:869  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:840  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:869  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":822:869  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":730:876  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3271  _checkRole(role, _msgSender()) */\n      tag_251\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3252:3256  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3270  _msgSender() */\n      tag_252\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3268  _msgSender */\n      tag_151\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3270  _msgSender() */\n      jump\t// in\n    tag_252:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3251  _checkRole */\n      tag_253\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3271  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_255\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_256\n      swap3\n      swap2\n      swap1\n      tag_257\n      jump\t// in\n    tag_256:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_258\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6232:6236  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n      tag_260\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6261:6265  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6267:6274  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6260  hasRole */\n      tag_69\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n      jump\t// in\n    tag_260:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n      tag_261\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6323:6327  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6297  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6298:6302  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6311  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6312:6319  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6327  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n      tag_262\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6383  _msgSender */\n      tag_151\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n      jump\t// in\n    tag_262:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6364:6371  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6358:6362  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6407:6411  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n      swap1\n      pop\n      jump(tag_259)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n    tag_261:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6449:6454  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_259:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6708:7025  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6786:6790  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6828  hasRole(role, account) */\n      tag_266\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6814:6818  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6820:6827  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6813  hasRole */\n      tag_69\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6828  hasRole(role, account) */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6802:7019  if (hasRole(role, account)) {... */\n      iszero\n      tag_267\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6876:6881  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6850  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6856  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6851:6855  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6856  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6864  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6873  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6865:6872  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6873  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6881  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6939  _msgSender() */\n      tag_268\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6937  _msgSender */\n      tag_151\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6939  _msgSender() */\n      jump\t// in\n    tag_268:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6918:6925  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6912:6916  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6961:6965  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6954:6965  return true */\n      swap1\n      pop\n      jump(tag_265)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6802:7019  if (hasRole(role, account)) {... */\n    tag_267:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7003:7008  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6996:7008  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6708:7025  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_265:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_246:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_271\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_272\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_273\n      jump\t// in\n    tag_272:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_258\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_271:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3408:3605  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_253:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3518  hasRole(role, account) */\n      tag_275\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3504:3508  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3510:3517  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3503  hasRole */\n      tag_69\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3518  hasRole(role, account) */\n      jump\t// in\n    tag_275:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n      tag_276\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3574:3581  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3583:3587  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_277\n      swap3\n      swap2\n      swap1\n      tag_278\n      jump\t// in\n    tag_277:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n    tag_276:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3408:3605  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_258:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_280\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_280:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8852:8882  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8895:8918  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8532:8928  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8956:8957  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8952  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_281\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_282)\n    tag_281:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8990:8991  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8968:8973  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_282:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_283\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9066:9071  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_284\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_284:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_283:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8440:9090  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n    tag_169:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_286:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_287:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_288:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_289:\n        /* \"#utility.yul\":561:584   */\n      tag_346\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_288\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_347\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      0x00\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_347:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_290:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_349\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_289\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_28:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_352\n      tag_286\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":833:952   */\n    tag_351:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_353\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_290\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_291:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_292:\n        /* \"#utility.yul\":1268:1289   */\n      tag_356\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_291\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_31:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_358\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_292\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1595   */\n    tag_293:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1573:1589   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1723   */\n    tag_294:\n        /* \"#utility.yul\":1674:1698   */\n      tag_361\n        /* \"#utility.yul\":1692:1697   */\n      dup2\n        /* \"#utility.yul\":1674:1698   */\n      tag_293\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":1667:1672   */\n      dup2\n        /* \"#utility.yul\":1664:1699   */\n      eq\n        /* \"#utility.yul\":1654:1717   */\n      tag_362\n      jumpi\n        /* \"#utility.yul\":1713:1714   */\n      0x00\n        /* \"#utility.yul\":1710:1711   */\n      0x00\n        /* \"#utility.yul\":1703:1715   */\n      revert\n        /* \"#utility.yul\":1654:1717   */\n    tag_362:\n        /* \"#utility.yul\":1601:1723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1729:1868   */\n    tag_295:\n        /* \"#utility.yul\":1775:1780   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup2\n        /* \"#utility.yul\":1800:1820   */\n      calldataload\n        /* \"#utility.yul\":1791:1820   */\n      swap1\n      pop\n        /* \"#utility.yul\":1829:1862   */\n      tag_364\n        /* \"#utility.yul\":1856:1861   */\n      dup2\n        /* \"#utility.yul\":1829:1862   */\n      tag_294\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":1729:1868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1874:2203   */\n    tag_34:\n        /* \"#utility.yul\":1933:1939   */\n      0x00\n        /* \"#utility.yul\":1982:1984   */\n      0x20\n        /* \"#utility.yul\":1970:1979   */\n      dup3\n        /* \"#utility.yul\":1961:1968   */\n      dup5\n        /* \"#utility.yul\":1957:1980   */\n      sub\n        /* \"#utility.yul\":1953:1985   */\n      slt\n        /* \"#utility.yul\":1950:2069   */\n      iszero\n      tag_366\n      jumpi\n        /* \"#utility.yul\":1988:2067   */\n      tag_367\n      tag_286\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":1950:2069   */\n    tag_366:\n        /* \"#utility.yul\":2108:2109   */\n      0x00\n        /* \"#utility.yul\":2133:2186   */\n      tag_368\n        /* \"#utility.yul\":2178:2185   */\n      dup5\n        /* \"#utility.yul\":2169:2175   */\n      dup3\n        /* \"#utility.yul\":2158:2167   */\n      dup6\n        /* \"#utility.yul\":2154:2176   */\n      add\n        /* \"#utility.yul\":2133:2186   */\n      tag_295\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":2123:2186   */\n      swap2\n      pop\n        /* \"#utility.yul\":2079:2196   */\n      pop\n        /* \"#utility.yul\":1874:2203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2209:2335   */\n    tag_296:\n        /* \"#utility.yul\":2246:2253   */\n      0x00\n        /* \"#utility.yul\":2286:2328   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2279:2284   */\n      dup3\n        /* \"#utility.yul\":2275:2329   */\n      and\n        /* \"#utility.yul\":2264:2329   */\n      swap1\n      pop\n        /* \"#utility.yul\":2209:2335   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2341:2437   */\n    tag_297:\n        /* \"#utility.yul\":2378:2385   */\n      0x00\n        /* \"#utility.yul\":2407:2431   */\n      tag_371\n        /* \"#utility.yul\":2425:2430   */\n      dup3\n        /* \"#utility.yul\":2407:2431   */\n      tag_296\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":2396:2431   */\n      swap1\n      pop\n        /* \"#utility.yul\":2341:2437   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2443:2561   */\n    tag_298:\n        /* \"#utility.yul\":2530:2554   */\n      tag_373\n        /* \"#utility.yul\":2548:2553   */\n      dup2\n        /* \"#utility.yul\":2530:2554   */\n      tag_297\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":2525:2528   */\n      dup3\n        /* \"#utility.yul\":2518:2555   */\n      mstore\n        /* \"#utility.yul\":2443:2561   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2567:2789   */\n    tag_37:\n        /* \"#utility.yul\":2660:2664   */\n      0x00\n        /* \"#utility.yul\":2698:2700   */\n      0x20\n        /* \"#utility.yul\":2687:2696   */\n      dup3\n        /* \"#utility.yul\":2683:2701   */\n      add\n        /* \"#utility.yul\":2675:2701   */\n      swap1\n      pop\n        /* \"#utility.yul\":2711:2782   */\n      tag_375\n        /* \"#utility.yul\":2779:2780   */\n      0x00\n        /* \"#utility.yul\":2768:2777   */\n      dup4\n        /* \"#utility.yul\":2764:2781   */\n      add\n        /* \"#utility.yul\":2755:2761   */\n      dup5\n        /* \"#utility.yul\":2711:2782   */\n      tag_298\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":2567:2789   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2795:2917   */\n    tag_299:\n        /* \"#utility.yul\":2868:2892   */\n      tag_377\n        /* \"#utility.yul\":2886:2891   */\n      dup2\n        /* \"#utility.yul\":2868:2892   */\n      tag_297\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":2861:2866   */\n      dup2\n        /* \"#utility.yul\":2858:2893   */\n      eq\n        /* \"#utility.yul\":2848:2911   */\n      tag_378\n      jumpi\n        /* \"#utility.yul\":2907:2908   */\n      0x00\n        /* \"#utility.yul\":2904:2905   */\n      0x00\n        /* \"#utility.yul\":2897:2909   */\n      revert\n        /* \"#utility.yul\":2848:2911   */\n    tag_378:\n        /* \"#utility.yul\":2795:2917   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2923:3062   */\n    tag_300:\n        /* \"#utility.yul\":2969:2974   */\n      0x00\n        /* \"#utility.yul\":3007:3013   */\n      dup2\n        /* \"#utility.yul\":2994:3014   */\n      calldataload\n        /* \"#utility.yul\":2985:3014   */\n      swap1\n      pop\n        /* \"#utility.yul\":3023:3056   */\n      tag_380\n        /* \"#utility.yul\":3050:3055   */\n      dup2\n        /* \"#utility.yul\":3023:3056   */\n      tag_299\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":2923:3062   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3068:3542   */\n    tag_40:\n        /* \"#utility.yul\":3136:3142   */\n      0x00\n        /* \"#utility.yul\":3144:3150   */\n      0x00\n        /* \"#utility.yul\":3193:3195   */\n      0x40\n        /* \"#utility.yul\":3181:3190   */\n      dup4\n        /* \"#utility.yul\":3172:3179   */\n      dup6\n        /* \"#utility.yul\":3168:3191   */\n      sub\n        /* \"#utility.yul\":3164:3196   */\n      slt\n        /* \"#utility.yul\":3161:3280   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":3199:3278   */\n      tag_383\n      tag_286\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":3161:3280   */\n    tag_382:\n        /* \"#utility.yul\":3319:3320   */\n      0x00\n        /* \"#utility.yul\":3344:3397   */\n      tag_384\n        /* \"#utility.yul\":3389:3396   */\n      dup6\n        /* \"#utility.yul\":3380:3386   */\n      dup3\n        /* \"#utility.yul\":3369:3378   */\n      dup7\n        /* \"#utility.yul\":3365:3387   */\n      add\n        /* \"#utility.yul\":3344:3397   */\n      tag_300\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":3334:3397   */\n      swap3\n      pop\n        /* \"#utility.yul\":3290:3407   */\n      pop\n        /* \"#utility.yul\":3446:3448   */\n      0x20\n        /* \"#utility.yul\":3472:3525   */\n      tag_385\n        /* \"#utility.yul\":3517:3524   */\n      dup6\n        /* \"#utility.yul\":3508:3514   */\n      dup3\n        /* \"#utility.yul\":3497:3506   */\n      dup7\n        /* \"#utility.yul\":3493:3515   */\n      add\n        /* \"#utility.yul\":3472:3525   */\n      tag_295\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":3462:3525   */\n      swap2\n      pop\n        /* \"#utility.yul\":3417:3535   */\n      pop\n        /* \"#utility.yul\":3068:3542   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3548:3625   */\n    tag_301:\n        /* \"#utility.yul\":3585:3592   */\n      0x00\n        /* \"#utility.yul\":3614:3619   */\n      dup2\n        /* \"#utility.yul\":3603:3619   */\n      swap1\n      pop\n        /* \"#utility.yul\":3548:3625   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3631:3753   */\n    tag_302:\n        /* \"#utility.yul\":3704:3728   */\n      tag_388\n        /* \"#utility.yul\":3722:3727   */\n      dup2\n        /* \"#utility.yul\":3704:3728   */\n      tag_301\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":3697:3702   */\n      dup2\n        /* \"#utility.yul\":3694:3729   */\n      eq\n        /* \"#utility.yul\":3684:3747   */\n      tag_389\n      jumpi\n        /* \"#utility.yul\":3743:3744   */\n      0x00\n        /* \"#utility.yul\":3740:3741   */\n      0x00\n        /* \"#utility.yul\":3733:3745   */\n      revert\n        /* \"#utility.yul\":3684:3747   */\n    tag_389:\n        /* \"#utility.yul\":3631:3753   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3759:3898   */\n    tag_303:\n        /* \"#utility.yul\":3805:3810   */\n      0x00\n        /* \"#utility.yul\":3843:3849   */\n      dup2\n        /* \"#utility.yul\":3830:3850   */\n      calldataload\n        /* \"#utility.yul\":3821:3850   */\n      swap1\n      pop\n        /* \"#utility.yul\":3859:3892   */\n      tag_391\n        /* \"#utility.yul\":3886:3891   */\n      dup2\n        /* \"#utility.yul\":3859:3892   */\n      tag_302\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":3759:3898   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3904:4233   */\n    tag_44:\n        /* \"#utility.yul\":3963:3969   */\n      0x00\n        /* \"#utility.yul\":4012:4014   */\n      0x20\n        /* \"#utility.yul\":4000:4009   */\n      dup3\n        /* \"#utility.yul\":3991:3998   */\n      dup5\n        /* \"#utility.yul\":3987:4010   */\n      sub\n        /* \"#utility.yul\":3983:4015   */\n      slt\n        /* \"#utility.yul\":3980:4099   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":4018:4097   */\n      tag_394\n      tag_286\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":3980:4099   */\n    tag_393:\n        /* \"#utility.yul\":4138:4139   */\n      0x00\n        /* \"#utility.yul\":4163:4216   */\n      tag_395\n        /* \"#utility.yul\":4208:4215   */\n      dup5\n        /* \"#utility.yul\":4199:4205   */\n      dup3\n        /* \"#utility.yul\":4188:4197   */\n      dup6\n        /* \"#utility.yul\":4184:4206   */\n      add\n        /* \"#utility.yul\":4163:4216   */\n      tag_303\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":4153:4216   */\n      swap2\n      pop\n        /* \"#utility.yul\":4109:4226   */\n      pop\n        /* \"#utility.yul\":3904:4233   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4239:4357   */\n    tag_304:\n        /* \"#utility.yul\":4326:4350   */\n      tag_397\n        /* \"#utility.yul\":4344:4349   */\n      dup2\n        /* \"#utility.yul\":4326:4350   */\n      tag_301\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":4321:4324   */\n      dup3\n        /* \"#utility.yul\":4314:4351   */\n      mstore\n        /* \"#utility.yul\":4239:4357   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4363:4585   */\n    tag_47:\n        /* \"#utility.yul\":4456:4460   */\n      0x00\n        /* \"#utility.yul\":4494:4496   */\n      0x20\n        /* \"#utility.yul\":4483:4492   */\n      dup3\n        /* \"#utility.yul\":4479:4497   */\n      add\n        /* \"#utility.yul\":4471:4497   */\n      swap1\n      pop\n        /* \"#utility.yul\":4507:4578   */\n      tag_399\n        /* \"#utility.yul\":4575:4576   */\n      0x00\n        /* \"#utility.yul\":4564:4573   */\n      dup4\n        /* \"#utility.yul\":4560:4577   */\n      add\n        /* \"#utility.yul\":4551:4557   */\n      dup5\n        /* \"#utility.yul\":4507:4578   */\n      tag_304\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":4363:4585   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4591:5065   */\n    tag_50:\n        /* \"#utility.yul\":4659:4665   */\n      0x00\n        /* \"#utility.yul\":4667:4673   */\n      0x00\n        /* \"#utility.yul\":4716:4718   */\n      0x40\n        /* \"#utility.yul\":4704:4713   */\n      dup4\n        /* \"#utility.yul\":4695:4702   */\n      dup6\n        /* \"#utility.yul\":4691:4714   */\n      sub\n        /* \"#utility.yul\":4687:4719   */\n      slt\n        /* \"#utility.yul\":4684:4803   */\n      iszero\n      tag_401\n      jumpi\n        /* \"#utility.yul\":4722:4801   */\n      tag_402\n      tag_286\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":4684:4803   */\n    tag_401:\n        /* \"#utility.yul\":4842:4843   */\n      0x00\n        /* \"#utility.yul\":4867:4920   */\n      tag_403\n        /* \"#utility.yul\":4912:4919   */\n      dup6\n        /* \"#utility.yul\":4903:4909   */\n      dup3\n        /* \"#utility.yul\":4892:4901   */\n      dup7\n        /* \"#utility.yul\":4888:4910   */\n      add\n        /* \"#utility.yul\":4867:4920   */\n      tag_303\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":4857:4920   */\n      swap3\n      pop\n        /* \"#utility.yul\":4813:4930   */\n      pop\n        /* \"#utility.yul\":4969:4971   */\n      0x20\n        /* \"#utility.yul\":4995:5048   */\n      tag_404\n        /* \"#utility.yul\":5040:5047   */\n      dup6\n        /* \"#utility.yul\":5031:5037   */\n      dup3\n        /* \"#utility.yul\":5020:5029   */\n      dup7\n        /* \"#utility.yul\":5016:5038   */\n      add\n        /* \"#utility.yul\":4995:5048   */\n      tag_300\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":4985:5048   */\n      swap2\n      pop\n        /* \"#utility.yul\":4940:5058   */\n      pop\n        /* \"#utility.yul\":4591:5065   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5071:5545   */\n    tag_60:\n        /* \"#utility.yul\":5139:5145   */\n      0x00\n        /* \"#utility.yul\":5147:5153   */\n      0x00\n        /* \"#utility.yul\":5196:5198   */\n      0x40\n        /* \"#utility.yul\":5184:5193   */\n      dup4\n        /* \"#utility.yul\":5175:5182   */\n      dup6\n        /* \"#utility.yul\":5171:5194   */\n      sub\n        /* \"#utility.yul\":5167:5199   */\n      slt\n        /* \"#utility.yul\":5164:5283   */\n      iszero\n      tag_406\n      jumpi\n        /* \"#utility.yul\":5202:5281   */\n      tag_407\n      tag_286\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":5164:5283   */\n    tag_406:\n        /* \"#utility.yul\":5322:5323   */\n      0x00\n        /* \"#utility.yul\":5347:5400   */\n      tag_408\n        /* \"#utility.yul\":5392:5399   */\n      dup6\n        /* \"#utility.yul\":5383:5389   */\n      dup3\n        /* \"#utility.yul\":5372:5381   */\n      dup7\n        /* \"#utility.yul\":5368:5390   */\n      add\n        /* \"#utility.yul\":5347:5400   */\n      tag_295\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":5337:5400   */\n      swap3\n      pop\n        /* \"#utility.yul\":5293:5410   */\n      pop\n        /* \"#utility.yul\":5449:5451   */\n      0x20\n        /* \"#utility.yul\":5475:5528   */\n      tag_409\n        /* \"#utility.yul\":5520:5527   */\n      dup6\n        /* \"#utility.yul\":5511:5517   */\n      dup3\n        /* \"#utility.yul\":5500:5509   */\n      dup7\n        /* \"#utility.yul\":5496:5518   */\n      add\n        /* \"#utility.yul\":5475:5528   */\n      tag_295\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":5465:5528   */\n      swap2\n      pop\n        /* \"#utility.yul\":5420:5538   */\n      pop\n        /* \"#utility.yul\":5071:5545   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5551:5699   */\n    tag_305:\n        /* \"#utility.yul\":5652:5658   */\n      0x00\n        /* \"#utility.yul\":5686:5691   */\n      dup2\n        /* \"#utility.yul\":5680:5692   */\n      mload\n        /* \"#utility.yul\":5670:5692   */\n      swap1\n      pop\n        /* \"#utility.yul\":5551:5699   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5705:5923   */\n    tag_306:\n        /* \"#utility.yul\":5838:5849   */\n      0x00\n        /* \"#utility.yul\":5872:5878   */\n      dup3\n        /* \"#utility.yul\":5867:5870   */\n      dup3\n        /* \"#utility.yul\":5860:5879   */\n      mstore\n        /* \"#utility.yul\":5912:5916   */\n      0x20\n        /* \"#utility.yul\":5907:5910   */\n      dup3\n        /* \"#utility.yul\":5903:5917   */\n      add\n        /* \"#utility.yul\":5888:5917   */\n      swap1\n      pop\n        /* \"#utility.yul\":5705:5923   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5929:6095   */\n    tag_307:\n        /* \"#utility.yul\":6030:6034   */\n      0x00\n        /* \"#utility.yul\":6053:6056   */\n      dup2\n        /* \"#utility.yul\":6045:6056   */\n      swap1\n      pop\n        /* \"#utility.yul\":6083:6087   */\n      0x20\n        /* \"#utility.yul\":6078:6081   */\n      dup3\n        /* \"#utility.yul\":6074:6088   */\n      add\n        /* \"#utility.yul\":6066:6088   */\n      swap1\n      pop\n        /* \"#utility.yul\":5929:6095   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6101:6209   */\n    tag_308:\n        /* \"#utility.yul\":6178:6202   */\n      tag_414\n        /* \"#utility.yul\":6196:6201   */\n      dup2\n        /* \"#utility.yul\":6178:6202   */\n      tag_297\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":6173:6176   */\n      dup3\n        /* \"#utility.yul\":6166:6203   */\n      mstore\n        /* \"#utility.yul\":6101:6209   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6215:6323   */\n    tag_309:\n        /* \"#utility.yul\":6292:6316   */\n      tag_416\n        /* \"#utility.yul\":6310:6315   */\n      dup2\n        /* \"#utility.yul\":6292:6316   */\n      tag_293\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":6287:6290   */\n      dup3\n        /* \"#utility.yul\":6280:6317   */\n      mstore\n        /* \"#utility.yul\":6215:6323   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6407:6925   */\n    tag_310:\n        /* \"#utility.yul\":6562:6566   */\n      0x40\n        /* \"#utility.yul\":6557:6560   */\n      dup3\n        /* \"#utility.yul\":6553:6567   */\n      add\n        /* \"#utility.yul\":6651:6655   */\n      0x00\n        /* \"#utility.yul\":6644:6649   */\n      dup3\n        /* \"#utility.yul\":6640:6656   */\n      add\n        /* \"#utility.yul\":6634:6657   */\n      mload\n        /* \"#utility.yul\":6670:6733   */\n      tag_418\n        /* \"#utility.yul\":6727:6731   */\n      0x00\n        /* \"#utility.yul\":6722:6725   */\n      dup6\n        /* \"#utility.yul\":6718:6732   */\n      add\n        /* \"#utility.yul\":6704:6716   */\n      dup3\n        /* \"#utility.yul\":6670:6733   */\n      tag_308\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":6577:6743   */\n      pop\n        /* \"#utility.yul\":6826:6830   */\n      0x20\n        /* \"#utility.yul\":6819:6824   */\n      dup3\n        /* \"#utility.yul\":6815:6831   */\n      add\n        /* \"#utility.yul\":6809:6832   */\n      mload\n        /* \"#utility.yul\":6845:6908   */\n      tag_419\n        /* \"#utility.yul\":6902:6906   */\n      0x20\n        /* \"#utility.yul\":6897:6900   */\n      dup6\n        /* \"#utility.yul\":6893:6907   */\n      add\n        /* \"#utility.yul\":6879:6891   */\n      dup3\n        /* \"#utility.yul\":6845:6908   */\n      tag_309\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":6753:6918   */\n      pop\n        /* \"#utility.yul\":6531:6925   */\n      pop\n        /* \"#utility.yul\":6407:6925   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6931:7246   */\n    tag_311:\n        /* \"#utility.yul\":7068:7078   */\n      0x00\n        /* \"#utility.yul\":7089:7203   */\n      tag_421\n        /* \"#utility.yul\":7199:7202   */\n      dup4\n        /* \"#utility.yul\":7191:7197   */\n      dup4\n        /* \"#utility.yul\":7089:7203   */\n      tag_310\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":7235:7239   */\n      0x40\n        /* \"#utility.yul\":7230:7233   */\n      dup4\n        /* \"#utility.yul\":7226:7240   */\n      add\n        /* \"#utility.yul\":7212:7240   */\n      swap1\n      pop\n        /* \"#utility.yul\":6931:7246   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7252:7399   */\n    tag_312:\n        /* \"#utility.yul\":7356:7360   */\n      0x00\n        /* \"#utility.yul\":7388:7392   */\n      0x20\n        /* \"#utility.yul\":7383:7386   */\n      dup3\n        /* \"#utility.yul\":7379:7393   */\n      add\n        /* \"#utility.yul\":7371:7393   */\n      swap1\n      pop\n        /* \"#utility.yul\":7252:7399   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7487:8491   */\n    tag_313:\n        /* \"#utility.yul\":7674:7677   */\n      0x00\n        /* \"#utility.yul\":7703:7791   */\n      tag_424\n        /* \"#utility.yul\":7785:7790   */\n      dup3\n        /* \"#utility.yul\":7703:7791   */\n      tag_305\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":7807:7927   */\n      tag_425\n        /* \"#utility.yul\":7920:7926   */\n      dup2\n        /* \"#utility.yul\":7915:7918   */\n      dup6\n        /* \"#utility.yul\":7807:7927   */\n      tag_306\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":7800:7927   */\n      swap4\n      pop\n        /* \"#utility.yul\":7951:8041   */\n      tag_426\n        /* \"#utility.yul\":8035:8040   */\n      dup4\n        /* \"#utility.yul\":7951:8041   */\n      tag_307\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":8064:8071   */\n      dup1\n        /* \"#utility.yul\":8095:8096   */\n      0x00\n        /* \"#utility.yul\":8080:8466   */\n    tag_427:\n        /* \"#utility.yul\":8105:8111   */\n      dup4\n        /* \"#utility.yul\":8102:8103   */\n      dup2\n        /* \"#utility.yul\":8099:8112   */\n      lt\n        /* \"#utility.yul\":8080:8466   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":8181:8187   */\n      dup2\n        /* \"#utility.yul\":8175:8188   */\n      mload\n        /* \"#utility.yul\":8208:8339   */\n      tag_430\n        /* \"#utility.yul\":8335:8338   */\n      dup9\n        /* \"#utility.yul\":8320:8333   */\n      dup3\n        /* \"#utility.yul\":8208:8339   */\n      tag_311\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":8201:8339   */\n      swap8\n      pop\n        /* \"#utility.yul\":8362:8456   */\n      tag_431\n        /* \"#utility.yul\":8449:8455   */\n      dup4\n        /* \"#utility.yul\":8362:8456   */\n      tag_312\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":8352:8456   */\n      swap3\n      pop\n        /* \"#utility.yul\":8140:8466   */\n      pop\n        /* \"#utility.yul\":8127:8128   */\n      0x01\n        /* \"#utility.yul\":8124:8125   */\n      dup2\n        /* \"#utility.yul\":8120:8129   */\n      add\n        /* \"#utility.yul\":8115:8129   */\n      swap1\n      pop\n        /* \"#utility.yul\":8080:8466   */\n      jump(tag_427)\n    tag_429:\n        /* \"#utility.yul\":8084:8098   */\n      pop\n        /* \"#utility.yul\":8482:8485   */\n      dup6\n        /* \"#utility.yul\":8475:8485   */\n      swap4\n      pop\n        /* \"#utility.yul\":7679:8491   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":7487:8491   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8497:9006   */\n    tag_63:\n        /* \"#utility.yul\":8708:8712   */\n      0x00\n        /* \"#utility.yul\":8746:8748   */\n      0x20\n        /* \"#utility.yul\":8735:8744   */\n      dup3\n        /* \"#utility.yul\":8731:8749   */\n      add\n        /* \"#utility.yul\":8723:8749   */\n      swap1\n      pop\n        /* \"#utility.yul\":8795:8804   */\n      dup2\n        /* \"#utility.yul\":8789:8793   */\n      dup2\n        /* \"#utility.yul\":8785:8805   */\n      sub\n        /* \"#utility.yul\":8781:8782   */\n      0x00\n        /* \"#utility.yul\":8770:8779   */\n      dup4\n        /* \"#utility.yul\":8766:8783   */\n      add\n        /* \"#utility.yul\":8759:8806   */\n      mstore\n        /* \"#utility.yul\":8823:8999   */\n      tag_433\n        /* \"#utility.yul\":8994:8998   */\n      dup2\n        /* \"#utility.yul\":8985:8991   */\n      dup5\n        /* \"#utility.yul\":8823:8999   */\n      tag_313\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":8815:8999   */\n      swap1\n      pop\n        /* \"#utility.yul\":8497:9006   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9012:9341   */\n    tag_73:\n        /* \"#utility.yul\":9071:9077   */\n      0x00\n        /* \"#utility.yul\":9120:9122   */\n      0x20\n        /* \"#utility.yul\":9108:9117   */\n      dup3\n        /* \"#utility.yul\":9099:9106   */\n      dup5\n        /* \"#utility.yul\":9095:9118   */\n      sub\n        /* \"#utility.yul\":9091:9123   */\n      slt\n        /* \"#utility.yul\":9088:9207   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":9126:9205   */\n      tag_436\n      tag_286\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":9088:9207   */\n    tag_435:\n        /* \"#utility.yul\":9246:9247   */\n      0x00\n        /* \"#utility.yul\":9271:9324   */\n      tag_437\n        /* \"#utility.yul\":9316:9323   */\n      dup5\n        /* \"#utility.yul\":9307:9313   */\n      dup3\n        /* \"#utility.yul\":9296:9305   */\n      dup6\n        /* \"#utility.yul\":9292:9314   */\n      add\n        /* \"#utility.yul\":9271:9324   */\n      tag_300\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":9261:9324   */\n      swap2\n      pop\n        /* \"#utility.yul\":9217:9334   */\n      pop\n        /* \"#utility.yul\":9012:9341   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9347:9465   */\n    tag_314:\n        /* \"#utility.yul\":9434:9458   */\n      tag_439\n        /* \"#utility.yul\":9452:9457   */\n      dup2\n        /* \"#utility.yul\":9434:9458   */\n      tag_293\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":9429:9432   */\n      dup3\n        /* \"#utility.yul\":9422:9459   */\n      mstore\n        /* \"#utility.yul\":9347:9465   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9471:9693   */\n    tag_81:\n        /* \"#utility.yul\":9564:9568   */\n      0x00\n        /* \"#utility.yul\":9602:9604   */\n      0x20\n        /* \"#utility.yul\":9591:9600   */\n      dup3\n        /* \"#utility.yul\":9587:9605   */\n      add\n        /* \"#utility.yul\":9579:9605   */\n      swap1\n      pop\n        /* \"#utility.yul\":9615:9686   */\n      tag_441\n        /* \"#utility.yul\":9683:9684   */\n      0x00\n        /* \"#utility.yul\":9672:9681   */\n      dup4\n        /* \"#utility.yul\":9668:9685   */\n      add\n        /* \"#utility.yul\":9659:9665   */\n      dup5\n        /* \"#utility.yul\":9615:9686   */\n      tag_314\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":9471:9693   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9699:9759   */\n    tag_315:\n        /* \"#utility.yul\":9727:9730   */\n      0x00\n        /* \"#utility.yul\":9748:9753   */\n      dup2\n        /* \"#utility.yul\":9741:9753   */\n      swap1\n      pop\n        /* \"#utility.yul\":9699:9759   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9765:9907   */\n    tag_316:\n        /* \"#utility.yul\":9815:9824   */\n      0x00\n        /* \"#utility.yul\":9848:9901   */\n      tag_444\n        /* \"#utility.yul\":9866:9900   */\n      tag_445\n        /* \"#utility.yul\":9875:9899   */\n      tag_446\n        /* \"#utility.yul\":9893:9898   */\n      dup5\n        /* \"#utility.yul\":9875:9899   */\n      tag_296\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":9866:9900   */\n      tag_315\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":9848:9901   */\n      tag_296\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":9835:9901   */\n      swap1\n      pop\n        /* \"#utility.yul\":9765:9907   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9913:10039   */\n    tag_317:\n        /* \"#utility.yul\":9963:9972   */\n      0x00\n        /* \"#utility.yul\":9996:10033   */\n      tag_448\n        /* \"#utility.yul\":10027:10032   */\n      dup3\n        /* \"#utility.yul\":9996:10033   */\n      tag_316\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":9983:10033   */\n      swap1\n      pop\n        /* \"#utility.yul\":9913:10039   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10045:10185   */\n    tag_318:\n        /* \"#utility.yul\":10109:10118   */\n      0x00\n        /* \"#utility.yul\":10142:10179   */\n      tag_450\n        /* \"#utility.yul\":10173:10178   */\n      dup3\n        /* \"#utility.yul\":10142:10179   */\n      tag_317\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":10129:10179   */\n      swap1\n      pop\n        /* \"#utility.yul\":10045:10185   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10191:10350   */\n    tag_319:\n        /* \"#utility.yul\":10292:10343   */\n      tag_452\n        /* \"#utility.yul\":10337:10342   */\n      dup2\n        /* \"#utility.yul\":10292:10343   */\n      tag_318\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":10287:10290   */\n      dup3\n        /* \"#utility.yul\":10280:10344   */\n      mstore\n        /* \"#utility.yul\":10191:10350   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10356:10606   */\n    tag_85:\n        /* \"#utility.yul\":10463:10467   */\n      0x00\n        /* \"#utility.yul\":10501:10503   */\n      0x20\n        /* \"#utility.yul\":10490:10499   */\n      dup3\n        /* \"#utility.yul\":10486:10504   */\n      add\n        /* \"#utility.yul\":10478:10504   */\n      swap1\n      pop\n        /* \"#utility.yul\":10514:10599   */\n      tag_454\n        /* \"#utility.yul\":10596:10597   */\n      0x00\n        /* \"#utility.yul\":10585:10594   */\n      dup4\n        /* \"#utility.yul\":10581:10598   */\n      add\n        /* \"#utility.yul\":10572:10578   */\n      dup5\n        /* \"#utility.yul\":10514:10599   */\n      tag_319\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":10356:10606   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10612:10944   */\n    tag_103:\n        /* \"#utility.yul\":10733:10737   */\n      0x00\n        /* \"#utility.yul\":10771:10773   */\n      0x40\n        /* \"#utility.yul\":10760:10769   */\n      dup3\n        /* \"#utility.yul\":10756:10774   */\n      add\n        /* \"#utility.yul\":10748:10774   */\n      swap1\n      pop\n        /* \"#utility.yul\":10784:10855   */\n      tag_456\n        /* \"#utility.yul\":10852:10853   */\n      0x00\n        /* \"#utility.yul\":10841:10850   */\n      dup4\n        /* \"#utility.yul\":10837:10854   */\n      add\n        /* \"#utility.yul\":10828:10834   */\n      dup6\n        /* \"#utility.yul\":10784:10855   */\n      tag_314\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":10865:10937   */\n      tag_457\n        /* \"#utility.yul\":10933:10935   */\n      0x20\n        /* \"#utility.yul\":10922:10931   */\n      dup4\n        /* \"#utility.yul\":10918:10936   */\n      add\n        /* \"#utility.yul\":10909:10915   */\n      dup5\n        /* \"#utility.yul\":10865:10937   */\n      tag_314\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":10612:10944   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10950:11067   */\n    tag_320:\n        /* \"#utility.yul\":11059:11060   */\n      0x00\n        /* \"#utility.yul\":11056:11057   */\n      0x00\n        /* \"#utility.yul\":11049:11061   */\n      revert\n        /* \"#utility.yul\":11073:11190   */\n    tag_321:\n        /* \"#utility.yul\":11182:11183   */\n      0x00\n        /* \"#utility.yul\":11179:11180   */\n      0x00\n        /* \"#utility.yul\":11172:11184   */\n      revert\n        /* \"#utility.yul\":11196:11313   */\n    tag_322:\n        /* \"#utility.yul\":11305:11306   */\n      0x00\n        /* \"#utility.yul\":11302:11303   */\n      0x00\n        /* \"#utility.yul\":11295:11307   */\n      revert\n        /* \"#utility.yul\":11333:11886   */\n    tag_323:\n        /* \"#utility.yul\":11391:11399   */\n      0x00\n        /* \"#utility.yul\":11401:11407   */\n      0x00\n        /* \"#utility.yul\":11451:11454   */\n      dup4\n        /* \"#utility.yul\":11444:11448   */\n      0x1f\n        /* \"#utility.yul\":11436:11442   */\n      dup5\n        /* \"#utility.yul\":11432:11449   */\n      add\n        /* \"#utility.yul\":11428:11455   */\n      slt\n        /* \"#utility.yul\":11418:11540   */\n      tag_462\n      jumpi\n        /* \"#utility.yul\":11459:11538   */\n      tag_463\n      tag_320\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":11418:11540   */\n    tag_462:\n        /* \"#utility.yul\":11572:11578   */\n      dup3\n        /* \"#utility.yul\":11559:11579   */\n      calldataload\n        /* \"#utility.yul\":11549:11579   */\n      swap1\n      pop\n        /* \"#utility.yul\":11602:11620   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11594:11600   */\n      dup2\n        /* \"#utility.yul\":11591:11621   */\n      gt\n        /* \"#utility.yul\":11588:11705   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":11624:11703   */\n      tag_465\n      tag_321\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":11588:11705   */\n    tag_464:\n        /* \"#utility.yul\":11738:11742   */\n      0x20\n        /* \"#utility.yul\":11730:11736   */\n      dup4\n        /* \"#utility.yul\":11726:11743   */\n      add\n        /* \"#utility.yul\":11714:11743   */\n      swap2\n      pop\n        /* \"#utility.yul\":11792:11795   */\n      dup4\n        /* \"#utility.yul\":11784:11788   */\n      0x01\n        /* \"#utility.yul\":11776:11782   */\n      dup3\n        /* \"#utility.yul\":11772:11789   */\n      mul\n        /* \"#utility.yul\":11762:11770   */\n      dup4\n        /* \"#utility.yul\":11758:11790   */\n      add\n        /* \"#utility.yul\":11755:11796   */\n      gt\n        /* \"#utility.yul\":11752:11880   */\n      iszero\n      tag_466\n      jumpi\n        /* \"#utility.yul\":11799:11878   */\n      tag_467\n      tag_322\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":11752:11880   */\n    tag_466:\n        /* \"#utility.yul\":11333:11886   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11892:12421   */\n    tag_106:\n        /* \"#utility.yul\":11963:11969   */\n      0x00\n        /* \"#utility.yul\":11971:11977   */\n      0x00\n        /* \"#utility.yul\":12020:12022   */\n      0x20\n        /* \"#utility.yul\":12008:12017   */\n      dup4\n        /* \"#utility.yul\":11999:12006   */\n      dup6\n        /* \"#utility.yul\":11995:12018   */\n      sub\n        /* \"#utility.yul\":11991:12023   */\n      slt\n        /* \"#utility.yul\":11988:12107   */\n      iszero\n      tag_469\n      jumpi\n        /* \"#utility.yul\":12026:12105   */\n      tag_470\n      tag_286\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":11988:12107   */\n    tag_469:\n        /* \"#utility.yul\":12174:12175   */\n      0x00\n        /* \"#utility.yul\":12163:12172   */\n      dup4\n        /* \"#utility.yul\":12159:12176   */\n      add\n        /* \"#utility.yul\":12146:12177   */\n      calldataload\n        /* \"#utility.yul\":12204:12222   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12196:12202   */\n      dup2\n        /* \"#utility.yul\":12193:12223   */\n      gt\n        /* \"#utility.yul\":12190:12307   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":12226:12305   */\n      tag_472\n      tag_287\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":12190:12307   */\n    tag_471:\n        /* \"#utility.yul\":12339:12404   */\n      tag_473\n        /* \"#utility.yul\":12396:12403   */\n      dup6\n        /* \"#utility.yul\":12387:12393   */\n      dup3\n        /* \"#utility.yul\":12376:12385   */\n      dup7\n        /* \"#utility.yul\":12372:12394   */\n      add\n        /* \"#utility.yul\":12339:12404   */\n      tag_323\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":12321:12404   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":12117:12414   */\n      pop\n        /* \"#utility.yul\":11892:12421   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12427:12596   */\n    tag_324:\n        /* \"#utility.yul\":12511:12522   */\n      0x00\n        /* \"#utility.yul\":12545:12551   */\n      dup3\n        /* \"#utility.yul\":12540:12543   */\n      dup3\n        /* \"#utility.yul\":12533:12552   */\n      mstore\n        /* \"#utility.yul\":12585:12589   */\n      0x20\n        /* \"#utility.yul\":12580:12583   */\n      dup3\n        /* \"#utility.yul\":12576:12590   */\n      add\n        /* \"#utility.yul\":12561:12590   */\n      swap1\n      pop\n        /* \"#utility.yul\":12427:12596   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12602:12774   */\n    tag_325:\n        /* \"#utility.yul\":12742:12766   */\n      0x496e76616c696420706c61796572206164647265737300000000000000000000\n        /* \"#utility.yul\":12738:12739   */\n      0x00\n        /* \"#utility.yul\":12730:12736   */\n      dup3\n        /* \"#utility.yul\":12726:12740   */\n      add\n        /* \"#utility.yul\":12719:12767   */\n      mstore\n        /* \"#utility.yul\":12602:12774   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12780:13146   */\n    tag_326:\n        /* \"#utility.yul\":12922:12925   */\n      0x00\n        /* \"#utility.yul\":12943:13010   */\n      tag_477\n        /* \"#utility.yul\":13007:13009   */\n      0x16\n        /* \"#utility.yul\":13002:13005   */\n      dup4\n        /* \"#utility.yul\":12943:13010   */\n      tag_324\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":12936:13010   */\n      swap2\n      pop\n        /* \"#utility.yul\":13019:13112   */\n      tag_478\n        /* \"#utility.yul\":13108:13111   */\n      dup3\n        /* \"#utility.yul\":13019:13112   */\n      tag_325\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":13137:13139   */\n      0x20\n        /* \"#utility.yul\":13132:13135   */\n      dup3\n        /* \"#utility.yul\":13128:13140   */\n      add\n        /* \"#utility.yul\":13121:13140   */\n      swap1\n      pop\n        /* \"#utility.yul\":12780:13146   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13152:13571   */\n    tag_120:\n        /* \"#utility.yul\":13318:13322   */\n      0x00\n        /* \"#utility.yul\":13356:13358   */\n      0x20\n        /* \"#utility.yul\":13345:13354   */\n      dup3\n        /* \"#utility.yul\":13341:13359   */\n      add\n        /* \"#utility.yul\":13333:13359   */\n      swap1\n      pop\n        /* \"#utility.yul\":13405:13414   */\n      dup2\n        /* \"#utility.yul\":13399:13403   */\n      dup2\n        /* \"#utility.yul\":13395:13415   */\n      sub\n        /* \"#utility.yul\":13391:13392   */\n      0x00\n        /* \"#utility.yul\":13380:13389   */\n      dup4\n        /* \"#utility.yul\":13376:13393   */\n      add\n        /* \"#utility.yul\":13369:13416   */\n      mstore\n        /* \"#utility.yul\":13433:13564   */\n      tag_480\n        /* \"#utility.yul\":13559:13563   */\n      dup2\n        /* \"#utility.yul\":13433:13564   */\n      tag_326\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":13425:13564   */\n      swap1\n      pop\n        /* \"#utility.yul\":13152:13571   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13577:13758   */\n    tag_327:\n        /* \"#utility.yul\":13717:13750   */\n      0x53636f7265206d7573742062652067726561746572207468616e207a65726f00\n        /* \"#utility.yul\":13713:13714   */\n      0x00\n        /* \"#utility.yul\":13705:13711   */\n      dup3\n        /* \"#utility.yul\":13701:13715   */\n      add\n        /* \"#utility.yul\":13694:13751   */\n      mstore\n        /* \"#utility.yul\":13577:13758   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13764:14130   */\n    tag_328:\n        /* \"#utility.yul\":13906:13909   */\n      0x00\n        /* \"#utility.yul\":13927:13994   */\n      tag_483\n        /* \"#utility.yul\":13991:13993   */\n      0x1f\n        /* \"#utility.yul\":13986:13989   */\n      dup4\n        /* \"#utility.yul\":13927:13994   */\n      tag_324\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":13920:13994   */\n      swap2\n      pop\n        /* \"#utility.yul\":14003:14096   */\n      tag_484\n        /* \"#utility.yul\":14092:14095   */\n      dup3\n        /* \"#utility.yul\":14003:14096   */\n      tag_327\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":14121:14123   */\n      0x20\n        /* \"#utility.yul\":14116:14119   */\n      dup3\n        /* \"#utility.yul\":14112:14124   */\n      add\n        /* \"#utility.yul\":14105:14124   */\n      swap1\n      pop\n        /* \"#utility.yul\":13764:14130   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14136:14555   */\n    tag_123:\n        /* \"#utility.yul\":14302:14306   */\n      0x00\n        /* \"#utility.yul\":14340:14342   */\n      0x20\n        /* \"#utility.yul\":14329:14338   */\n      dup3\n        /* \"#utility.yul\":14325:14343   */\n      add\n        /* \"#utility.yul\":14317:14343   */\n      swap1\n      pop\n        /* \"#utility.yul\":14389:14398   */\n      dup2\n        /* \"#utility.yul\":14383:14387   */\n      dup2\n        /* \"#utility.yul\":14379:14399   */\n      sub\n        /* \"#utility.yul\":14375:14376   */\n      0x00\n        /* \"#utility.yul\":14364:14373   */\n      dup4\n        /* \"#utility.yul\":14360:14377   */\n      add\n        /* \"#utility.yul\":14353:14400   */\n      mstore\n        /* \"#utility.yul\":14417:14548   */\n      tag_486\n        /* \"#utility.yul\":14543:14547   */\n      dup2\n        /* \"#utility.yul\":14417:14548   */\n      tag_328\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":14409:14548   */\n      swap1\n      pop\n        /* \"#utility.yul\":14136:14555   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14561:14741   */\n    tag_329:\n        /* \"#utility.yul\":14609:14686   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14606:14607   */\n      0x00\n        /* \"#utility.yul\":14599:14687   */\n      mstore\n        /* \"#utility.yul\":14706:14710   */\n      0x11\n        /* \"#utility.yul\":14703:14704   */\n      0x04\n        /* \"#utility.yul\":14696:14711   */\n      mstore\n        /* \"#utility.yul\":14730:14734   */\n      0x24\n        /* \"#utility.yul\":14727:14728   */\n      0x00\n        /* \"#utility.yul\":14720:14735   */\n      revert\n        /* \"#utility.yul\":14747:14938   */\n    tag_128:\n        /* \"#utility.yul\":14787:14790   */\n      0x00\n        /* \"#utility.yul\":14806:14826   */\n      tag_489\n        /* \"#utility.yul\":14824:14825   */\n      dup3\n        /* \"#utility.yul\":14806:14826   */\n      tag_293\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":14801:14826   */\n      swap2\n      pop\n        /* \"#utility.yul\":14840:14860   */\n      tag_490\n        /* \"#utility.yul\":14858:14859   */\n      dup4\n        /* \"#utility.yul\":14840:14860   */\n      tag_293\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":14835:14860   */\n      swap3\n      pop\n        /* \"#utility.yul\":14883:14884   */\n      dup3\n        /* \"#utility.yul\":14880:14881   */\n      dup3\n        /* \"#utility.yul\":14876:14885   */\n      add\n        /* \"#utility.yul\":14869:14885   */\n      swap1\n      pop\n        /* \"#utility.yul\":14904:14907   */\n      dup1\n        /* \"#utility.yul\":14901:14902   */\n      dup3\n        /* \"#utility.yul\":14898:14908   */\n      gt\n        /* \"#utility.yul\":14895:14931   */\n      iszero\n      tag_491\n      jumpi\n        /* \"#utility.yul\":14911:14929   */\n      tag_492\n      tag_329\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":14895:14931   */\n    tag_491:\n        /* \"#utility.yul\":14747:14938   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14944:15354   */\n    tag_130:\n        /* \"#utility.yul\":14984:14991   */\n      0x00\n        /* \"#utility.yul\":15007:15027   */\n      tag_494\n        /* \"#utility.yul\":15025:15026   */\n      dup3\n        /* \"#utility.yul\":15007:15027   */\n      tag_293\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":15002:15027   */\n      swap2\n      pop\n        /* \"#utility.yul\":15041:15061   */\n      tag_495\n        /* \"#utility.yul\":15059:15060   */\n      dup4\n        /* \"#utility.yul\":15041:15061   */\n      tag_293\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":15036:15061   */\n      swap3\n      pop\n        /* \"#utility.yul\":15096:15097   */\n      dup3\n        /* \"#utility.yul\":15093:15094   */\n      dup3\n        /* \"#utility.yul\":15089:15098   */\n      mul\n        /* \"#utility.yul\":15118:15148   */\n      tag_496\n        /* \"#utility.yul\":15136:15147   */\n      dup2\n        /* \"#utility.yul\":15118:15148   */\n      tag_293\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":15107:15148   */\n      swap2\n      pop\n        /* \"#utility.yul\":15297:15298   */\n      dup3\n        /* \"#utility.yul\":15288:15295   */\n      dup3\n        /* \"#utility.yul\":15284:15299   */\n      div\n        /* \"#utility.yul\":15281:15282   */\n      dup5\n        /* \"#utility.yul\":15278:15300   */\n      eq\n        /* \"#utility.yul\":15258:15259   */\n      dup4\n        /* \"#utility.yul\":15251:15260   */\n      iszero\n        /* \"#utility.yul\":15231:15314   */\n      or\n        /* \"#utility.yul\":15208:15347   */\n      tag_497\n      jumpi\n        /* \"#utility.yul\":15327:15345   */\n      tag_498\n      tag_329\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":15208:15347   */\n    tag_497:\n        /* \"#utility.yul\":14992:15354   */\n      pop\n        /* \"#utility.yul\":14944:15354   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15360:15583   */\n    tag_330:\n        /* \"#utility.yul\":15500:15534   */\n      0x4d756c7469706c696572206d7573742062652067726561746572207468616e20\n        /* \"#utility.yul\":15496:15497   */\n      0x00\n        /* \"#utility.yul\":15488:15494   */\n      dup3\n        /* \"#utility.yul\":15484:15498   */\n      add\n        /* \"#utility.yul\":15477:15535   */\n      mstore\n        /* \"#utility.yul\":15569:15575   */\n      0x7a65726f00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15564:15566   */\n      0x20\n        /* \"#utility.yul\":15556:15562   */\n      dup3\n        /* \"#utility.yul\":15552:15567   */\n      add\n        /* \"#utility.yul\":15545:15576   */\n      mstore\n        /* \"#utility.yul\":15360:15583   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15589:15955   */\n    tag_331:\n        /* \"#utility.yul\":15731:15734   */\n      0x00\n        /* \"#utility.yul\":15752:15819   */\n      tag_501\n        /* \"#utility.yul\":15816:15818   */\n      0x24\n        /* \"#utility.yul\":15811:15814   */\n      dup4\n        /* \"#utility.yul\":15752:15819   */\n      tag_324\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":15745:15819   */\n      swap2\n      pop\n        /* \"#utility.yul\":15828:15921   */\n      tag_502\n        /* \"#utility.yul\":15917:15920   */\n      dup3\n        /* \"#utility.yul\":15828:15921   */\n      tag_330\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":15946:15948   */\n      0x40\n        /* \"#utility.yul\":15941:15944   */\n      dup3\n        /* \"#utility.yul\":15937:15949   */\n      add\n        /* \"#utility.yul\":15930:15949   */\n      swap1\n      pop\n        /* \"#utility.yul\":15589:15955   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15961:16380   */\n    tag_147:\n        /* \"#utility.yul\":16127:16131   */\n      0x00\n        /* \"#utility.yul\":16165:16167   */\n      0x20\n        /* \"#utility.yul\":16154:16163   */\n      dup3\n        /* \"#utility.yul\":16150:16168   */\n      add\n        /* \"#utility.yul\":16142:16168   */\n      swap1\n      pop\n        /* \"#utility.yul\":16214:16223   */\n      dup2\n        /* \"#utility.yul\":16208:16212   */\n      dup2\n        /* \"#utility.yul\":16204:16224   */\n      sub\n        /* \"#utility.yul\":16200:16201   */\n      0x00\n        /* \"#utility.yul\":16189:16198   */\n      dup4\n        /* \"#utility.yul\":16185:16202   */\n      add\n        /* \"#utility.yul\":16178:16225   */\n      mstore\n        /* \"#utility.yul\":16242:16373   */\n      tag_504\n        /* \"#utility.yul\":16368:16372   */\n      dup2\n        /* \"#utility.yul\":16242:16373   */\n      tag_331\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":16234:16373   */\n      swap1\n      pop\n        /* \"#utility.yul\":15961:16380   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16386:16556   */\n    tag_332:\n        /* \"#utility.yul\":16526:16548   */\n      0x4f6666736574206f7574206f6620626f756e6473000000000000000000000000\n        /* \"#utility.yul\":16522:16523   */\n      0x00\n        /* \"#utility.yul\":16514:16520   */\n      dup3\n        /* \"#utility.yul\":16510:16524   */\n      add\n        /* \"#utility.yul\":16503:16549   */\n      mstore\n        /* \"#utility.yul\":16386:16556   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16562:16928   */\n    tag_333:\n        /* \"#utility.yul\":16704:16707   */\n      0x00\n        /* \"#utility.yul\":16725:16792   */\n      tag_507\n        /* \"#utility.yul\":16789:16791   */\n      0x14\n        /* \"#utility.yul\":16784:16787   */\n      dup4\n        /* \"#utility.yul\":16725:16792   */\n      tag_324\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":16718:16792   */\n      swap2\n      pop\n        /* \"#utility.yul\":16801:16894   */\n      tag_508\n        /* \"#utility.yul\":16890:16893   */\n      dup3\n        /* \"#utility.yul\":16801:16894   */\n      tag_332\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":16919:16921   */\n      0x20\n        /* \"#utility.yul\":16914:16917   */\n      dup3\n        /* \"#utility.yul\":16910:16922   */\n      add\n        /* \"#utility.yul\":16903:16922   */\n      swap1\n      pop\n        /* \"#utility.yul\":16562:16928   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16934:17353   */\n    tag_158:\n        /* \"#utility.yul\":17100:17104   */\n      0x00\n        /* \"#utility.yul\":17138:17140   */\n      0x20\n        /* \"#utility.yul\":17127:17136   */\n      dup3\n        /* \"#utility.yul\":17123:17141   */\n      add\n        /* \"#utility.yul\":17115:17141   */\n      swap1\n      pop\n        /* \"#utility.yul\":17187:17196   */\n      dup2\n        /* \"#utility.yul\":17181:17185   */\n      dup2\n        /* \"#utility.yul\":17177:17197   */\n      sub\n        /* \"#utility.yul\":17173:17174   */\n      0x00\n        /* \"#utility.yul\":17162:17171   */\n      dup4\n        /* \"#utility.yul\":17158:17175   */\n      add\n        /* \"#utility.yul\":17151:17198   */\n      mstore\n        /* \"#utility.yul\":17215:17346   */\n      tag_510\n        /* \"#utility.yul\":17341:17345   */\n      dup2\n        /* \"#utility.yul\":17215:17346   */\n      tag_333\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":17207:17346   */\n      swap1\n      pop\n        /* \"#utility.yul\":16934:17353   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17359:17553   */\n    tag_160:\n        /* \"#utility.yul\":17399:17403   */\n      0x00\n        /* \"#utility.yul\":17419:17439   */\n      tag_512\n        /* \"#utility.yul\":17437:17438   */\n      dup3\n        /* \"#utility.yul\":17419:17439   */\n      tag_293\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":17414:17439   */\n      swap2\n      pop\n        /* \"#utility.yul\":17453:17473   */\n      tag_513\n        /* \"#utility.yul\":17471:17472   */\n      dup4\n        /* \"#utility.yul\":17453:17473   */\n      tag_293\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":17448:17473   */\n      swap3\n      pop\n        /* \"#utility.yul\":17497:17498   */\n      dup3\n        /* \"#utility.yul\":17494:17495   */\n      dup3\n        /* \"#utility.yul\":17490:17499   */\n      sub\n        /* \"#utility.yul\":17482:17499   */\n      swap1\n      pop\n        /* \"#utility.yul\":17521:17522   */\n      dup2\n        /* \"#utility.yul\":17515:17519   */\n      dup2\n        /* \"#utility.yul\":17512:17523   */\n      gt\n        /* \"#utility.yul\":17509:17546   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":17526:17544   */\n      tag_515\n      tag_329\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":17509:17546   */\n    tag_514:\n        /* \"#utility.yul\":17359:17553   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17559:17739   */\n    tag_165:\n        /* \"#utility.yul\":17607:17684   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17604:17605   */\n      0x00\n        /* \"#utility.yul\":17597:17685   */\n      mstore\n        /* \"#utility.yul\":17704:17708   */\n      0x41\n        /* \"#utility.yul\":17701:17702   */\n      0x04\n        /* \"#utility.yul\":17694:17709   */\n      mstore\n        /* \"#utility.yul\":17728:17732   */\n      0x24\n        /* \"#utility.yul\":17725:17726   */\n      0x00\n        /* \"#utility.yul\":17718:17733   */\n      revert\n        /* \"#utility.yul\":17745:17925   */\n    tag_180:\n        /* \"#utility.yul\":17793:17870   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17790:17791   */\n      0x00\n        /* \"#utility.yul\":17783:17871   */\n      mstore\n        /* \"#utility.yul\":17890:17894   */\n      0x32\n        /* \"#utility.yul\":17887:17888   */\n      0x04\n        /* \"#utility.yul\":17880:17895   */\n      mstore\n        /* \"#utility.yul\":17914:17918   */\n      0x24\n        /* \"#utility.yul\":17911:17912   */\n      0x00\n        /* \"#utility.yul\":17904:17919   */\n      revert\n        /* \"#utility.yul\":17931:18164   */\n    tag_211:\n        /* \"#utility.yul\":17970:17973   */\n      0x00\n        /* \"#utility.yul\":17993:18017   */\n      tag_519\n        /* \"#utility.yul\":18011:18016   */\n      dup3\n        /* \"#utility.yul\":17993:18017   */\n      tag_293\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":17984:18017   */\n      swap2\n      pop\n        /* \"#utility.yul\":18039:18105   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":18032:18037   */\n      dup3\n        /* \"#utility.yul\":18029:18106   */\n      sub\n        /* \"#utility.yul\":18026:18129   */\n      tag_520\n      jumpi\n        /* \"#utility.yul\":18109:18127   */\n      tag_521\n      tag_329\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":18026:18129   */\n    tag_520:\n        /* \"#utility.yul\":18156:18157   */\n      0x01\n        /* \"#utility.yul\":18149:18154   */\n      dup3\n        /* \"#utility.yul\":18145:18158   */\n      add\n        /* \"#utility.yul\":18138:18158   */\n      swap1\n      pop\n        /* \"#utility.yul\":17931:18164   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18170:18502   */\n    tag_237:\n        /* \"#utility.yul\":18291:18295   */\n      0x00\n        /* \"#utility.yul\":18329:18331   */\n      0x40\n        /* \"#utility.yul\":18318:18327   */\n      dup3\n        /* \"#utility.yul\":18314:18332   */\n      add\n        /* \"#utility.yul\":18306:18332   */\n      swap1\n      pop\n        /* \"#utility.yul\":18342:18413   */\n      tag_523\n        /* \"#utility.yul\":18410:18411   */\n      0x00\n        /* \"#utility.yul\":18399:18408   */\n      dup4\n        /* \"#utility.yul\":18395:18412   */\n      add\n        /* \"#utility.yul\":18386:18392   */\n      dup6\n        /* \"#utility.yul\":18342:18413   */\n      tag_298\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":18423:18495   */\n      tag_524\n        /* \"#utility.yul\":18491:18493   */\n      0x20\n        /* \"#utility.yul\":18480:18489   */\n      dup4\n        /* \"#utility.yul\":18476:18494   */\n      add\n        /* \"#utility.yul\":18467:18473   */\n      dup5\n        /* \"#utility.yul\":18423:18495   */\n      tag_298\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":18170:18502   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18508:18651   */\n    tag_334:\n        /* \"#utility.yul\":18565:18570   */\n      0x00\n        /* \"#utility.yul\":18596:18602   */\n      dup2\n        /* \"#utility.yul\":18590:18603   */\n      mload\n        /* \"#utility.yul\":18581:18603   */\n      swap1\n      pop\n        /* \"#utility.yul\":18612:18645   */\n      tag_526\n        /* \"#utility.yul\":18639:18644   */\n      dup2\n        /* \"#utility.yul\":18612:18645   */\n      tag_294\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":18508:18651   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18657:19008   */\n    tag_241:\n        /* \"#utility.yul\":18727:18733   */\n      0x00\n        /* \"#utility.yul\":18776:18778   */\n      0x20\n        /* \"#utility.yul\":18764:18773   */\n      dup3\n        /* \"#utility.yul\":18755:18762   */\n      dup5\n        /* \"#utility.yul\":18751:18774   */\n      sub\n        /* \"#utility.yul\":18747:18779   */\n      slt\n        /* \"#utility.yul\":18744:18863   */\n      iszero\n      tag_528\n      jumpi\n        /* \"#utility.yul\":18782:18861   */\n      tag_529\n      tag_286\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":18744:18863   */\n    tag_528:\n        /* \"#utility.yul\":18902:18903   */\n      0x00\n        /* \"#utility.yul\":18927:18991   */\n      tag_530\n        /* \"#utility.yul\":18983:18990   */\n      dup5\n        /* \"#utility.yul\":18974:18980   */\n      dup3\n        /* \"#utility.yul\":18963:18972   */\n      dup6\n        /* \"#utility.yul\":18959:18981   */\n      add\n        /* \"#utility.yul\":18927:18991   */\n      tag_334\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":18917:18991   */\n      swap2\n      pop\n        /* \"#utility.yul\":18873:19001   */\n      pop\n        /* \"#utility.yul\":18657:19008   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19014:19186   */\n    tag_335:\n        /* \"#utility.yul\":19154:19178   */\n      0x496e73756666696369656e7420616c6c6f77616e636500000000000000000000\n        /* \"#utility.yul\":19150:19151   */\n      0x00\n        /* \"#utility.yul\":19142:19148   */\n      dup3\n        /* \"#utility.yul\":19138:19152   */\n      add\n        /* \"#utility.yul\":19131:19179   */\n      mstore\n        /* \"#utility.yul\":19014:19186   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19192:19558   */\n    tag_336:\n        /* \"#utility.yul\":19334:19337   */\n      0x00\n        /* \"#utility.yul\":19355:19422   */\n      tag_533\n        /* \"#utility.yul\":19419:19421   */\n      0x16\n        /* \"#utility.yul\":19414:19417   */\n      dup4\n        /* \"#utility.yul\":19355:19422   */\n      tag_324\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":19348:19422   */\n      swap2\n      pop\n        /* \"#utility.yul\":19431:19524   */\n      tag_534\n        /* \"#utility.yul\":19520:19523   */\n      dup3\n        /* \"#utility.yul\":19431:19524   */\n      tag_335\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":19549:19551   */\n      0x20\n        /* \"#utility.yul\":19544:19547   */\n      dup3\n        /* \"#utility.yul\":19540:19552   */\n      add\n        /* \"#utility.yul\":19533:19552   */\n      swap1\n      pop\n        /* \"#utility.yul\":19192:19558   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19564:19983   */\n    tag_244:\n        /* \"#utility.yul\":19730:19734   */\n      0x00\n        /* \"#utility.yul\":19768:19770   */\n      0x20\n        /* \"#utility.yul\":19757:19766   */\n      dup3\n        /* \"#utility.yul\":19753:19771   */\n      add\n        /* \"#utility.yul\":19745:19771   */\n      swap1\n      pop\n        /* \"#utility.yul\":19817:19826   */\n      dup2\n        /* \"#utility.yul\":19811:19815   */\n      dup2\n        /* \"#utility.yul\":19807:19827   */\n      sub\n        /* \"#utility.yul\":19803:19804   */\n      0x00\n        /* \"#utility.yul\":19792:19801   */\n      dup4\n        /* \"#utility.yul\":19788:19805   */\n      add\n        /* \"#utility.yul\":19781:19828   */\n      mstore\n        /* \"#utility.yul\":19845:19976   */\n      tag_536\n        /* \"#utility.yul\":19971:19975   */\n      dup2\n        /* \"#utility.yul\":19845:19976   */\n      tag_336\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":19837:19976   */\n      swap1\n      pop\n        /* \"#utility.yul\":19564:19983   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19989:20137   */\n    tag_337:\n        /* \"#utility.yul\":20087:20093   */\n      dup3\n        /* \"#utility.yul\":20082:20085   */\n      dup2\n        /* \"#utility.yul\":20077:20080   */\n      dup4\n        /* \"#utility.yul\":20064:20094   */\n      calldatacopy\n        /* \"#utility.yul\":20128:20129   */\n      0x00\n        /* \"#utility.yul\":20119:20125   */\n      dup4\n        /* \"#utility.yul\":20114:20117   */\n      dup4\n        /* \"#utility.yul\":20110:20126   */\n      add\n        /* \"#utility.yul\":20103:20130   */\n      mstore\n        /* \"#utility.yul\":19989:20137   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20143:20245   */\n    tag_338:\n        /* \"#utility.yul\":20184:20190   */\n      0x00\n        /* \"#utility.yul\":20235:20237   */\n      0x1f\n        /* \"#utility.yul\":20231:20238   */\n      not\n        /* \"#utility.yul\":20226:20228   */\n      0x1f\n        /* \"#utility.yul\":20219:20224   */\n      dup4\n        /* \"#utility.yul\":20215:20229   */\n      add\n        /* \"#utility.yul\":20211:20239   */\n      and\n        /* \"#utility.yul\":20201:20239   */\n      swap1\n      pop\n        /* \"#utility.yul\":20143:20245   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20275:20592   */\n    tag_339:\n        /* \"#utility.yul\":20373:20376   */\n      0x00\n        /* \"#utility.yul\":20394:20465   */\n      tag_540\n        /* \"#utility.yul\":20458:20464   */\n      dup4\n        /* \"#utility.yul\":20453:20456   */\n      dup6\n        /* \"#utility.yul\":20394:20465   */\n      tag_324\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":20387:20465   */\n      swap4\n      pop\n        /* \"#utility.yul\":20475:20531   */\n      tag_541\n        /* \"#utility.yul\":20524:20530   */\n      dup4\n        /* \"#utility.yul\":20519:20522   */\n      dup6\n        /* \"#utility.yul\":20512:20517   */\n      dup5\n        /* \"#utility.yul\":20475:20531   */\n      tag_337\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":20556:20585   */\n      tag_542\n        /* \"#utility.yul\":20578:20584   */\n      dup4\n        /* \"#utility.yul\":20556:20585   */\n      tag_338\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":20551:20554   */\n      dup5\n        /* \"#utility.yul\":20547:20586   */\n      add\n        /* \"#utility.yul\":20540:20586   */\n      swap1\n      pop\n        /* \"#utility.yul\":20275:20592   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20598:20931   */\n    tag_248:\n        /* \"#utility.yul\":20721:20725   */\n      0x00\n        /* \"#utility.yul\":20759:20761   */\n      0x20\n        /* \"#utility.yul\":20748:20757   */\n      dup3\n        /* \"#utility.yul\":20744:20762   */\n      add\n        /* \"#utility.yul\":20736:20762   */\n      swap1\n      pop\n        /* \"#utility.yul\":20808:20817   */\n      dup2\n        /* \"#utility.yul\":20802:20806   */\n      dup2\n        /* \"#utility.yul\":20798:20818   */\n      sub\n        /* \"#utility.yul\":20794:20795   */\n      0x00\n        /* \"#utility.yul\":20783:20792   */\n      dup4\n        /* \"#utility.yul\":20779:20796   */\n      add\n        /* \"#utility.yul\":20772:20819   */\n      mstore\n        /* \"#utility.yul\":20836:20924   */\n      tag_544\n        /* \"#utility.yul\":20919:20923   */\n      dup2\n        /* \"#utility.yul\":20910:20916   */\n      dup5\n        /* \"#utility.yul\":20902:20908   */\n      dup7\n        /* \"#utility.yul\":20836:20924   */\n      tag_339\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":20828:20924   */\n      swap1\n      pop\n        /* \"#utility.yul\":20598:20931   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20937:21269   */\n    tag_257:\n        /* \"#utility.yul\":21058:21062   */\n      0x00\n        /* \"#utility.yul\":21096:21098   */\n      0x40\n        /* \"#utility.yul\":21085:21094   */\n      dup3\n        /* \"#utility.yul\":21081:21099   */\n      add\n        /* \"#utility.yul\":21073:21099   */\n      swap1\n      pop\n        /* \"#utility.yul\":21109:21180   */\n      tag_546\n        /* \"#utility.yul\":21177:21178   */\n      0x00\n        /* \"#utility.yul\":21166:21175   */\n      dup4\n        /* \"#utility.yul\":21162:21179   */\n      add\n        /* \"#utility.yul\":21153:21159   */\n      dup6\n        /* \"#utility.yul\":21109:21180   */\n      tag_298\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":21190:21262   */\n      tag_547\n        /* \"#utility.yul\":21258:21260   */\n      0x20\n        /* \"#utility.yul\":21247:21256   */\n      dup4\n        /* \"#utility.yul\":21243:21261   */\n      add\n        /* \"#utility.yul\":21234:21240   */\n      dup5\n        /* \"#utility.yul\":21190:21262   */\n      tag_314\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":20937:21269   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21275:21717   */\n    tag_273:\n        /* \"#utility.yul\":21424:21428   */\n      0x00\n        /* \"#utility.yul\":21462:21464   */\n      0x60\n        /* \"#utility.yul\":21451:21460   */\n      dup3\n        /* \"#utility.yul\":21447:21465   */\n      add\n        /* \"#utility.yul\":21439:21465   */\n      swap1\n      pop\n        /* \"#utility.yul\":21475:21546   */\n      tag_549\n        /* \"#utility.yul\":21543:21544   */\n      0x00\n        /* \"#utility.yul\":21532:21541   */\n      dup4\n        /* \"#utility.yul\":21528:21545   */\n      add\n        /* \"#utility.yul\":21519:21525   */\n      dup7\n        /* \"#utility.yul\":21475:21546   */\n      tag_298\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":21556:21628   */\n      tag_550\n        /* \"#utility.yul\":21624:21626   */\n      0x20\n        /* \"#utility.yul\":21613:21622   */\n      dup4\n        /* \"#utility.yul\":21609:21627   */\n      add\n        /* \"#utility.yul\":21600:21606   */\n      dup6\n        /* \"#utility.yul\":21556:21628   */\n      tag_298\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":21638:21710   */\n      tag_551\n        /* \"#utility.yul\":21706:21708   */\n      0x40\n        /* \"#utility.yul\":21695:21704   */\n      dup4\n        /* \"#utility.yul\":21691:21709   */\n      add\n        /* \"#utility.yul\":21682:21688   */\n      dup5\n        /* \"#utility.yul\":21638:21710   */\n      tag_314\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":21275:21717   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21723:22055   */\n    tag_278:\n        /* \"#utility.yul\":21844:21848   */\n      0x00\n        /* \"#utility.yul\":21882:21884   */\n      0x40\n        /* \"#utility.yul\":21871:21880   */\n      dup3\n        /* \"#utility.yul\":21867:21885   */\n      add\n        /* \"#utility.yul\":21859:21885   */\n      swap1\n      pop\n        /* \"#utility.yul\":21895:21966   */\n      tag_553\n        /* \"#utility.yul\":21963:21964   */\n      0x00\n        /* \"#utility.yul\":21952:21961   */\n      dup4\n        /* \"#utility.yul\":21948:21965   */\n      add\n        /* \"#utility.yul\":21939:21945   */\n      dup6\n        /* \"#utility.yul\":21895:21966   */\n      tag_298\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":21976:22048   */\n      tag_554\n        /* \"#utility.yul\":22044:22046   */\n      0x20\n        /* \"#utility.yul\":22033:22042   */\n      dup4\n        /* \"#utility.yul\":22029:22047   */\n      add\n        /* \"#utility.yul\":22020:22026   */\n      dup5\n        /* \"#utility.yul\":21976:22048   */\n      tag_304\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":21723:22055   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220aff86586eed2327a3fe5c5a9fa48719d66c53f90dcbda49ad893d0d52f5e7ac364736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1170": {
									"entryPoint": null,
									"id": 1170,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_257": {
									"entryPoint": 192,
									"id": 257,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1023": {
									"entryPoint": 536,
									"id": 1023,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_81": {
									"entryPoint": 437,
									"id": 81,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 617,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 547,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 543,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1199:11",
										"nodeType": "YulBlock",
										"src": "0:1199:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "379:81:11",
													"nodeType": "YulBlock",
													"src": "379:81:11",
													"statements": [
														{
															"nativeSrc": "389:65:11",
															"nodeType": "YulAssignment",
															"src": "389:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:11",
																		"nodeType": "YulLiteral",
																		"src": "411:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:11"
																},
																"nativeSrc": "400:54:11",
																"nodeType": "YulFunctionCall",
																"src": "400:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:11",
														"nodeType": "YulTypedName",
														"src": "361:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:11",
														"nodeType": "YulTypedName",
														"src": "371:7:11",
														"type": ""
													}
												],
												"src": "334:126:11"
											},
											{
												"body": {
													"nativeSrc": "511:51:11",
													"nodeType": "YulBlock",
													"src": "511:51:11",
													"statements": [
														{
															"nativeSrc": "521:35:11",
															"nodeType": "YulAssignment",
															"src": "521:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:11"
																},
																"nativeSrc": "532:24:11",
																"nodeType": "YulFunctionCall",
																"src": "532:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:11",
														"nodeType": "YulTypedName",
														"src": "493:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:11",
														"nodeType": "YulTypedName",
														"src": "503:7:11",
														"type": ""
													}
												],
												"src": "466:96:11"
											},
											{
												"body": {
													"nativeSrc": "611:79:11",
													"nodeType": "YulBlock",
													"src": "611:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:11",
																"nodeType": "YulBlock",
																"src": "668:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:11",
																					"nodeType": "YulLiteral",
																					"src": "677:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:11",
																					"nodeType": "YulLiteral",
																					"src": "680:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:11"
																			},
																			"nativeSrc": "670:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:11"
																		},
																		"nativeSrc": "670:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:11"
																				},
																				"nativeSrc": "641:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:11"
																		},
																		"nativeSrc": "631:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:11"
																},
																"nativeSrc": "624:43:11",
																"nodeType": "YulFunctionCall",
																"src": "624:43:11"
															},
															"nativeSrc": "621:63:11",
															"nodeType": "YulIf",
															"src": "621:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:11",
														"nodeType": "YulTypedName",
														"src": "604:5:11",
														"type": ""
													}
												],
												"src": "568:122:11"
											},
											{
												"body": {
													"nativeSrc": "759:80:11",
													"nodeType": "YulBlock",
													"src": "759:80:11",
													"statements": [
														{
															"nativeSrc": "769:22:11",
															"nodeType": "YulAssignment",
															"src": "769:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:11"
																},
																"nativeSrc": "778:13:11",
																"nodeType": "YulFunctionCall",
																"src": "778:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:11"
																},
																"nativeSrc": "800:33:11",
																"nodeType": "YulFunctionCall",
																"src": "800:33:11"
															},
															"nativeSrc": "800:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:11"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:11",
														"nodeType": "YulTypedName",
														"src": "737:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:11",
														"nodeType": "YulTypedName",
														"src": "745:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:11",
														"nodeType": "YulTypedName",
														"src": "753:5:11",
														"type": ""
													}
												],
												"src": "696:143:11"
											},
											{
												"body": {
													"nativeSrc": "922:274:11",
													"nodeType": "YulBlock",
													"src": "922:274:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:11",
																"nodeType": "YulBlock",
																"src": "968:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:11"
																			},
																			"nativeSrc": "970:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:11"
																		},
																		"nativeSrc": "970:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:11"
																		},
																		"nativeSrc": "939:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:11",
																		"nodeType": "YulLiteral",
																		"src": "964:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:11"
																},
																"nativeSrc": "935:32:11",
																"nodeType": "YulFunctionCall",
																"src": "935:32:11"
															},
															"nativeSrc": "932:119:11",
															"nodeType": "YulIf",
															"src": "932:119:11"
														},
														{
															"nativeSrc": "1061:128:11",
															"nodeType": "YulBlock",
															"src": "1061:128:11",
															"statements": [
																{
																	"nativeSrc": "1076:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:11",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:11"
																				},
																				"nativeSrc": "1147:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:11"
																		},
																		"nativeSrc": "1115:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:11",
														"nodeType": "YulTypedName",
														"src": "892:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:11",
														"nodeType": "YulTypedName",
														"src": "903:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:11",
														"nodeType": "YulTypedName",
														"src": "915:6:11",
														"type": ""
													}
												],
												"src": "845:351:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526001600255348015610014575f5ffd5b506040516122933803806122938339818101604052810190610036919061027d565b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100885f5f1b336100c060201b60201c565b506100b97fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775336100c060201b60201c565b50506102a8565b5f6100d183836101b560201b60201c565b6101ab5760015f5f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061014861021860201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506101af565b5f90505b92915050565b5f5f5f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61024c82610223565b9050919050565b61025c81610242565b8114610266575f5ffd5b50565b5f8151905061027781610253565b92915050565b5f602082840312156102925761029161021f565b5b5f61029f84828501610269565b91505092915050565b611fde806102b55f395ff3fe608060405234801561000f575f5ffd5b506004361061012a575f3560e01c80639a19c7b0116100ab578063d12af19a1161006f578063d12af19a1461033e578063d47875d01461035c578063d547741f1461038c578063e2eb41ff146103a8578063ed4b7eaa146103d95761012a565b80639a19c7b0146102ac578063a217fddf146102c8578063ba3f5a12146102e6578063c3dfdae614610304578063c634b78e146103225761012a565b80633596362b116100f25780633596362b146101f657806336568abe1461021257806373af16fc1461022e57806375b238fc1461025e57806391d148541461027c5761012a565b806301ffc9a71461012e57806315c6aee21461015e5780631db544c01461018e578063248a9ca3146101aa5780632f2ff15d146101da575b5f5ffd5b61014860048036038101906101439190611575565b6103f5565b60405161015591906115ba565b60405180910390f35b61017860048036038101906101739190611606565b61046e565b6040516101859190611670565b60405180910390f35b6101a860048036038101906101a391906116b3565b6104a9565b005b6101c460048036038101906101bf9190611724565b610819565b6040516101d1919061175e565b60405180910390f35b6101f460048036038101906101ef9190611777565b610835565b005b610210600480360381019061020b9190611606565b610857565b005b61022c60048036038101906102279190611777565b610905565b005b610248600480360381019061024391906117b5565b610980565b60405161025591906118e6565b60405180910390f35b610266610d53565b604051610273919061175e565b60405180910390f35b61029660048036038101906102919190611777565b610d77565b6040516102a391906115ba565b60405180910390f35b6102c660048036038101906102c19190611906565b610dda565b005b6102d0610e14565b6040516102dd919061175e565b60405180910390f35b6102ee610e1a565b6040516102fb9190611940565b60405180910390f35b61030c610e20565b60405161031991906119b4565b60405180910390f35b61033c60048036038101906103379190611906565b610e45565b005b610346610e7f565b6040516103539190611940565b60405180910390f35b61037660048036038101906103719190611906565b610e8c565b6040516103839190611940565b60405180910390f35b6103a660048036038101906103a19190611777565b610ed4565b005b6103c260048036038101906103bd9190611906565b610ef6565b6040516103d09291906119cd565b60405180910390f35b6103f360048036038101906103ee9190611a55565b610f16565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104675750610466826110a7565b5b9050919050565b6004818154811061047d575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217756104d381611110565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610541576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053890611afa565b60405180910390fd5b5f8211610583576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057a90611b62565b60405180910390fd5b5f60035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015414801561061057505f60035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060010154145b156106b957600483908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff167ff2ae205522024c14e5a7a26ba6d1fb1252dc8e161b5abc79ed5795fd3c5b926160405160405180910390a25b8160035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f8282546107079190611bad565b925050819055504260035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600101819055505f670de0b6b3a76400006002548461076b9190611be0565b6107759190611be0565b90506107c3848260015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166111249092919063ffffffff16565b8373ffffffffffffffffffffffffffffffffffffffff167fb7f20d0949b6a8bc59d005af4a52f7ff5d0cfcde9056fa556adb0e4b24dcb6d2848360405161080b9291906119cd565b60405180910390a250505050565b5f5f5f8381526020019081526020015f20600101549050919050565b61083e82610819565b61084781611110565b61085183836111a3565b50505050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177561088181611110565b5f82116108c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ba90611c91565b60405180910390fd5b816002819055507fe6b19b2c6617851a0f4c49df91138e172046ffa3fc94114d4a7294d0e4362dd6826040516108f99190611940565b60405180910390a15050565b61090d61128c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610971576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61097b8282611293565b505050565b606060048054905083106109c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c090611cf9565b60405180910390fd5b5f836004805490506109db9190611d17565b90505f8184116109eb57836109ed565b815b90505f8167ffffffffffffffff811115610a0a57610a09611d4a565b5b604051908082528060200260200182016040528015610a4357816020015b610a306114ea565b815260200190600190039081610a285790505b5090505f60048054905067ffffffffffffffff811115610a6657610a65611d4a565b5b604051908082528060200260200182016040528015610a9f57816020015b610a8c6114ea565b815260200190600190039081610a845790505b5090505f5f90505b600480549050811015610bbf57604051806040016040528060048381548110610ad357610ad2611d77565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160035f60048581548110610b2d57610b2c611d77565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0154815250828281518110610ba757610ba6611d77565b5b60200260200101819052508080600101915050610aa7565b505f5f90505b815181108015610bdf57508388610bdc9190611bad565b81105b15610ce6575f8190505f600183610bf69190611bad565b90505b8351811015610c5757838281518110610c1557610c14611d77565b5b602002602001015160200151848281518110610c3457610c33611d77565b5b6020026020010151602001511115610c4a578091505b8080600101915050610bf9565b50818114610cd257828181518110610c7257610c71611d77565b5b6020026020010151838381518110610c8d57610c8c611d77565b5b6020026020010151848481518110610ca857610ca7611d77565b5b60200260200101858481518110610cc257610cc1611d77565b5b6020026020010182905282905250505b508080610cde90611da4565b915050610bc5565b505f5f90505b83811015610d4557818189610d019190611bad565b81518110610d1257610d11611d77565b5b6020026020010151838281518110610d2d57610d2c611d77565b5b60200260200101819052508080600101915050610cec565b508194505050505092915050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b5f5f5f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f5f1b610de681611110565b610e107fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177583610ed4565b5050565b5f5f1b81565b60025481565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f1b610e5181611110565b610e7b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177583610835565b5050565b68056bc75e2d6310000081565b5f60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01549050919050565b610edd82610819565b610ee681611110565b610ef08383611293565b50505050565b6003602052805f5260405f205f91509050805f0154908060010154905082565b68056bc75e2d6310000060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610f7c929190611deb565b602060405180830381865afa158015610f97573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610fbb9190611e26565b1015610ffc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff390611e9b565b60405180910390fd5b611053333068056bc75e2d6310000060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661137c909392919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f769873612369de25d7a32b1071976767e3071b8182b9353e1cd5d6cf25b33dca838360405161109b929190611f03565b60405180910390a25050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6111218161111c61128c565b6113fe565b50565b61119e838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611157929190611f25565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061144f565b505050565b5f6111ae8383610d77565b6112825760015f5f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061121f61128c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050611286565b5f90505b92915050565b5f33905090565b5f61129e8383610d77565b15611372575f5f5f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061130f61128c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611376565b5f90505b92915050565b6113f8848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016113b193929190611f4c565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061144f565b50505050565b6114088282610d77565b61144b5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611442929190611f81565b60405180910390fd5b5050565b5f5f60205f8451602086015f885af18061146e576040513d5f823e3d81fd5b3d92505f519150505f82146114875760018114156114a2565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b156114e457836040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016114db9190611670565b60405180910390fd5b50505050565b60405180604001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81525090565b5f5ffd5b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61155481611520565b811461155e575f5ffd5b50565b5f8135905061156f8161154b565b92915050565b5f6020828403121561158a57611589611518565b5b5f61159784828501611561565b91505092915050565b5f8115159050919050565b6115b4816115a0565b82525050565b5f6020820190506115cd5f8301846115ab565b92915050565b5f819050919050565b6115e5816115d3565b81146115ef575f5ffd5b50565b5f81359050611600816115dc565b92915050565b5f6020828403121561161b5761161a611518565b5b5f611628848285016115f2565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61165a82611631565b9050919050565b61166a81611650565b82525050565b5f6020820190506116835f830184611661565b92915050565b61169281611650565b811461169c575f5ffd5b50565b5f813590506116ad81611689565b92915050565b5f5f604083850312156116c9576116c8611518565b5b5f6116d68582860161169f565b92505060206116e7858286016115f2565b9150509250929050565b5f819050919050565b611703816116f1565b811461170d575f5ffd5b50565b5f8135905061171e816116fa565b92915050565b5f6020828403121561173957611738611518565b5b5f61174684828501611710565b91505092915050565b611758816116f1565b82525050565b5f6020820190506117715f83018461174f565b92915050565b5f5f6040838503121561178d5761178c611518565b5b5f61179a85828601611710565b92505060206117ab8582860161169f565b9150509250929050565b5f5f604083850312156117cb576117ca611518565b5b5f6117d8858286016115f2565b92505060206117e9858286016115f2565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b61182581611650565b82525050565b611834816115d3565b82525050565b604082015f82015161184e5f85018261181c565b506020820151611861602085018261182b565b50505050565b5f611872838361183a565b60408301905092915050565b5f602082019050919050565b5f611894826117f3565b61189e81856117fd565b93506118a98361180d565b805f5b838110156118d95781516118c08882611867565b97506118cb8361187e565b9250506001810190506118ac565b5085935050505092915050565b5f6020820190508181035f8301526118fe818461188a565b905092915050565b5f6020828403121561191b5761191a611518565b5b5f6119288482850161169f565b91505092915050565b61193a816115d3565b82525050565b5f6020820190506119535f830184611931565b92915050565b5f819050919050565b5f61197c61197761197284611631565b611959565b611631565b9050919050565b5f61198d82611962565b9050919050565b5f61199e82611983565b9050919050565b6119ae81611994565b82525050565b5f6020820190506119c75f8301846119a5565b92915050565b5f6040820190506119e05f830185611931565b6119ed6020830184611931565b9392505050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f840112611a1557611a146119f4565b5b8235905067ffffffffffffffff811115611a3257611a316119f8565b5b602083019150836001820283011115611a4e57611a4d6119fc565b5b9250929050565b5f5f60208385031215611a6b57611a6a611518565b5b5f83013567ffffffffffffffff811115611a8857611a8761151c565b5b611a9485828601611a00565b92509250509250929050565b5f82825260208201905092915050565b7f496e76616c696420706c617965722061646472657373000000000000000000005f82015250565b5f611ae4601683611aa0565b9150611aef82611ab0565b602082019050919050565b5f6020820190508181035f830152611b1181611ad8565b9050919050565b7f53636f7265206d7573742062652067726561746572207468616e207a65726f005f82015250565b5f611b4c601f83611aa0565b9150611b5782611b18565b602082019050919050565b5f6020820190508181035f830152611b7981611b40565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611bb7826115d3565b9150611bc2836115d3565b9250828201905080821115611bda57611bd9611b80565b5b92915050565b5f611bea826115d3565b9150611bf5836115d3565b9250828202611c03816115d3565b91508282048414831517611c1a57611c19611b80565b5b5092915050565b7f4d756c7469706c696572206d7573742062652067726561746572207468616e205f8201527f7a65726f00000000000000000000000000000000000000000000000000000000602082015250565b5f611c7b602483611aa0565b9150611c8682611c21565b604082019050919050565b5f6020820190508181035f830152611ca881611c6f565b9050919050565b7f4f6666736574206f7574206f6620626f756e64730000000000000000000000005f82015250565b5f611ce3601483611aa0565b9150611cee82611caf565b602082019050919050565b5f6020820190508181035f830152611d1081611cd7565b9050919050565b5f611d21826115d3565b9150611d2c836115d3565b9250828203905081811115611d4457611d43611b80565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f611dae826115d3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611de057611ddf611b80565b5b600182019050919050565b5f604082019050611dfe5f830185611661565b611e0b6020830184611661565b9392505050565b5f81519050611e20816115dc565b92915050565b5f60208284031215611e3b57611e3a611518565b5b5f611e4884828501611e12565b91505092915050565b7f496e73756666696369656e7420616c6c6f77616e6365000000000000000000005f82015250565b5f611e85601683611aa0565b9150611e9082611e51565b602082019050919050565b5f6020820190508181035f830152611eb281611e79565b9050919050565b828183375f83830152505050565b5f601f19601f8301169050919050565b5f611ee28385611aa0565b9350611eef838584611eb9565b611ef883611ec7565b840190509392505050565b5f6020820190508181035f830152611f1c818486611ed7565b90509392505050565b5f604082019050611f385f830185611661565b611f456020830184611931565b9392505050565b5f606082019050611f5f5f830186611661565b611f6c6020830185611661565b611f796040830184611931565b949350505050565b5f604082019050611f945f830185611661565b611fa1602083018461174f565b939250505056fea2646970667358221220aff86586eed2327a3fe5c5a9fa48719d66c53f90dcbda49ad893d0d52f5e7ac364736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2293 CODESIZE SUB DUP1 PUSH2 0x2293 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x36 SWAP2 SWAP1 PUSH2 0x27D JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x88 PUSH0 PUSH0 SHL CALLER PUSH2 0xC0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xB9 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 CALLER PUSH2 0xC0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x2A8 JUMP JUMPDEST PUSH0 PUSH2 0xD1 DUP4 DUP4 PUSH2 0x1B5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1AB JUMPI PUSH1 0x1 PUSH0 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x148 PUSH2 0x218 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1AF JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24C DUP3 PUSH2 0x223 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25C DUP2 PUSH2 0x242 JUMP JUMPDEST DUP2 EQ PUSH2 0x266 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x277 DUP2 PUSH2 0x253 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x292 JUMPI PUSH2 0x291 PUSH2 0x21F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x29F DUP5 DUP3 DUP6 ADD PUSH2 0x269 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FDE DUP1 PUSH2 0x2B5 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9A19C7B0 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xD12AF19A GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD12AF19A EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0xD47875D0 EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0xE2EB41FF EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0xED4B7EAA EQ PUSH2 0x3D9 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x9A19C7B0 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0xBA3F5A12 EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0xC3DFDAE6 EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0xC634B78E EQ PUSH2 0x322 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x3596362B GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x3596362B EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x73AF16FC EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x27C JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x15C6AEE2 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x1DB544C0 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1DA JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x1575 JUMP JUMPDEST PUSH2 0x3F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x15BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x1606 JUMP JUMPDEST PUSH2 0x46E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x1670 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x16B3 JUMP JUMPDEST PUSH2 0x4A9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x1724 JUMP JUMPDEST PUSH2 0x819 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x175E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x1777 JUMP JUMPDEST PUSH2 0x835 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x1606 JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x1777 JUMP JUMPDEST PUSH2 0x905 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x248 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x17B5 JUMP JUMPDEST PUSH2 0x980 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x18E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x266 PUSH2 0xD53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x175E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x296 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x1777 JUMP JUMPDEST PUSH2 0xD77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x15BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x1906 JUMP JUMPDEST PUSH2 0xDDA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D0 PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x175E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EE PUSH2 0xE1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x1940 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30C PUSH2 0xE20 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x19B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x1906 JUMP JUMPDEST PUSH2 0xE45 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x346 PUSH2 0xE7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x1940 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x376 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x371 SWAP2 SWAP1 PUSH2 0x1906 JUMP JUMPDEST PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x383 SWAP2 SWAP1 PUSH2 0x1940 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0x1777 JUMP JUMPDEST PUSH2 0xED4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x1906 JUMP JUMPDEST PUSH2 0xEF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D0 SWAP3 SWAP2 SWAP1 PUSH2 0x19CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0x1A55 JUMP JUMPDEST PUSH2 0xF16 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x467 JUMPI POP PUSH2 0x466 DUP3 PUSH2 0x10A7 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x47D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x4D3 DUP2 PUSH2 0x1110 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x541 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x538 SWAP1 PUSH2 0x1AFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x583 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57A SWAP1 PUSH2 0x1B62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x610 JUMPI POP PUSH0 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x6B9 JUMPI PUSH1 0x4 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF2AE205522024C14E5A7A26BA6D1FB1252DC8E161B5ABC79ED5795FD3C5B9261 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x707 SWAP2 SWAP1 PUSH2 0x1BAD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 SLOAD DUP5 PUSH2 0x76B SWAP2 SWAP1 PUSH2 0x1BE0 JUMP JUMPDEST PUSH2 0x775 SWAP2 SWAP1 PUSH2 0x1BE0 JUMP JUMPDEST SWAP1 POP PUSH2 0x7C3 DUP5 DUP3 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1124 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB7F20D0949B6A8BC59D005AF4A52F7FF5D0CFCDE9056FA556ADB0E4B24DCB6D2 DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x80B SWAP3 SWAP2 SWAP1 PUSH2 0x19CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x83E DUP3 PUSH2 0x819 JUMP JUMPDEST PUSH2 0x847 DUP2 PUSH2 0x1110 JUMP JUMPDEST PUSH2 0x851 DUP4 DUP4 PUSH2 0x11A3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x881 DUP2 PUSH2 0x1110 JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x8C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8BA SWAP1 PUSH2 0x1C91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0xE6B19B2C6617851A0F4C49DF91138E172046FFA3FC94114D4A7294D0E4362DD6 DUP3 PUSH1 0x40 MLOAD PUSH2 0x8F9 SWAP2 SWAP1 PUSH2 0x1940 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x90D PUSH2 0x128C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x971 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x97B DUP3 DUP3 PUSH2 0x1293 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD SWAP1 POP DUP4 LT PUSH2 0x9C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C0 SWAP1 PUSH2 0x1CF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 PUSH1 0x4 DUP1 SLOAD SWAP1 POP PUSH2 0x9DB SWAP2 SWAP1 PUSH2 0x1D17 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP5 GT PUSH2 0x9EB JUMPI DUP4 PUSH2 0x9ED JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA0A JUMPI PUSH2 0xA09 PUSH2 0x1D4A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA43 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xA30 PUSH2 0x14EA JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xA28 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 PUSH1 0x4 DUP1 SLOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA66 JUMPI PUSH2 0xA65 PUSH2 0x1D4A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA9F JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xA8C PUSH2 0x14EA JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xA84 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xBBF JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xAD3 JUMPI PUSH2 0xAD2 PUSH2 0x1D77 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 PUSH0 PUSH1 0x4 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0xB2D JUMPI PUSH2 0xB2C PUSH2 0x1D77 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD DUP2 MSTORE POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xBA7 JUMPI PUSH2 0xBA6 PUSH2 0x1D77 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xAA7 JUMP JUMPDEST POP PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP2 MLOAD DUP2 LT DUP1 ISZERO PUSH2 0xBDF JUMPI POP DUP4 DUP9 PUSH2 0xBDC SWAP2 SWAP1 PUSH2 0x1BAD JUMP JUMPDEST DUP2 LT JUMPDEST ISZERO PUSH2 0xCE6 JUMPI PUSH0 DUP2 SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH2 0xBF6 SWAP2 SWAP1 PUSH2 0x1BAD JUMP JUMPDEST SWAP1 POP JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xC57 JUMPI DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xC15 JUMPI PUSH2 0xC14 PUSH2 0x1D77 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xC34 JUMPI PUSH2 0xC33 PUSH2 0x1D77 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD GT ISZERO PUSH2 0xC4A JUMPI DUP1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xBF9 JUMP JUMPDEST POP DUP2 DUP2 EQ PUSH2 0xCD2 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xC72 JUMPI PUSH2 0xC71 PUSH2 0x1D77 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC8D JUMPI PUSH2 0xC8C PUSH2 0x1D77 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xCA8 JUMPI PUSH2 0xCA7 PUSH2 0x1D77 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xCC2 JUMPI PUSH2 0xCC1 PUSH2 0x1D77 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP3 SWAP1 MSTORE DUP3 SWAP1 MSTORE POP POP JUMPDEST POP DUP1 DUP1 PUSH2 0xCDE SWAP1 PUSH2 0x1DA4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBC5 JUMP JUMPDEST POP PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD45 JUMPI DUP2 DUP2 DUP10 PUSH2 0xD01 SWAP2 SWAP1 PUSH2 0x1BAD JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xD12 JUMPI PUSH2 0xD11 PUSH2 0x1D77 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD2D JUMPI PUSH2 0xD2C PUSH2 0x1D77 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xCEC JUMP JUMPDEST POP DUP2 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 SHL PUSH2 0xDE6 DUP2 PUSH2 0x1110 JUMP JUMPDEST PUSH2 0xE10 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP4 PUSH2 0xED4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 SHL DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 SHL PUSH2 0xE51 DUP2 PUSH2 0x1110 JUMP JUMPDEST PUSH2 0xE7B PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP4 PUSH2 0x835 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH9 0x56BC75E2D63100000 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEDD DUP3 PUSH2 0x819 JUMP JUMPDEST PUSH2 0xEE6 DUP2 PUSH2 0x1110 JUMP JUMPDEST PUSH2 0xEF0 DUP4 DUP4 PUSH2 0x1293 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH9 0x56BC75E2D63100000 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF7C SWAP3 SWAP2 SWAP1 PUSH2 0x1DEB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF97 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFBB SWAP2 SWAP1 PUSH2 0x1E26 JUMP JUMPDEST LT ISZERO PUSH2 0xFFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF3 SWAP1 PUSH2 0x1E9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1053 CALLER ADDRESS PUSH9 0x56BC75E2D63100000 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x137C SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x769873612369DE25D7A32B1071976767E3071B8182B9353E1CD5D6CF25B33DCA DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x109B SWAP3 SWAP2 SWAP1 PUSH2 0x1F03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1121 DUP2 PUSH2 0x111C PUSH2 0x128C JUMP JUMPDEST PUSH2 0x13FE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x119E DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1157 SWAP3 SWAP2 SWAP1 PUSH2 0x1F25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x144F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11AE DUP4 DUP4 PUSH2 0xD77 JUMP JUMPDEST PUSH2 0x1282 JUMPI PUSH1 0x1 PUSH0 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x121F PUSH2 0x128C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1286 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x129E DUP4 DUP4 PUSH2 0xD77 JUMP JUMPDEST ISZERO PUSH2 0x1372 JUMPI PUSH0 PUSH0 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x130F PUSH2 0x128C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1376 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13F8 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x13B1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x144F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1408 DUP3 DUP3 PUSH2 0xD77 JUMP JUMPDEST PUSH2 0x144B JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1442 SWAP3 SWAP2 SWAP1 PUSH2 0x1F81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x146E JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1487 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x14A2 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x14E4 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14DB SWAP2 SWAP1 PUSH2 0x1670 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1554 DUP2 PUSH2 0x1520 JUMP JUMPDEST DUP2 EQ PUSH2 0x155E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x156F DUP2 PUSH2 0x154B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x158A JUMPI PUSH2 0x1589 PUSH2 0x1518 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1597 DUP5 DUP3 DUP6 ADD PUSH2 0x1561 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15B4 DUP2 PUSH2 0x15A0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15CD PUSH0 DUP4 ADD DUP5 PUSH2 0x15AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15E5 DUP2 PUSH2 0x15D3 JUMP JUMPDEST DUP2 EQ PUSH2 0x15EF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1600 DUP2 PUSH2 0x15DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x161B JUMPI PUSH2 0x161A PUSH2 0x1518 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1628 DUP5 DUP3 DUP6 ADD PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x165A DUP3 PUSH2 0x1631 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x166A DUP2 PUSH2 0x1650 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1683 PUSH0 DUP4 ADD DUP5 PUSH2 0x1661 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1692 DUP2 PUSH2 0x1650 JUMP JUMPDEST DUP2 EQ PUSH2 0x169C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16AD DUP2 PUSH2 0x1689 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16C9 JUMPI PUSH2 0x16C8 PUSH2 0x1518 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16D6 DUP6 DUP3 DUP7 ADD PUSH2 0x169F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16E7 DUP6 DUP3 DUP7 ADD PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1703 DUP2 PUSH2 0x16F1 JUMP JUMPDEST DUP2 EQ PUSH2 0x170D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x171E DUP2 PUSH2 0x16FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1739 JUMPI PUSH2 0x1738 PUSH2 0x1518 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1746 DUP5 DUP3 DUP6 ADD PUSH2 0x1710 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1758 DUP2 PUSH2 0x16F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1771 PUSH0 DUP4 ADD DUP5 PUSH2 0x174F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x178D JUMPI PUSH2 0x178C PUSH2 0x1518 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x179A DUP6 DUP3 DUP7 ADD PUSH2 0x1710 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17AB DUP6 DUP3 DUP7 ADD PUSH2 0x169F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17CB JUMPI PUSH2 0x17CA PUSH2 0x1518 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17D8 DUP6 DUP3 DUP7 ADD PUSH2 0x15F2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17E9 DUP6 DUP3 DUP7 ADD PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1825 DUP2 PUSH2 0x1650 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1834 DUP2 PUSH2 0x15D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x184E PUSH0 DUP6 ADD DUP3 PUSH2 0x181C JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1861 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x182B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1872 DUP4 DUP4 PUSH2 0x183A JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1894 DUP3 PUSH2 0x17F3 JUMP JUMPDEST PUSH2 0x189E DUP2 DUP6 PUSH2 0x17FD JUMP JUMPDEST SWAP4 POP PUSH2 0x18A9 DUP4 PUSH2 0x180D JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18D9 JUMPI DUP2 MLOAD PUSH2 0x18C0 DUP9 DUP3 PUSH2 0x1867 JUMP JUMPDEST SWAP8 POP PUSH2 0x18CB DUP4 PUSH2 0x187E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x18AC JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18FE DUP2 DUP5 PUSH2 0x188A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x191B JUMPI PUSH2 0x191A PUSH2 0x1518 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1928 DUP5 DUP3 DUP6 ADD PUSH2 0x169F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x193A DUP2 PUSH2 0x15D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1953 PUSH0 DUP4 ADD DUP5 PUSH2 0x1931 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x197C PUSH2 0x1977 PUSH2 0x1972 DUP5 PUSH2 0x1631 JUMP JUMPDEST PUSH2 0x1959 JUMP JUMPDEST PUSH2 0x1631 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x198D DUP3 PUSH2 0x1962 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x199E DUP3 PUSH2 0x1983 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19AE DUP2 PUSH2 0x1994 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19C7 PUSH0 DUP4 ADD DUP5 PUSH2 0x19A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19E0 PUSH0 DUP4 ADD DUP6 PUSH2 0x1931 JUMP JUMPDEST PUSH2 0x19ED PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1931 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1A15 JUMPI PUSH2 0x1A14 PUSH2 0x19F4 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A32 JUMPI PUSH2 0x1A31 PUSH2 0x19F8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1A4E JUMPI PUSH2 0x1A4D PUSH2 0x19FC JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A6B JUMPI PUSH2 0x1A6A PUSH2 0x1518 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A88 JUMPI PUSH2 0x1A87 PUSH2 0x151C JUMP JUMPDEST JUMPDEST PUSH2 0x1A94 DUP6 DUP3 DUP7 ADD PUSH2 0x1A00 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420706C61796572206164647265737300000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AE4 PUSH1 0x16 DUP4 PUSH2 0x1AA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AEF DUP3 PUSH2 0x1AB0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B11 DUP2 PUSH2 0x1AD8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53636F7265206D7573742062652067726561746572207468616E207A65726F00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B4C PUSH1 0x1F DUP4 PUSH2 0x1AA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B57 DUP3 PUSH2 0x1B18 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B79 DUP2 PUSH2 0x1B40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1BB7 DUP3 PUSH2 0x15D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BC2 DUP4 PUSH2 0x15D3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1BDA JUMPI PUSH2 0x1BD9 PUSH2 0x1B80 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BEA DUP3 PUSH2 0x15D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BF5 DUP4 PUSH2 0x15D3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1C03 DUP2 PUSH2 0x15D3 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1C1A JUMPI PUSH2 0x1C19 PUSH2 0x1B80 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D756C7469706C696572206D7573742062652067726561746572207468616E20 PUSH0 DUP3 ADD MSTORE PUSH32 0x7A65726F00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C7B PUSH1 0x24 DUP4 PUSH2 0x1AA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C86 DUP3 PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CA8 DUP2 PUSH2 0x1C6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6666736574206F7574206F6620626F756E6473000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CE3 PUSH1 0x14 DUP4 PUSH2 0x1AA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CEE DUP3 PUSH2 0x1CAF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D10 DUP2 PUSH2 0x1CD7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D21 DUP3 PUSH2 0x15D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D2C DUP4 PUSH2 0x15D3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1D44 JUMPI PUSH2 0x1D43 PUSH2 0x1B80 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1DAE DUP3 PUSH2 0x15D3 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1DE0 JUMPI PUSH2 0x1DDF PUSH2 0x1B80 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1DFE PUSH0 DUP4 ADD DUP6 PUSH2 0x1661 JUMP JUMPDEST PUSH2 0x1E0B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1661 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E20 DUP2 PUSH2 0x15DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E3B JUMPI PUSH2 0x1E3A PUSH2 0x1518 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E48 DUP5 DUP3 DUP6 ADD PUSH2 0x1E12 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420616C6C6F77616E636500000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E85 PUSH1 0x16 DUP4 PUSH2 0x1AA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E90 DUP3 PUSH2 0x1E51 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EB2 DUP2 PUSH2 0x1E79 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EE2 DUP4 DUP6 PUSH2 0x1AA0 JUMP JUMPDEST SWAP4 POP PUSH2 0x1EEF DUP4 DUP6 DUP5 PUSH2 0x1EB9 JUMP JUMPDEST PUSH2 0x1EF8 DUP4 PUSH2 0x1EC7 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F1C DUP2 DUP5 DUP7 PUSH2 0x1ED7 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F38 PUSH0 DUP4 ADD DUP6 PUSH2 0x1661 JUMP JUMPDEST PUSH2 0x1F45 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1931 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F5F PUSH0 DUP4 ADD DUP7 PUSH2 0x1661 JUMP JUMPDEST PUSH2 0x1F6C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1661 JUMP JUMPDEST PUSH2 0x1F79 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1931 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F94 PUSH0 DUP4 ADD DUP6 PUSH2 0x1661 JUMP JUMPDEST PUSH2 0x1FA1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x174F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF EXTCALL PUSH6 0x86EED2327A3F JUMPF 0xC5A9 STATICCALL BASEFEE PUSH18 0x9D66C53F90DCBDA49AD893D0D52F5E7AC364 PUSH20 0x6F6C634300081E00330000000000000000000000 ",
							"sourceMap": "241:4636:10:-:0;;;419:1;386:34;;1243:226;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1307:13;1288:9;;:33;;;;;;;;;;;;;;;;;;1376:42;2241:4:0;1387:18:10;;1407:10;1376;;;:42;;:::i;:::-;;1428:34;609:23;1451:10;1428;;;:34;;:::i;:::-;;1243:226;241:4636;;6155:316:0;6232:4;6253:22;6261:4;6267:7;6253;;;:22;;:::i;:::-;6248:217;;6323:4;6291:6;:12;6298:4;6291:12;;;;;;;;;;;:20;;:29;6312:7;6291:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6373:12;:10;;;:12;;:::i;:::-;6346:40;;6364:7;6346:40;;6358:4;6346:40;;;;;;;;;;6407:4;6400:11;;;;6248:217;6449:5;6442:12;;6155:316;;;;;:::o;2830:136::-;2907:4;2930:6;:12;2937:4;2930:12;;;;;;;;;;;:20;;:29;2951:7;2930:29;;;;;;;;;;;;;;;;;;;;;;;;;2923:36;;2830:136;;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;88:117:11:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;241:4636:10:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ADMIN_ROLE_1106": {
									"entryPoint": 3411,
									"id": 1106,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_30": {
									"entryPoint": 3604,
									"id": 30,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@REPAIR_COST_1101": {
									"entryPoint": 3711,
									"id": 1101,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_969": {
									"entryPoint": 5199,
									"id": 969,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_115": {
									"entryPoint": 5118,
									"id": 115,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_94": {
									"entryPoint": 4368,
									"id": 94,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_257": {
									"entryPoint": 4515,
									"id": 257,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1023": {
									"entryPoint": 4748,
									"id": 1023,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_295": {
									"entryPoint": 4755,
									"id": 295,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@gameToken_1091": {
									"entryPoint": 3616,
									"id": 1091,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getLeaderboard_1462": {
									"entryPoint": 2432,
									"id": 1462,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getRoleAdmin_129": {
									"entryPoint": 2073,
									"id": 129,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getScore_1274": {
									"entryPoint": 3724,
									"id": 1274,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantAdminRole_1539": {
									"entryPoint": 3653,
									"id": 1539,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@grantRole_148": {
									"entryPoint": 2101,
									"id": 148,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_81": {
									"entryPoint": 3447,
									"id": 81,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@playerAddresses_1124": {
									"entryPoint": 1134,
									"id": 1124,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@players_1121": {
									"entryPoint": 3830,
									"id": 1121,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceRole_190": {
									"entryPoint": 2309,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@repairVehicle_1501": {
									"entryPoint": 3862,
									"id": 1501,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeAdminRole_1553": {
									"entryPoint": 3546,
									"id": 1553,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@revokeRole_167": {
									"entryPoint": 3796,
									"id": 167,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransferFrom_619": {
									"entryPoint": 4988,
									"id": 619,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_592": {
									"entryPoint": 4388,
									"id": 592,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@submitScore_1261": {
									"entryPoint": 1193,
									"id": 1261,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1064": {
									"entryPoint": 4263,
									"id": 1064,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_63": {
									"entryPoint": 1013,
									"id": 63,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenMultiplier_1094": {
									"entryPoint": 3610,
									"id": 1094,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateTokenMultiplier_1525": {
									"entryPoint": 2135,
									"id": 1525,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5791,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 5904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5473,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_calldata_ptr": {
									"entryPoint": 6656,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 7698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 5924,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 6007,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_calldata_ptr": {
									"entryPoint": 6741,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 7718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 6069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encodeUpdatedPos_t_struct$_LeaderboardEntry_$1116_memory_ptr_to_t_struct$_LeaderboardEntry_$1116_memory_ptr": {
									"entryPoint": 6247,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 6172,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 5967,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$547_to_t_address_fromStack": {
									"entryPoint": 6565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7895,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_398ada248aa1fe4fb1217cf136e95109d6d0cf282d97dd6caac95b709fec5ccc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_89d1227f4ad2981902a8cceca87767b4412485e5f09406e0c7532110c6c96e36_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6872,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a9017d63cbf4a2c4f26e7cdb5a4fe6fa27d0445793ac73adc9717af021961238_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bd7762eaf702b467ee1c1a0b6ba487d7210427f0d0614f20734e4fa41b5fb777_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_LeaderboardEntry_$1116_memory_ptr_to_t_struct$_LeaderboardEntry_$1116_memory_ptr": {
									"entryPoint": 6202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 6187,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 7659,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8012,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 8065,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7973,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 5982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$547__to_t_address__fromStack_reversed": {
									"entryPoint": 6580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7939,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_398ada248aa1fe4fb1217cf136e95109d6d0cf282d97dd6caac95b709fec5ccc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_89d1227f4ad2981902a8cceca87767b4412485e5f09406e0c7532110c6c96e36__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a9017d63cbf4a2c4f26e7cdb5a4fe6fa27d0445793ac73adc9717af021961238__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7313,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bd7762eaf702b467ee1c1a0b6ba487d7210427f0d0614f20734e4fa41b5fb777__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6464,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6605,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 6157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 6131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 6270,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6816,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7085,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5536,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 5873,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5408,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5681,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$547_to_t_address": {
									"entryPoint": 6548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 6531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 6498,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 7865,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 6489,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 7588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7040,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7543,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7498,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 6648,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6644,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 6652,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5404,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5400,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7879,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_398ada248aa1fe4fb1217cf136e95109d6d0cf282d97dd6caac95b709fec5ccc": {
									"entryPoint": 6936,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc": {
									"entryPoint": 7761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_89d1227f4ad2981902a8cceca87767b4412485e5f09406e0c7532110c6c96e36": {
									"entryPoint": 6832,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a9017d63cbf4a2c4f26e7cdb5a4fe6fa27d0445793ac73adc9717af021961238": {
									"entryPoint": 7201,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bd7762eaf702b467ee1c1a0b6ba487d7210427f0d0614f20734e4fa41b5fb777": {
									"entryPoint": 7343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 5882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:22058:11",
										"nodeType": "YulBlock",
										"src": "0:22058:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "378:105:11",
													"nodeType": "YulBlock",
													"src": "378:105:11",
													"statements": [
														{
															"nativeSrc": "388:89:11",
															"nodeType": "YulAssignment",
															"src": "388:89:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:11",
																		"nodeType": "YulLiteral",
																		"src": "410:66:11",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:11"
																},
																"nativeSrc": "399:78:11",
																"nodeType": "YulFunctionCall",
																"src": "399:78:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:11",
														"nodeType": "YulTypedName",
														"src": "360:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:11",
														"nodeType": "YulTypedName",
														"src": "370:7:11",
														"type": ""
													}
												],
												"src": "334:149:11"
											},
											{
												"body": {
													"nativeSrc": "531:78:11",
													"nodeType": "YulBlock",
													"src": "531:78:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:11",
																"nodeType": "YulBlock",
																"src": "587:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:11",
																					"nodeType": "YulLiteral",
																					"src": "596:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:11",
																					"nodeType": "YulLiteral",
																					"src": "599:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:11"
																			},
																			"nativeSrc": "589:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:11"
																		},
																		"nativeSrc": "589:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:11",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:11"
																				},
																				"nativeSrc": "561:23:11",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:11"
																		},
																		"nativeSrc": "551:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:11"
																},
																"nativeSrc": "544:42:11",
																"nodeType": "YulFunctionCall",
																"src": "544:42:11"
															},
															"nativeSrc": "541:62:11",
															"nodeType": "YulIf",
															"src": "541:62:11"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:11",
														"nodeType": "YulTypedName",
														"src": "524:5:11",
														"type": ""
													}
												],
												"src": "489:120:11"
											},
											{
												"body": {
													"nativeSrc": "666:86:11",
													"nodeType": "YulBlock",
													"src": "666:86:11",
													"statements": [
														{
															"nativeSrc": "676:29:11",
															"nodeType": "YulAssignment",
															"src": "676:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:11"
																},
																"nativeSrc": "685:20:11",
																"nodeType": "YulFunctionCall",
																"src": "685:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:11",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:11"
																},
																"nativeSrc": "714:32:11",
																"nodeType": "YulFunctionCall",
																"src": "714:32:11"
															},
															"nativeSrc": "714:32:11",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:11"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:11",
														"nodeType": "YulTypedName",
														"src": "644:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:11",
														"nodeType": "YulTypedName",
														"src": "652:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:11",
														"nodeType": "YulTypedName",
														"src": "660:5:11",
														"type": ""
													}
												],
												"src": "615:137:11"
											},
											{
												"body": {
													"nativeSrc": "823:262:11",
													"nodeType": "YulBlock",
													"src": "823:262:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:11",
																"nodeType": "YulBlock",
																"src": "869:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:11"
																			},
																			"nativeSrc": "871:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:11"
																		},
																		"nativeSrc": "871:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:11"
																		},
																		"nativeSrc": "840:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:11",
																		"nodeType": "YulLiteral",
																		"src": "865:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:11"
																},
																"nativeSrc": "836:32:11",
																"nodeType": "YulFunctionCall",
																"src": "836:32:11"
															},
															"nativeSrc": "833:119:11",
															"nodeType": "YulIf",
															"src": "833:119:11"
														},
														{
															"nativeSrc": "962:116:11",
															"nodeType": "YulBlock",
															"src": "962:116:11",
															"statements": [
																{
																	"nativeSrc": "977:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:11",
																		"nodeType": "YulLiteral",
																		"src": "991:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:11",
																			"nodeType": "YulTypedName",
																			"src": "981:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:11",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:11"
																				},
																				"nativeSrc": "1036:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:11",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:11"
																		},
																		"nativeSrc": "1016:52:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:11",
														"nodeType": "YulTypedName",
														"src": "793:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:11",
														"nodeType": "YulTypedName",
														"src": "804:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:11",
														"nodeType": "YulTypedName",
														"src": "816:6:11",
														"type": ""
													}
												],
												"src": "758:327:11"
											},
											{
												"body": {
													"nativeSrc": "1133:48:11",
													"nodeType": "YulBlock",
													"src": "1133:48:11",
													"statements": [
														{
															"nativeSrc": "1143:32:11",
															"nodeType": "YulAssignment",
															"src": "1143:32:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:11"
																		},
																		"nativeSrc": "1161:13:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:11"
																},
																"nativeSrc": "1154:21:11",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:11",
														"nodeType": "YulTypedName",
														"src": "1115:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:11",
														"nodeType": "YulTypedName",
														"src": "1125:7:11",
														"type": ""
													}
												],
												"src": "1091:90:11"
											},
											{
												"body": {
													"nativeSrc": "1246:50:11",
													"nodeType": "YulBlock",
													"src": "1246:50:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:11",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:11"
																		},
																		"nativeSrc": "1268:21:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:11"
																},
																"nativeSrc": "1256:34:11",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:11"
															},
															"nativeSrc": "1256:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:11"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:11",
														"nodeType": "YulTypedName",
														"src": "1234:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:11",
														"nodeType": "YulTypedName",
														"src": "1241:3:11",
														"type": ""
													}
												],
												"src": "1187:109:11"
											},
											{
												"body": {
													"nativeSrc": "1394:118:11",
													"nodeType": "YulBlock",
													"src": "1394:118:11",
													"statements": [
														{
															"nativeSrc": "1404:26:11",
															"nodeType": "YulAssignment",
															"src": "1404:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:11"
																},
																"nativeSrc": "1412:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:11",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:11"
																		},
																		"nativeSrc": "1487:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:11",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:11"
																},
																"nativeSrc": "1440:65:11",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:11"
															},
															"nativeSrc": "1440:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:11",
														"nodeType": "YulTypedName",
														"src": "1366:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:11",
														"nodeType": "YulTypedName",
														"src": "1378:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:11",
														"nodeType": "YulTypedName",
														"src": "1389:4:11",
														"type": ""
													}
												],
												"src": "1302:210:11"
											},
											{
												"body": {
													"nativeSrc": "1563:32:11",
													"nodeType": "YulBlock",
													"src": "1563:32:11",
													"statements": [
														{
															"nativeSrc": "1573:16:11",
															"nodeType": "YulAssignment",
															"src": "1573:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "1584:5:11",
																"nodeType": "YulIdentifier",
																"src": "1584:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1518:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:11",
														"nodeType": "YulTypedName",
														"src": "1545:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:11",
														"nodeType": "YulTypedName",
														"src": "1555:7:11",
														"type": ""
													}
												],
												"src": "1518:77:11"
											},
											{
												"body": {
													"nativeSrc": "1644:79:11",
													"nodeType": "YulBlock",
													"src": "1644:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1701:16:11",
																"nodeType": "YulBlock",
																"src": "1701:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1710:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1710:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1713:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1713:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1703:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1703:6:11"
																			},
																			"nativeSrc": "1703:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1703:12:11"
																		},
																		"nativeSrc": "1703:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1703:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1667:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1667:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1692:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "1692:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1674:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "1674:17:11"
																				},
																				"nativeSrc": "1674:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1674:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1664:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1664:2:11"
																		},
																		"nativeSrc": "1664:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1664:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1657:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1657:6:11"
																},
																"nativeSrc": "1657:43:11",
																"nodeType": "YulFunctionCall",
																"src": "1657:43:11"
															},
															"nativeSrc": "1654:63:11",
															"nodeType": "YulIf",
															"src": "1654:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1601:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1637:5:11",
														"nodeType": "YulTypedName",
														"src": "1637:5:11",
														"type": ""
													}
												],
												"src": "1601:122:11"
											},
											{
												"body": {
													"nativeSrc": "1781:87:11",
													"nodeType": "YulBlock",
													"src": "1781:87:11",
													"statements": [
														{
															"nativeSrc": "1791:29:11",
															"nodeType": "YulAssignment",
															"src": "1791:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1813:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1813:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1800:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "1800:12:11"
																},
																"nativeSrc": "1800:20:11",
																"nodeType": "YulFunctionCall",
																"src": "1800:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1791:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1791:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1856:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1856:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1829:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "1829:26:11"
																},
																"nativeSrc": "1829:33:11",
																"nodeType": "YulFunctionCall",
																"src": "1829:33:11"
															},
															"nativeSrc": "1829:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "1829:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1729:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1759:6:11",
														"nodeType": "YulTypedName",
														"src": "1759:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1767:3:11",
														"nodeType": "YulTypedName",
														"src": "1767:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1775:5:11",
														"nodeType": "YulTypedName",
														"src": "1775:5:11",
														"type": ""
													}
												],
												"src": "1729:139:11"
											},
											{
												"body": {
													"nativeSrc": "1940:263:11",
													"nodeType": "YulBlock",
													"src": "1940:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1986:83:11",
																"nodeType": "YulBlock",
																"src": "1986:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1988:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "1988:77:11"
																			},
																			"nativeSrc": "1988:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1988:79:11"
																		},
																		"nativeSrc": "1988:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1988:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1961:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1961:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1970:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1970:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1957:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1957:3:11"
																		},
																		"nativeSrc": "1957:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1957:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1982:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1982:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1953:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1953:3:11"
																},
																"nativeSrc": "1953:32:11",
																"nodeType": "YulFunctionCall",
																"src": "1953:32:11"
															},
															"nativeSrc": "1950:119:11",
															"nodeType": "YulIf",
															"src": "1950:119:11"
														},
														{
															"nativeSrc": "2079:117:11",
															"nodeType": "YulBlock",
															"src": "2079:117:11",
															"statements": [
																{
																	"nativeSrc": "2094:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2094:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2108:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2108:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2098:6:11",
																			"nodeType": "YulTypedName",
																			"src": "2098:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2123:63:11",
																	"nodeType": "YulAssignment",
																	"src": "2123:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2158:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "2158:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2169:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2169:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2154:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2154:3:11"
																				},
																				"nativeSrc": "2154:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2154:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2178:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2178:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2133:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "2133:20:11"
																		},
																		"nativeSrc": "2133:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2133:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2123:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2123:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1874:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1910:9:11",
														"nodeType": "YulTypedName",
														"src": "1910:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1921:7:11",
														"nodeType": "YulTypedName",
														"src": "1921:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1933:6:11",
														"nodeType": "YulTypedName",
														"src": "1933:6:11",
														"type": ""
													}
												],
												"src": "1874:329:11"
											},
											{
												"body": {
													"nativeSrc": "2254:81:11",
													"nodeType": "YulBlock",
													"src": "2254:81:11",
													"statements": [
														{
															"nativeSrc": "2264:65:11",
															"nodeType": "YulAssignment",
															"src": "2264:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2279:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2279:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2286:42:11",
																		"nodeType": "YulLiteral",
																		"src": "2286:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2275:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2275:3:11"
																},
																"nativeSrc": "2275:54:11",
																"nodeType": "YulFunctionCall",
																"src": "2275:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2264:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2264:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2209:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2236:5:11",
														"nodeType": "YulTypedName",
														"src": "2236:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2246:7:11",
														"nodeType": "YulTypedName",
														"src": "2246:7:11",
														"type": ""
													}
												],
												"src": "2209:126:11"
											},
											{
												"body": {
													"nativeSrc": "2386:51:11",
													"nodeType": "YulBlock",
													"src": "2386:51:11",
													"statements": [
														{
															"nativeSrc": "2396:35:11",
															"nodeType": "YulAssignment",
															"src": "2396:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2425:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2425:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2407:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "2407:17:11"
																},
																"nativeSrc": "2407:24:11",
																"nodeType": "YulFunctionCall",
																"src": "2407:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2396:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2396:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2341:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2368:5:11",
														"nodeType": "YulTypedName",
														"src": "2368:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2378:7:11",
														"nodeType": "YulTypedName",
														"src": "2378:7:11",
														"type": ""
													}
												],
												"src": "2341:96:11"
											},
											{
												"body": {
													"nativeSrc": "2508:53:11",
													"nodeType": "YulBlock",
													"src": "2508:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2525:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2525:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2548:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2548:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2530:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "2530:17:11"
																		},
																		"nativeSrc": "2530:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2530:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2518:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2518:6:11"
																},
																"nativeSrc": "2518:37:11",
																"nodeType": "YulFunctionCall",
																"src": "2518:37:11"
															},
															"nativeSrc": "2518:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "2518:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2443:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2496:5:11",
														"nodeType": "YulTypedName",
														"src": "2496:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2503:3:11",
														"nodeType": "YulTypedName",
														"src": "2503:3:11",
														"type": ""
													}
												],
												"src": "2443:118:11"
											},
											{
												"body": {
													"nativeSrc": "2665:124:11",
													"nodeType": "YulBlock",
													"src": "2665:124:11",
													"statements": [
														{
															"nativeSrc": "2675:26:11",
															"nodeType": "YulAssignment",
															"src": "2675:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2687:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2687:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2698:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2698:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2683:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2683:3:11"
																},
																"nativeSrc": "2683:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2683:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2675:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2675:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2755:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2755:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2768:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2768:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2779:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2779:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2764:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2764:3:11"
																		},
																		"nativeSrc": "2764:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2764:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2711:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "2711:43:11"
																},
																"nativeSrc": "2711:71:11",
																"nodeType": "YulFunctionCall",
																"src": "2711:71:11"
															},
															"nativeSrc": "2711:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "2711:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2567:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2637:9:11",
														"nodeType": "YulTypedName",
														"src": "2637:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2649:6:11",
														"nodeType": "YulTypedName",
														"src": "2649:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2660:4:11",
														"nodeType": "YulTypedName",
														"src": "2660:4:11",
														"type": ""
													}
												],
												"src": "2567:222:11"
											},
											{
												"body": {
													"nativeSrc": "2838:79:11",
													"nodeType": "YulBlock",
													"src": "2838:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2895:16:11",
																"nodeType": "YulBlock",
																"src": "2895:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2904:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2904:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2907:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2907:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2897:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2897:6:11"
																			},
																			"nativeSrc": "2897:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2897:12:11"
																		},
																		"nativeSrc": "2897:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2897:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2861:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2861:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2886:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "2886:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2868:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "2868:17:11"
																				},
																				"nativeSrc": "2868:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2868:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2858:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "2858:2:11"
																		},
																		"nativeSrc": "2858:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2858:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2851:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2851:6:11"
																},
																"nativeSrc": "2851:43:11",
																"nodeType": "YulFunctionCall",
																"src": "2851:43:11"
															},
															"nativeSrc": "2848:63:11",
															"nodeType": "YulIf",
															"src": "2848:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2795:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2831:5:11",
														"nodeType": "YulTypedName",
														"src": "2831:5:11",
														"type": ""
													}
												],
												"src": "2795:122:11"
											},
											{
												"body": {
													"nativeSrc": "2975:87:11",
													"nodeType": "YulBlock",
													"src": "2975:87:11",
													"statements": [
														{
															"nativeSrc": "2985:29:11",
															"nodeType": "YulAssignment",
															"src": "2985:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3007:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3007:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2994:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2994:12:11"
																},
																"nativeSrc": "2994:20:11",
																"nodeType": "YulFunctionCall",
																"src": "2994:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2985:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2985:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3050:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3050:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3023:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "3023:26:11"
																},
																"nativeSrc": "3023:33:11",
																"nodeType": "YulFunctionCall",
																"src": "3023:33:11"
															},
															"nativeSrc": "3023:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "3023:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2923:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2953:6:11",
														"nodeType": "YulTypedName",
														"src": "2953:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2961:3:11",
														"nodeType": "YulTypedName",
														"src": "2961:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2969:5:11",
														"nodeType": "YulTypedName",
														"src": "2969:5:11",
														"type": ""
													}
												],
												"src": "2923:139:11"
											},
											{
												"body": {
													"nativeSrc": "3151:391:11",
													"nodeType": "YulBlock",
													"src": "3151:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3197:83:11",
																"nodeType": "YulBlock",
																"src": "3197:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3199:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "3199:77:11"
																			},
																			"nativeSrc": "3199:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3199:79:11"
																		},
																		"nativeSrc": "3199:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3199:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3172:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3172:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3181:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3181:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3168:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3168:3:11"
																		},
																		"nativeSrc": "3168:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3168:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3193:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3193:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3164:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3164:3:11"
																},
																"nativeSrc": "3164:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3164:32:11"
															},
															"nativeSrc": "3161:119:11",
															"nodeType": "YulIf",
															"src": "3161:119:11"
														},
														{
															"nativeSrc": "3290:117:11",
															"nodeType": "YulBlock",
															"src": "3290:117:11",
															"statements": [
																{
																	"nativeSrc": "3305:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3305:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3319:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3319:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3309:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3309:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3334:63:11",
																	"nodeType": "YulAssignment",
																	"src": "3334:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3369:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3369:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3380:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3380:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3365:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3365:3:11"
																				},
																				"nativeSrc": "3365:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3365:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3389:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3389:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3344:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "3344:20:11"
																		},
																		"nativeSrc": "3344:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3344:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3334:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3334:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3417:118:11",
															"nodeType": "YulBlock",
															"src": "3417:118:11",
															"statements": [
																{
																	"nativeSrc": "3432:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3432:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3446:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3446:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3436:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3436:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3462:63:11",
																	"nodeType": "YulAssignment",
																	"src": "3462:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3497:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3497:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3508:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3508:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3493:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3493:3:11"
																				},
																				"nativeSrc": "3493:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3493:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3517:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3517:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3472:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "3472:20:11"
																		},
																		"nativeSrc": "3472:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3472:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3462:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3462:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3068:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3113:9:11",
														"nodeType": "YulTypedName",
														"src": "3113:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3124:7:11",
														"nodeType": "YulTypedName",
														"src": "3124:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3136:6:11",
														"nodeType": "YulTypedName",
														"src": "3136:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3144:6:11",
														"nodeType": "YulTypedName",
														"src": "3144:6:11",
														"type": ""
													}
												],
												"src": "3068:474:11"
											},
											{
												"body": {
													"nativeSrc": "3593:32:11",
													"nodeType": "YulBlock",
													"src": "3593:32:11",
													"statements": [
														{
															"nativeSrc": "3603:16:11",
															"nodeType": "YulAssignment",
															"src": "3603:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "3614:5:11",
																"nodeType": "YulIdentifier",
																"src": "3614:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3603:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "3603:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "3548:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3575:5:11",
														"nodeType": "YulTypedName",
														"src": "3575:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3585:7:11",
														"nodeType": "YulTypedName",
														"src": "3585:7:11",
														"type": ""
													}
												],
												"src": "3548:77:11"
											},
											{
												"body": {
													"nativeSrc": "3674:79:11",
													"nodeType": "YulBlock",
													"src": "3674:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3731:16:11",
																"nodeType": "YulBlock",
																"src": "3731:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3740:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3740:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3743:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3743:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3733:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3733:6:11"
																			},
																			"nativeSrc": "3733:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3733:12:11"
																		},
																		"nativeSrc": "3733:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3733:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3697:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3697:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3722:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "3722:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "3704:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "3704:17:11"
																				},
																				"nativeSrc": "3704:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3704:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3694:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "3694:2:11"
																		},
																		"nativeSrc": "3694:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3694:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3687:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3687:6:11"
																},
																"nativeSrc": "3687:43:11",
																"nodeType": "YulFunctionCall",
																"src": "3687:43:11"
															},
															"nativeSrc": "3684:63:11",
															"nodeType": "YulIf",
															"src": "3684:63:11"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "3631:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3667:5:11",
														"nodeType": "YulTypedName",
														"src": "3667:5:11",
														"type": ""
													}
												],
												"src": "3631:122:11"
											},
											{
												"body": {
													"nativeSrc": "3811:87:11",
													"nodeType": "YulBlock",
													"src": "3811:87:11",
													"statements": [
														{
															"nativeSrc": "3821:29:11",
															"nodeType": "YulAssignment",
															"src": "3821:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3843:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3843:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3830:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "3830:12:11"
																},
																"nativeSrc": "3830:20:11",
																"nodeType": "YulFunctionCall",
																"src": "3830:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3821:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3821:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3886:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3886:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "3859:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "3859:26:11"
																},
																"nativeSrc": "3859:33:11",
																"nodeType": "YulFunctionCall",
																"src": "3859:33:11"
															},
															"nativeSrc": "3859:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "3859:33:11"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "3759:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3789:6:11",
														"nodeType": "YulTypedName",
														"src": "3789:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3797:3:11",
														"nodeType": "YulTypedName",
														"src": "3797:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3805:5:11",
														"nodeType": "YulTypedName",
														"src": "3805:5:11",
														"type": ""
													}
												],
												"src": "3759:139:11"
											},
											{
												"body": {
													"nativeSrc": "3970:263:11",
													"nodeType": "YulBlock",
													"src": "3970:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4016:83:11",
																"nodeType": "YulBlock",
																"src": "4016:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4018:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "4018:77:11"
																			},
																			"nativeSrc": "4018:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4018:79:11"
																		},
																		"nativeSrc": "4018:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4018:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3991:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3991:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4000:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4000:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3987:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3987:3:11"
																		},
																		"nativeSrc": "3987:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3987:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4012:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4012:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3983:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3983:3:11"
																},
																"nativeSrc": "3983:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3983:32:11"
															},
															"nativeSrc": "3980:119:11",
															"nodeType": "YulIf",
															"src": "3980:119:11"
														},
														{
															"nativeSrc": "4109:117:11",
															"nodeType": "YulBlock",
															"src": "4109:117:11",
															"statements": [
																{
																	"nativeSrc": "4124:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4124:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4138:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4138:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4128:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4128:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4153:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4153:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4188:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4188:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4199:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4199:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4184:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4184:3:11"
																				},
																				"nativeSrc": "4184:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4184:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4208:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4208:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "4163:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4163:20:11"
																		},
																		"nativeSrc": "4163:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4163:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4153:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4153:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "3904:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3940:9:11",
														"nodeType": "YulTypedName",
														"src": "3940:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3951:7:11",
														"nodeType": "YulTypedName",
														"src": "3951:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3963:6:11",
														"nodeType": "YulTypedName",
														"src": "3963:6:11",
														"type": ""
													}
												],
												"src": "3904:329:11"
											},
											{
												"body": {
													"nativeSrc": "4304:53:11",
													"nodeType": "YulBlock",
													"src": "4304:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4321:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4321:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4344:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "4344:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "4326:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "4326:17:11"
																		},
																		"nativeSrc": "4326:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4326:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4314:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4314:6:11"
																},
																"nativeSrc": "4314:37:11",
																"nodeType": "YulFunctionCall",
																"src": "4314:37:11"
															},
															"nativeSrc": "4314:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "4314:37:11"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "4239:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4292:5:11",
														"nodeType": "YulTypedName",
														"src": "4292:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4299:3:11",
														"nodeType": "YulTypedName",
														"src": "4299:3:11",
														"type": ""
													}
												],
												"src": "4239:118:11"
											},
											{
												"body": {
													"nativeSrc": "4461:124:11",
													"nodeType": "YulBlock",
													"src": "4461:124:11",
													"statements": [
														{
															"nativeSrc": "4471:26:11",
															"nodeType": "YulAssignment",
															"src": "4471:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4483:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4483:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4494:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4494:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4479:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4479:3:11"
																},
																"nativeSrc": "4479:18:11",
																"nodeType": "YulFunctionCall",
																"src": "4479:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4471:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4471:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4551:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4551:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4564:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4564:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4575:1:11",
																				"nodeType": "YulLiteral",
																				"src": "4575:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4560:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4560:3:11"
																		},
																		"nativeSrc": "4560:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4560:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "4507:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "4507:43:11"
																},
																"nativeSrc": "4507:71:11",
																"nodeType": "YulFunctionCall",
																"src": "4507:71:11"
															},
															"nativeSrc": "4507:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "4507:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "4363:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4433:9:11",
														"nodeType": "YulTypedName",
														"src": "4433:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4445:6:11",
														"nodeType": "YulTypedName",
														"src": "4445:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4456:4:11",
														"nodeType": "YulTypedName",
														"src": "4456:4:11",
														"type": ""
													}
												],
												"src": "4363:222:11"
											},
											{
												"body": {
													"nativeSrc": "4674:391:11",
													"nodeType": "YulBlock",
													"src": "4674:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4720:83:11",
																"nodeType": "YulBlock",
																"src": "4720:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4722:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "4722:77:11"
																			},
																			"nativeSrc": "4722:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4722:79:11"
																		},
																		"nativeSrc": "4722:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4722:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4695:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4695:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4704:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4704:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4691:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4691:3:11"
																		},
																		"nativeSrc": "4691:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4691:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4716:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4716:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4687:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4687:3:11"
																},
																"nativeSrc": "4687:32:11",
																"nodeType": "YulFunctionCall",
																"src": "4687:32:11"
															},
															"nativeSrc": "4684:119:11",
															"nodeType": "YulIf",
															"src": "4684:119:11"
														},
														{
															"nativeSrc": "4813:117:11",
															"nodeType": "YulBlock",
															"src": "4813:117:11",
															"statements": [
																{
																	"nativeSrc": "4828:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4828:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4842:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4842:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4832:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4832:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4857:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4857:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4892:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4892:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4903:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4903:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4888:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4888:3:11"
																				},
																				"nativeSrc": "4888:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4888:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4912:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4912:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "4867:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4867:20:11"
																		},
																		"nativeSrc": "4867:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4867:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4857:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4857:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4940:118:11",
															"nodeType": "YulBlock",
															"src": "4940:118:11",
															"statements": [
																{
																	"nativeSrc": "4955:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4955:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4969:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4969:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4959:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4959:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4985:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4985:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5020:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5020:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5031:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5031:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5016:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5016:3:11"
																				},
																				"nativeSrc": "5016:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5016:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5040:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5040:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4995:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4995:20:11"
																		},
																		"nativeSrc": "4995:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4995:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4985:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4985:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "4591:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4636:9:11",
														"nodeType": "YulTypedName",
														"src": "4636:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4647:7:11",
														"nodeType": "YulTypedName",
														"src": "4647:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4659:6:11",
														"nodeType": "YulTypedName",
														"src": "4659:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4667:6:11",
														"nodeType": "YulTypedName",
														"src": "4667:6:11",
														"type": ""
													}
												],
												"src": "4591:474:11"
											},
											{
												"body": {
													"nativeSrc": "5154:391:11",
													"nodeType": "YulBlock",
													"src": "5154:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5200:83:11",
																"nodeType": "YulBlock",
																"src": "5200:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5202:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "5202:77:11"
																			},
																			"nativeSrc": "5202:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5202:79:11"
																		},
																		"nativeSrc": "5202:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5202:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5175:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5175:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5184:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5184:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5171:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5171:3:11"
																		},
																		"nativeSrc": "5171:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5171:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5196:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5196:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5167:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5167:3:11"
																},
																"nativeSrc": "5167:32:11",
																"nodeType": "YulFunctionCall",
																"src": "5167:32:11"
															},
															"nativeSrc": "5164:119:11",
															"nodeType": "YulIf",
															"src": "5164:119:11"
														},
														{
															"nativeSrc": "5293:117:11",
															"nodeType": "YulBlock",
															"src": "5293:117:11",
															"statements": [
																{
																	"nativeSrc": "5308:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5308:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5322:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5322:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5312:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5312:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5337:63:11",
																	"nodeType": "YulAssignment",
																	"src": "5337:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5372:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5372:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5383:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5383:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5368:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5368:3:11"
																				},
																				"nativeSrc": "5368:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5368:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5392:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5392:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5347:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5347:20:11"
																		},
																		"nativeSrc": "5347:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5347:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5337:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5337:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5420:118:11",
															"nodeType": "YulBlock",
															"src": "5420:118:11",
															"statements": [
																{
																	"nativeSrc": "5435:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5435:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5449:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5449:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5439:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5439:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5465:63:11",
																	"nodeType": "YulAssignment",
																	"src": "5465:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5500:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5500:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5511:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5511:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5496:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5496:3:11"
																				},
																				"nativeSrc": "5496:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5496:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5520:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5520:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5475:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5475:20:11"
																		},
																		"nativeSrc": "5475:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5475:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5465:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5465:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "5071:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5116:9:11",
														"nodeType": "YulTypedName",
														"src": "5116:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5127:7:11",
														"nodeType": "YulTypedName",
														"src": "5127:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5139:6:11",
														"nodeType": "YulTypedName",
														"src": "5139:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5147:6:11",
														"nodeType": "YulTypedName",
														"src": "5147:6:11",
														"type": ""
													}
												],
												"src": "5071:474:11"
											},
											{
												"body": {
													"nativeSrc": "5659:40:11",
													"nodeType": "YulBlock",
													"src": "5659:40:11",
													"statements": [
														{
															"nativeSrc": "5670:22:11",
															"nodeType": "YulAssignment",
															"src": "5670:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5686:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "5686:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5680:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "5680:5:11"
																},
																"nativeSrc": "5680:12:11",
																"nodeType": "YulFunctionCall",
																"src": "5680:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5670:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5670:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "5551:148:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5642:5:11",
														"nodeType": "YulTypedName",
														"src": "5642:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5652:6:11",
														"nodeType": "YulTypedName",
														"src": "5652:6:11",
														"type": ""
													}
												],
												"src": "5551:148:11"
											},
											{
												"body": {
													"nativeSrc": "5850:73:11",
													"nodeType": "YulBlock",
													"src": "5850:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5867:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5867:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5872:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5872:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5860:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5860:6:11"
																},
																"nativeSrc": "5860:19:11",
																"nodeType": "YulFunctionCall",
																"src": "5860:19:11"
															},
															"nativeSrc": "5860:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "5860:19:11"
														},
														{
															"nativeSrc": "5888:29:11",
															"nodeType": "YulAssignment",
															"src": "5888:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5907:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5907:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5912:4:11",
																		"nodeType": "YulLiteral",
																		"src": "5912:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5903:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5903:3:11"
																},
																"nativeSrc": "5903:14:11",
																"nodeType": "YulFunctionCall",
																"src": "5903:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5888:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "5888:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "5705:218:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5822:3:11",
														"nodeType": "YulTypedName",
														"src": "5822:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5827:6:11",
														"nodeType": "YulTypedName",
														"src": "5827:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5838:11:11",
														"nodeType": "YulTypedName",
														"src": "5838:11:11",
														"type": ""
													}
												],
												"src": "5705:218:11"
											},
											{
												"body": {
													"nativeSrc": "6035:60:11",
													"nodeType": "YulBlock",
													"src": "6035:60:11",
													"statements": [
														{
															"nativeSrc": "6045:11:11",
															"nodeType": "YulAssignment",
															"src": "6045:11:11",
															"value": {
																"name": "ptr",
																"nativeSrc": "6053:3:11",
																"nodeType": "YulIdentifier",
																"src": "6053:3:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6045:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6045:4:11"
																}
															]
														},
														{
															"nativeSrc": "6066:22:11",
															"nodeType": "YulAssignment",
															"src": "6066:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "6078:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6078:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6083:4:11",
																		"nodeType": "YulLiteral",
																		"src": "6083:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6074:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6074:3:11"
																},
																"nativeSrc": "6074:14:11",
																"nodeType": "YulFunctionCall",
																"src": "6074:14:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6066:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6066:4:11"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "5929:166:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6022:3:11",
														"nodeType": "YulTypedName",
														"src": "6022:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "6030:4:11",
														"nodeType": "YulTypedName",
														"src": "6030:4:11",
														"type": ""
													}
												],
												"src": "5929:166:11"
											},
											{
												"body": {
													"nativeSrc": "6156:53:11",
													"nodeType": "YulBlock",
													"src": "6156:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6173:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6173:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6196:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6196:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6178:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "6178:17:11"
																		},
																		"nativeSrc": "6178:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6178:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6166:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6166:6:11"
																},
																"nativeSrc": "6166:37:11",
																"nodeType": "YulFunctionCall",
																"src": "6166:37:11"
															},
															"nativeSrc": "6166:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "6166:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "6101:108:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6144:5:11",
														"nodeType": "YulTypedName",
														"src": "6144:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6151:3:11",
														"nodeType": "YulTypedName",
														"src": "6151:3:11",
														"type": ""
													}
												],
												"src": "6101:108:11"
											},
											{
												"body": {
													"nativeSrc": "6270:53:11",
													"nodeType": "YulBlock",
													"src": "6270:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6287:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6287:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6310:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6310:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6292:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "6292:17:11"
																		},
																		"nativeSrc": "6292:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6292:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6280:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6280:6:11"
																},
																"nativeSrc": "6280:37:11",
																"nodeType": "YulFunctionCall",
																"src": "6280:37:11"
															},
															"nativeSrc": "6280:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "6280:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "6215:108:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6258:5:11",
														"nodeType": "YulTypedName",
														"src": "6258:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6265:3:11",
														"nodeType": "YulTypedName",
														"src": "6265:3:11",
														"type": ""
													}
												],
												"src": "6215:108:11"
											},
											{
												"body": {
													"nativeSrc": "6531:394:11",
													"nodeType": "YulBlock",
													"src": "6531:394:11",
													"statements": [
														{
															"nativeSrc": "6541:26:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6541:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6557:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6557:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6562:4:11",
																		"nodeType": "YulLiteral",
																		"src": "6562:4:11",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6553:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6553:3:11"
																},
																"nativeSrc": "6553:14:11",
																"nodeType": "YulFunctionCall",
																"src": "6553:14:11"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "6545:4:11",
																	"nodeType": "YulTypedName",
																	"src": "6545:4:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6577:166:11",
															"nodeType": "YulBlock",
															"src": "6577:166:11",
															"statements": [
																{
																	"nativeSrc": "6614:43:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6614:43:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6644:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "6644:5:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6651:4:11",
																						"nodeType": "YulLiteral",
																						"src": "6651:4:11",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6640:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6640:3:11"
																				},
																				"nativeSrc": "6640:16:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6640:16:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6634:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "6634:5:11"
																		},
																		"nativeSrc": "6634:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6634:23:11"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "6618:12:11",
																			"nodeType": "YulTypedName",
																			"src": "6618:12:11",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "6704:12:11",
																				"nodeType": "YulIdentifier",
																				"src": "6704:12:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6722:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "6722:3:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6727:4:11",
																						"nodeType": "YulLiteral",
																						"src": "6727:4:11",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6718:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6718:3:11"
																				},
																				"nativeSrc": "6718:14:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6718:14:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "6670:33:11",
																			"nodeType": "YulIdentifier",
																			"src": "6670:33:11"
																		},
																		"nativeSrc": "6670:63:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6670:63:11"
																	},
																	"nativeSrc": "6670:63:11",
																	"nodeType": "YulExpressionStatement",
																	"src": "6670:63:11"
																}
															]
														},
														{
															"nativeSrc": "6753:165:11",
															"nodeType": "YulBlock",
															"src": "6753:165:11",
															"statements": [
																{
																	"nativeSrc": "6789:43:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6789:43:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6819:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "6819:5:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6826:4:11",
																						"nodeType": "YulLiteral",
																						"src": "6826:4:11",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6815:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6815:3:11"
																				},
																				"nativeSrc": "6815:16:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6815:16:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6809:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "6809:5:11"
																		},
																		"nativeSrc": "6809:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6809:23:11"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "6793:12:11",
																			"nodeType": "YulTypedName",
																			"src": "6793:12:11",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "6879:12:11",
																				"nodeType": "YulIdentifier",
																				"src": "6879:12:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6897:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "6897:3:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6902:4:11",
																						"nodeType": "YulLiteral",
																						"src": "6902:4:11",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6893:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6893:3:11"
																				},
																				"nativeSrc": "6893:14:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6893:14:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "6845:33:11",
																			"nodeType": "YulIdentifier",
																			"src": "6845:33:11"
																		},
																		"nativeSrc": "6845:63:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6845:63:11"
																	},
																	"nativeSrc": "6845:63:11",
																	"nodeType": "YulExpressionStatement",
																	"src": "6845:63:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_LeaderboardEntry_$1116_memory_ptr_to_t_struct$_LeaderboardEntry_$1116_memory_ptr",
												"nativeSrc": "6407:518:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6518:5:11",
														"nodeType": "YulTypedName",
														"src": "6518:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6525:3:11",
														"nodeType": "YulTypedName",
														"src": "6525:3:11",
														"type": ""
													}
												],
												"src": "6407:518:11"
											},
											{
												"body": {
													"nativeSrc": "7079:167:11",
													"nodeType": "YulBlock",
													"src": "7079:167:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7191:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7191:6:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7199:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7199:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_LeaderboardEntry_$1116_memory_ptr_to_t_struct$_LeaderboardEntry_$1116_memory_ptr",
																	"nativeSrc": "7089:101:11",
																	"nodeType": "YulIdentifier",
																	"src": "7089:101:11"
																},
																"nativeSrc": "7089:114:11",
																"nodeType": "YulFunctionCall",
																"src": "7089:114:11"
															},
															"nativeSrc": "7089:114:11",
															"nodeType": "YulExpressionStatement",
															"src": "7089:114:11"
														},
														{
															"nativeSrc": "7212:28:11",
															"nodeType": "YulAssignment",
															"src": "7212:28:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7230:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7230:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7235:4:11",
																		"nodeType": "YulLiteral",
																		"src": "7235:4:11",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7226:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7226:3:11"
																},
																"nativeSrc": "7226:14:11",
																"nodeType": "YulFunctionCall",
																"src": "7226:14:11"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "7212:10:11",
																	"nodeType": "YulIdentifier",
																	"src": "7212:10:11"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_LeaderboardEntry_$1116_memory_ptr_to_t_struct$_LeaderboardEntry_$1116_memory_ptr",
												"nativeSrc": "6931:315:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "7052:6:11",
														"nodeType": "YulTypedName",
														"src": "7052:6:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7060:3:11",
														"nodeType": "YulTypedName",
														"src": "7060:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "7068:10:11",
														"nodeType": "YulTypedName",
														"src": "7068:10:11",
														"type": ""
													}
												],
												"src": "6931:315:11"
											},
											{
												"body": {
													"nativeSrc": "7361:38:11",
													"nodeType": "YulBlock",
													"src": "7361:38:11",
													"statements": [
														{
															"nativeSrc": "7371:22:11",
															"nodeType": "YulAssignment",
															"src": "7371:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "7383:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7383:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7388:4:11",
																		"nodeType": "YulLiteral",
																		"src": "7388:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7379:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7379:3:11"
																},
																"nativeSrc": "7379:14:11",
																"nodeType": "YulFunctionCall",
																"src": "7379:14:11"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "7371:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7371:4:11"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "7252:147:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "7348:3:11",
														"nodeType": "YulTypedName",
														"src": "7348:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "7356:4:11",
														"nodeType": "YulTypedName",
														"src": "7356:4:11",
														"type": ""
													}
												],
												"src": "7252:147:11"
											},
											{
												"body": {
													"nativeSrc": "7679:812:11",
													"nodeType": "YulBlock",
													"src": "7679:812:11",
													"statements": [
														{
															"nativeSrc": "7689:102:11",
															"nodeType": "YulVariableDeclaration",
															"src": "7689:102:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7785:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "7785:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "7703:81:11",
																	"nodeType": "YulIdentifier",
																	"src": "7703:81:11"
																},
																"nativeSrc": "7703:88:11",
																"nodeType": "YulFunctionCall",
																"src": "7703:88:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7693:6:11",
																	"nodeType": "YulTypedName",
																	"src": "7693:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7800:127:11",
															"nodeType": "YulAssignment",
															"src": "7800:127:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7915:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7915:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7920:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7920:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "7807:107:11",
																	"nodeType": "YulIdentifier",
																	"src": "7807:107:11"
																},
																"nativeSrc": "7807:120:11",
																"nodeType": "YulFunctionCall",
																"src": "7807:120:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7800:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7800:3:11"
																}
															]
														},
														{
															"nativeSrc": "7936:105:11",
															"nodeType": "YulVariableDeclaration",
															"src": "7936:105:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8035:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "8035:5:11"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "7951:83:11",
																	"nodeType": "YulIdentifier",
																	"src": "7951:83:11"
																},
																"nativeSrc": "7951:90:11",
																"nodeType": "YulFunctionCall",
																"src": "7951:90:11"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "7940:7:11",
																	"nodeType": "YulTypedName",
																	"src": "7940:7:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8050:21:11",
															"nodeType": "YulVariableDeclaration",
															"src": "8050:21:11",
															"value": {
																"name": "baseRef",
																"nativeSrc": "8064:7:11",
																"nodeType": "YulIdentifier",
																"src": "8064:7:11"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "8054:6:11",
																	"nodeType": "YulTypedName",
																	"src": "8054:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8140:326:11",
																"nodeType": "YulBlock",
																"src": "8140:326:11",
																"statements": [
																	{
																		"nativeSrc": "8154:34:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8154:34:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "8181:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "8181:6:11"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8175:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "8175:5:11"
																			},
																			"nativeSrc": "8175:13:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8175:13:11"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "8158:13:11",
																				"nodeType": "YulTypedName",
																				"src": "8158:13:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "8201:138:11",
																		"nodeType": "YulAssignment",
																		"src": "8201:138:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "8320:13:11",
																					"nodeType": "YulIdentifier",
																					"src": "8320:13:11"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "8335:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "8335:3:11"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_LeaderboardEntry_$1116_memory_ptr_to_t_struct$_LeaderboardEntry_$1116_memory_ptr",
																				"nativeSrc": "8208:111:11",
																				"nodeType": "YulIdentifier",
																				"src": "8208:111:11"
																			},
																			"nativeSrc": "8208:131:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8208:131:11"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "8201:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "8201:3:11"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8352:104:11",
																		"nodeType": "YulAssignment",
																		"src": "8352:104:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "8449:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "8449:6:11"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr",
																				"nativeSrc": "8362:86:11",
																				"nodeType": "YulIdentifier",
																				"src": "8362:86:11"
																			},
																			"nativeSrc": "8362:94:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8362:94:11"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "8352:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8352:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "8102:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "8102:1:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8105:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8105:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "8099:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "8099:2:11"
																},
																"nativeSrc": "8099:13:11",
																"nodeType": "YulFunctionCall",
																"src": "8099:13:11"
															},
															"nativeSrc": "8080:386:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "8113:18:11",
																"nodeType": "YulBlock",
																"src": "8113:18:11",
																"statements": [
																	{
																		"nativeSrc": "8115:14:11",
																		"nodeType": "YulAssignment",
																		"src": "8115:14:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "8124:1:11",
																					"nodeType": "YulIdentifier",
																					"src": "8124:1:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8127:1:11",
																					"nodeType": "YulLiteral",
																					"src": "8127:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8120:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "8120:3:11"
																			},
																			"nativeSrc": "8120:9:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8120:9:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "8115:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "8115:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "8084:14:11",
																"nodeType": "YulBlock",
																"src": "8084:14:11",
																"statements": [
																	{
																		"nativeSrc": "8086:10:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8086:10:11",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8095:1:11",
																			"nodeType": "YulLiteral",
																			"src": "8095:1:11",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "8090:1:11",
																				"nodeType": "YulTypedName",
																				"src": "8090:1:11",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "8080:386:11"
														},
														{
															"nativeSrc": "8475:10:11",
															"nodeType": "YulAssignment",
															"src": "8475:10:11",
															"value": {
																"name": "pos",
																"nativeSrc": "8482:3:11",
																"nodeType": "YulIdentifier",
																"src": "8482:3:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8475:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8475:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "7487:1004:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7658:5:11",
														"nodeType": "YulTypedName",
														"src": "7658:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7665:3:11",
														"nodeType": "YulTypedName",
														"src": "7665:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7674:3:11",
														"nodeType": "YulTypedName",
														"src": "7674:3:11",
														"type": ""
													}
												],
												"src": "7487:1004:11"
											},
											{
												"body": {
													"nativeSrc": "8713:293:11",
													"nodeType": "YulBlock",
													"src": "8713:293:11",
													"statements": [
														{
															"nativeSrc": "8723:26:11",
															"nodeType": "YulAssignment",
															"src": "8723:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8735:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8735:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8746:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8746:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8731:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8731:3:11"
																},
																"nativeSrc": "8731:18:11",
																"nodeType": "YulFunctionCall",
																"src": "8731:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8723:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8723:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8770:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8770:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8781:1:11",
																				"nodeType": "YulLiteral",
																				"src": "8781:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8766:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8766:3:11"
																		},
																		"nativeSrc": "8766:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8766:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8789:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "8789:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8795:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8795:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8785:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8785:3:11"
																		},
																		"nativeSrc": "8785:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8785:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8759:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8759:6:11"
																},
																"nativeSrc": "8759:47:11",
																"nodeType": "YulFunctionCall",
																"src": "8759:47:11"
															},
															"nativeSrc": "8759:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "8759:47:11"
														},
														{
															"nativeSrc": "8815:184:11",
															"nodeType": "YulAssignment",
															"src": "8815:184:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8985:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8985:6:11"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8994:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "8994:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "8823:161:11",
																	"nodeType": "YulIdentifier",
																	"src": "8823:161:11"
																},
																"nativeSrc": "8823:176:11",
																"nodeType": "YulFunctionCall",
																"src": "8823:176:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8815:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8815:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "8497:509:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8685:9:11",
														"nodeType": "YulTypedName",
														"src": "8685:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8697:6:11",
														"nodeType": "YulTypedName",
														"src": "8697:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8708:4:11",
														"nodeType": "YulTypedName",
														"src": "8708:4:11",
														"type": ""
													}
												],
												"src": "8497:509:11"
											},
											{
												"body": {
													"nativeSrc": "9078:263:11",
													"nodeType": "YulBlock",
													"src": "9078:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "9124:83:11",
																"nodeType": "YulBlock",
																"src": "9124:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9126:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "9126:77:11"
																			},
																			"nativeSrc": "9126:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9126:79:11"
																		},
																		"nativeSrc": "9126:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "9126:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9099:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "9099:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9108:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9108:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9095:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9095:3:11"
																		},
																		"nativeSrc": "9095:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9095:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9120:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9120:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9091:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9091:3:11"
																},
																"nativeSrc": "9091:32:11",
																"nodeType": "YulFunctionCall",
																"src": "9091:32:11"
															},
															"nativeSrc": "9088:119:11",
															"nodeType": "YulIf",
															"src": "9088:119:11"
														},
														{
															"nativeSrc": "9217:117:11",
															"nodeType": "YulBlock",
															"src": "9217:117:11",
															"statements": [
																{
																	"nativeSrc": "9232:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9232:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9246:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9246:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9236:6:11",
																			"nodeType": "YulTypedName",
																			"src": "9236:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9261:63:11",
																	"nodeType": "YulAssignment",
																	"src": "9261:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9296:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "9296:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9307:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "9307:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9292:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9292:3:11"
																				},
																				"nativeSrc": "9292:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9292:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9316:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "9316:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9271:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "9271:20:11"
																		},
																		"nativeSrc": "9271:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9271:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9261:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "9261:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "9012:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9048:9:11",
														"nodeType": "YulTypedName",
														"src": "9048:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9059:7:11",
														"nodeType": "YulTypedName",
														"src": "9059:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9071:6:11",
														"nodeType": "YulTypedName",
														"src": "9071:6:11",
														"type": ""
													}
												],
												"src": "9012:329:11"
											},
											{
												"body": {
													"nativeSrc": "9412:53:11",
													"nodeType": "YulBlock",
													"src": "9412:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9429:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9429:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9452:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "9452:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "9434:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "9434:17:11"
																		},
																		"nativeSrc": "9434:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9434:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9422:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9422:6:11"
																},
																"nativeSrc": "9422:37:11",
																"nodeType": "YulFunctionCall",
																"src": "9422:37:11"
															},
															"nativeSrc": "9422:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "9422:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "9347:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9400:5:11",
														"nodeType": "YulTypedName",
														"src": "9400:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9407:3:11",
														"nodeType": "YulTypedName",
														"src": "9407:3:11",
														"type": ""
													}
												],
												"src": "9347:118:11"
											},
											{
												"body": {
													"nativeSrc": "9569:124:11",
													"nodeType": "YulBlock",
													"src": "9569:124:11",
													"statements": [
														{
															"nativeSrc": "9579:26:11",
															"nodeType": "YulAssignment",
															"src": "9579:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9591:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9591:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9602:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9602:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9587:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9587:3:11"
																},
																"nativeSrc": "9587:18:11",
																"nodeType": "YulFunctionCall",
																"src": "9587:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9579:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9579:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9659:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9659:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9672:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9672:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9683:1:11",
																				"nodeType": "YulLiteral",
																				"src": "9683:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9668:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9668:3:11"
																		},
																		"nativeSrc": "9668:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9668:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9615:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "9615:43:11"
																},
																"nativeSrc": "9615:71:11",
																"nodeType": "YulFunctionCall",
																"src": "9615:71:11"
															},
															"nativeSrc": "9615:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "9615:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "9471:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9541:9:11",
														"nodeType": "YulTypedName",
														"src": "9541:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9553:6:11",
														"nodeType": "YulTypedName",
														"src": "9553:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9564:4:11",
														"nodeType": "YulTypedName",
														"src": "9564:4:11",
														"type": ""
													}
												],
												"src": "9471:222:11"
											},
											{
												"body": {
													"nativeSrc": "9731:28:11",
													"nodeType": "YulBlock",
													"src": "9731:28:11",
													"statements": [
														{
															"nativeSrc": "9741:12:11",
															"nodeType": "YulAssignment",
															"src": "9741:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "9748:5:11",
																"nodeType": "YulIdentifier",
																"src": "9748:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "9741:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9741:3:11"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "9699:60:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9717:5:11",
														"nodeType": "YulTypedName",
														"src": "9717:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "9727:3:11",
														"nodeType": "YulTypedName",
														"src": "9727:3:11",
														"type": ""
													}
												],
												"src": "9699:60:11"
											},
											{
												"body": {
													"nativeSrc": "9825:82:11",
													"nodeType": "YulBlock",
													"src": "9825:82:11",
													"statements": [
														{
															"nativeSrc": "9835:66:11",
															"nodeType": "YulAssignment",
															"src": "9835:66:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9893:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "9893:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "9875:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "9875:17:11"
																				},
																				"nativeSrc": "9875:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9875:24:11"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "9866:8:11",
																			"nodeType": "YulIdentifier",
																			"src": "9866:8:11"
																		},
																		"nativeSrc": "9866:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9866:34:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "9848:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "9848:17:11"
																},
																"nativeSrc": "9848:53:11",
																"nodeType": "YulFunctionCall",
																"src": "9848:53:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "9835:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "9835:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "9765:142:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9805:5:11",
														"nodeType": "YulTypedName",
														"src": "9805:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "9815:9:11",
														"nodeType": "YulTypedName",
														"src": "9815:9:11",
														"type": ""
													}
												],
												"src": "9765:142:11"
											},
											{
												"body": {
													"nativeSrc": "9973:66:11",
													"nodeType": "YulBlock",
													"src": "9973:66:11",
													"statements": [
														{
															"nativeSrc": "9983:50:11",
															"nodeType": "YulAssignment",
															"src": "9983:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10027:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "10027:5:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "9996:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "9996:30:11"
																},
																"nativeSrc": "9996:37:11",
																"nodeType": "YulFunctionCall",
																"src": "9996:37:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "9983:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "9983:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "9913:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9953:5:11",
														"nodeType": "YulTypedName",
														"src": "9953:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "9963:9:11",
														"nodeType": "YulTypedName",
														"src": "9963:9:11",
														"type": ""
													}
												],
												"src": "9913:126:11"
											},
											{
												"body": {
													"nativeSrc": "10119:66:11",
													"nodeType": "YulBlock",
													"src": "10119:66:11",
													"statements": [
														{
															"nativeSrc": "10129:50:11",
															"nodeType": "YulAssignment",
															"src": "10129:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10173:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "10173:5:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "10142:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "10142:30:11"
																},
																"nativeSrc": "10142:37:11",
																"nodeType": "YulFunctionCall",
																"src": "10142:37:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "10129:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "10129:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$547_to_t_address",
												"nativeSrc": "10045:140:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10099:5:11",
														"nodeType": "YulTypedName",
														"src": "10099:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "10109:9:11",
														"nodeType": "YulTypedName",
														"src": "10109:9:11",
														"type": ""
													}
												],
												"src": "10045:140:11"
											},
											{
												"body": {
													"nativeSrc": "10270:80:11",
													"nodeType": "YulBlock",
													"src": "10270:80:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10287:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10287:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10337:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "10337:5:11"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$547_to_t_address",
																			"nativeSrc": "10292:44:11",
																			"nodeType": "YulIdentifier",
																			"src": "10292:44:11"
																		},
																		"nativeSrc": "10292:51:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10292:51:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10280:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10280:6:11"
																},
																"nativeSrc": "10280:64:11",
																"nodeType": "YulFunctionCall",
																"src": "10280:64:11"
															},
															"nativeSrc": "10280:64:11",
															"nodeType": "YulExpressionStatement",
															"src": "10280:64:11"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$547_to_t_address_fromStack",
												"nativeSrc": "10191:159:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10258:5:11",
														"nodeType": "YulTypedName",
														"src": "10258:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10265:3:11",
														"nodeType": "YulTypedName",
														"src": "10265:3:11",
														"type": ""
													}
												],
												"src": "10191:159:11"
											},
											{
												"body": {
													"nativeSrc": "10468:138:11",
													"nodeType": "YulBlock",
													"src": "10468:138:11",
													"statements": [
														{
															"nativeSrc": "10478:26:11",
															"nodeType": "YulAssignment",
															"src": "10478:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10490:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10490:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10501:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10501:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10486:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10486:3:11"
																},
																"nativeSrc": "10486:18:11",
																"nodeType": "YulFunctionCall",
																"src": "10486:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10478:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10478:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10572:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "10572:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10585:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10585:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10596:1:11",
																				"nodeType": "YulLiteral",
																				"src": "10596:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10581:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10581:3:11"
																		},
																		"nativeSrc": "10581:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10581:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$547_to_t_address_fromStack",
																	"nativeSrc": "10514:57:11",
																	"nodeType": "YulIdentifier",
																	"src": "10514:57:11"
																},
																"nativeSrc": "10514:85:11",
																"nodeType": "YulFunctionCall",
																"src": "10514:85:11"
															},
															"nativeSrc": "10514:85:11",
															"nodeType": "YulExpressionStatement",
															"src": "10514:85:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$547__to_t_address__fromStack_reversed",
												"nativeSrc": "10356:250:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10440:9:11",
														"nodeType": "YulTypedName",
														"src": "10440:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10452:6:11",
														"nodeType": "YulTypedName",
														"src": "10452:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10463:4:11",
														"nodeType": "YulTypedName",
														"src": "10463:4:11",
														"type": ""
													}
												],
												"src": "10356:250:11"
											},
											{
												"body": {
													"nativeSrc": "10738:206:11",
													"nodeType": "YulBlock",
													"src": "10738:206:11",
													"statements": [
														{
															"nativeSrc": "10748:26:11",
															"nodeType": "YulAssignment",
															"src": "10748:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10760:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10760:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10771:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10771:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10756:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10756:3:11"
																},
																"nativeSrc": "10756:18:11",
																"nodeType": "YulFunctionCall",
																"src": "10756:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10748:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10748:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10828:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "10828:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10841:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10841:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10852:1:11",
																				"nodeType": "YulLiteral",
																				"src": "10852:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10837:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10837:3:11"
																		},
																		"nativeSrc": "10837:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10837:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10784:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "10784:43:11"
																},
																"nativeSrc": "10784:71:11",
																"nodeType": "YulFunctionCall",
																"src": "10784:71:11"
															},
															"nativeSrc": "10784:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "10784:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10909:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "10909:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10922:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10922:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10933:2:11",
																				"nodeType": "YulLiteral",
																				"src": "10933:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10918:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10918:3:11"
																		},
																		"nativeSrc": "10918:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10918:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10865:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "10865:43:11"
																},
																"nativeSrc": "10865:72:11",
																"nodeType": "YulFunctionCall",
																"src": "10865:72:11"
															},
															"nativeSrc": "10865:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "10865:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10612:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10702:9:11",
														"nodeType": "YulTypedName",
														"src": "10702:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10714:6:11",
														"nodeType": "YulTypedName",
														"src": "10714:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10722:6:11",
														"nodeType": "YulTypedName",
														"src": "10722:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10733:4:11",
														"nodeType": "YulTypedName",
														"src": "10733:4:11",
														"type": ""
													}
												],
												"src": "10612:332:11"
											},
											{
												"body": {
													"nativeSrc": "11039:28:11",
													"nodeType": "YulBlock",
													"src": "11039:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11056:1:11",
																		"nodeType": "YulLiteral",
																		"src": "11056:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11059:1:11",
																		"nodeType": "YulLiteral",
																		"src": "11059:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11049:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11049:6:11"
																},
																"nativeSrc": "11049:12:11",
																"nodeType": "YulFunctionCall",
																"src": "11049:12:11"
															},
															"nativeSrc": "11049:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "11049:12:11"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "10950:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "10950:117:11"
											},
											{
												"body": {
													"nativeSrc": "11162:28:11",
													"nodeType": "YulBlock",
													"src": "11162:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11179:1:11",
																		"nodeType": "YulLiteral",
																		"src": "11179:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11182:1:11",
																		"nodeType": "YulLiteral",
																		"src": "11182:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11172:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11172:6:11"
																},
																"nativeSrc": "11172:12:11",
																"nodeType": "YulFunctionCall",
																"src": "11172:12:11"
															},
															"nativeSrc": "11172:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "11172:12:11"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "11073:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "11073:117:11"
											},
											{
												"body": {
													"nativeSrc": "11285:28:11",
													"nodeType": "YulBlock",
													"src": "11285:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11302:1:11",
																		"nodeType": "YulLiteral",
																		"src": "11302:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11305:1:11",
																		"nodeType": "YulLiteral",
																		"src": "11305:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11295:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11295:6:11"
																},
																"nativeSrc": "11295:12:11",
																"nodeType": "YulFunctionCall",
																"src": "11295:12:11"
															},
															"nativeSrc": "11295:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "11295:12:11"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "11196:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "11196:117:11"
											},
											{
												"body": {
													"nativeSrc": "11408:478:11",
													"nodeType": "YulBlock",
													"src": "11408:478:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "11457:83:11",
																"nodeType": "YulBlock",
																"src": "11457:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "11459:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "11459:77:11"
																			},
																			"nativeSrc": "11459:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "11459:79:11"
																		},
																		"nativeSrc": "11459:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "11459:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "11436:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "11436:6:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11444:4:11",
																						"nodeType": "YulLiteral",
																						"src": "11444:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11432:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "11432:3:11"
																				},
																				"nativeSrc": "11432:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "11432:17:11"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "11451:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "11451:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "11428:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11428:3:11"
																		},
																		"nativeSrc": "11428:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11428:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11421:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11421:6:11"
																},
																"nativeSrc": "11421:35:11",
																"nodeType": "YulFunctionCall",
																"src": "11421:35:11"
															},
															"nativeSrc": "11418:122:11",
															"nodeType": "YulIf",
															"src": "11418:122:11"
														},
														{
															"nativeSrc": "11549:30:11",
															"nodeType": "YulAssignment",
															"src": "11549:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11572:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "11572:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "11559:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "11559:12:11"
																},
																"nativeSrc": "11559:20:11",
																"nodeType": "YulFunctionCall",
																"src": "11559:20:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11549:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11549:6:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11622:83:11",
																"nodeType": "YulBlock",
																"src": "11622:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "11624:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "11624:77:11"
																			},
																			"nativeSrc": "11624:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "11624:79:11"
																		},
																		"nativeSrc": "11624:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "11624:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "11594:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "11594:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11602:18:11",
																		"nodeType": "YulLiteral",
																		"src": "11602:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11591:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "11591:2:11"
																},
																"nativeSrc": "11591:30:11",
																"nodeType": "YulFunctionCall",
																"src": "11591:30:11"
															},
															"nativeSrc": "11588:117:11",
															"nodeType": "YulIf",
															"src": "11588:117:11"
														},
														{
															"nativeSrc": "11714:29:11",
															"nodeType": "YulAssignment",
															"src": "11714:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11730:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "11730:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11738:4:11",
																		"nodeType": "YulLiteral",
																		"src": "11738:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11726:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11726:3:11"
																},
																"nativeSrc": "11726:17:11",
																"nodeType": "YulFunctionCall",
																"src": "11726:17:11"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "11714:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "11714:8:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11797:83:11",
																"nodeType": "YulBlock",
																"src": "11797:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "11799:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "11799:77:11"
																			},
																			"nativeSrc": "11799:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "11799:79:11"
																		},
																		"nativeSrc": "11799:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "11799:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "11762:8:11",
																				"nodeType": "YulIdentifier",
																				"src": "11762:8:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "11776:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "11776:6:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11784:4:11",
																						"nodeType": "YulLiteral",
																						"src": "11784:4:11",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "11772:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "11772:3:11"
																				},
																				"nativeSrc": "11772:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "11772:17:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11758:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11758:3:11"
																		},
																		"nativeSrc": "11758:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11758:32:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11792:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11792:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11755:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "11755:2:11"
																},
																"nativeSrc": "11755:41:11",
																"nodeType": "YulFunctionCall",
																"src": "11755:41:11"
															},
															"nativeSrc": "11752:128:11",
															"nodeType": "YulIf",
															"src": "11752:128:11"
														}
													]
												},
												"name": "abi_decode_t_string_calldata_ptr",
												"nativeSrc": "11333:553:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11375:6:11",
														"nodeType": "YulTypedName",
														"src": "11375:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11383:3:11",
														"nodeType": "YulTypedName",
														"src": "11383:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "11391:8:11",
														"nodeType": "YulTypedName",
														"src": "11391:8:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11401:6:11",
														"nodeType": "YulTypedName",
														"src": "11401:6:11",
														"type": ""
													}
												],
												"src": "11333:553:11"
											},
											{
												"body": {
													"nativeSrc": "11978:443:11",
													"nodeType": "YulBlock",
													"src": "11978:443:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "12024:83:11",
																"nodeType": "YulBlock",
																"src": "12024:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12026:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "12026:77:11"
																			},
																			"nativeSrc": "12026:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "12026:79:11"
																		},
																		"nativeSrc": "12026:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "12026:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11999:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "11999:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12008:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12008:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11995:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11995:3:11"
																		},
																		"nativeSrc": "11995:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11995:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12020:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12020:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11991:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11991:3:11"
																},
																"nativeSrc": "11991:32:11",
																"nodeType": "YulFunctionCall",
																"src": "11991:32:11"
															},
															"nativeSrc": "11988:119:11",
															"nodeType": "YulIf",
															"src": "11988:119:11"
														},
														{
															"nativeSrc": "12117:297:11",
															"nodeType": "YulBlock",
															"src": "12117:297:11",
															"statements": [
																{
																	"nativeSrc": "12132:45:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12132:45:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12163:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "12163:9:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12174:1:11",
																						"nodeType": "YulLiteral",
																						"src": "12174:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12159:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "12159:3:11"
																				},
																				"nativeSrc": "12159:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "12159:17:11"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "12146:12:11",
																			"nodeType": "YulIdentifier",
																			"src": "12146:12:11"
																		},
																		"nativeSrc": "12146:31:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12146:31:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12136:6:11",
																			"nodeType": "YulTypedName",
																			"src": "12136:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12224:83:11",
																		"nodeType": "YulBlock",
																		"src": "12224:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12226:77:11",
																						"nodeType": "YulIdentifier",
																						"src": "12226:77:11"
																					},
																					"nativeSrc": "12226:79:11",
																					"nodeType": "YulFunctionCall",
																					"src": "12226:79:11"
																				},
																				"nativeSrc": "12226:79:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "12226:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12196:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "12196:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12204:18:11",
																				"nodeType": "YulLiteral",
																				"src": "12204:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12193:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "12193:2:11"
																		},
																		"nativeSrc": "12193:30:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12193:30:11"
																	},
																	"nativeSrc": "12190:117:11",
																	"nodeType": "YulIf",
																	"src": "12190:117:11"
																},
																{
																	"nativeSrc": "12321:83:11",
																	"nodeType": "YulAssignment",
																	"src": "12321:83:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12376:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "12376:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12387:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "12387:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12372:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "12372:3:11"
																				},
																				"nativeSrc": "12372:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "12372:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12396:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "12396:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_calldata_ptr",
																			"nativeSrc": "12339:32:11",
																			"nodeType": "YulIdentifier",
																			"src": "12339:32:11"
																		},
																		"nativeSrc": "12339:65:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12339:65:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12321:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "12321:6:11"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "12329:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "12329:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_calldata_ptr",
												"nativeSrc": "11892:529:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11940:9:11",
														"nodeType": "YulTypedName",
														"src": "11940:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11951:7:11",
														"nodeType": "YulTypedName",
														"src": "11951:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11963:6:11",
														"nodeType": "YulTypedName",
														"src": "11963:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11971:6:11",
														"nodeType": "YulTypedName",
														"src": "11971:6:11",
														"type": ""
													}
												],
												"src": "11892:529:11"
											},
											{
												"body": {
													"nativeSrc": "12523:73:11",
													"nodeType": "YulBlock",
													"src": "12523:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12540:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12540:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12545:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "12545:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12533:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12533:6:11"
																},
																"nativeSrc": "12533:19:11",
																"nodeType": "YulFunctionCall",
																"src": "12533:19:11"
															},
															"nativeSrc": "12533:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "12533:19:11"
														},
														{
															"nativeSrc": "12561:29:11",
															"nodeType": "YulAssignment",
															"src": "12561:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12580:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12580:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12585:4:11",
																		"nodeType": "YulLiteral",
																		"src": "12585:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12576:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12576:3:11"
																},
																"nativeSrc": "12576:14:11",
																"nodeType": "YulFunctionCall",
																"src": "12576:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "12561:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "12561:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "12427:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12495:3:11",
														"nodeType": "YulTypedName",
														"src": "12495:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12500:6:11",
														"nodeType": "YulTypedName",
														"src": "12500:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "12511:11:11",
														"nodeType": "YulTypedName",
														"src": "12511:11:11",
														"type": ""
													}
												],
												"src": "12427:169:11"
											},
											{
												"body": {
													"nativeSrc": "12708:66:11",
													"nodeType": "YulBlock",
													"src": "12708:66:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12730:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "12730:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12738:1:11",
																				"nodeType": "YulLiteral",
																				"src": "12738:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12726:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12726:3:11"
																		},
																		"nativeSrc": "12726:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12726:14:11"
																	},
																	{
																		"hexValue": "496e76616c696420706c617965722061646472657373",
																		"kind": "string",
																		"nativeSrc": "12742:24:11",
																		"nodeType": "YulLiteral",
																		"src": "12742:24:11",
																		"type": "",
																		"value": "Invalid player address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12719:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12719:6:11"
																},
																"nativeSrc": "12719:48:11",
																"nodeType": "YulFunctionCall",
																"src": "12719:48:11"
															},
															"nativeSrc": "12719:48:11",
															"nodeType": "YulExpressionStatement",
															"src": "12719:48:11"
														}
													]
												},
												"name": "store_literal_in_memory_89d1227f4ad2981902a8cceca87767b4412485e5f09406e0c7532110c6c96e36",
												"nativeSrc": "12602:172:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12700:6:11",
														"nodeType": "YulTypedName",
														"src": "12700:6:11",
														"type": ""
													}
												],
												"src": "12602:172:11"
											},
											{
												"body": {
													"nativeSrc": "12926:220:11",
													"nodeType": "YulBlock",
													"src": "12926:220:11",
													"statements": [
														{
															"nativeSrc": "12936:74:11",
															"nodeType": "YulAssignment",
															"src": "12936:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13002:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "13002:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13007:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13007:2:11",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12943:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "12943:58:11"
																},
																"nativeSrc": "12943:67:11",
																"nodeType": "YulFunctionCall",
																"src": "12943:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12936:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12936:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13108:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "13108:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_89d1227f4ad2981902a8cceca87767b4412485e5f09406e0c7532110c6c96e36",
																	"nativeSrc": "13019:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "13019:88:11"
																},
																"nativeSrc": "13019:93:11",
																"nodeType": "YulFunctionCall",
																"src": "13019:93:11"
															},
															"nativeSrc": "13019:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "13019:93:11"
														},
														{
															"nativeSrc": "13121:19:11",
															"nodeType": "YulAssignment",
															"src": "13121:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13132:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "13132:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13137:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13137:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13128:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13128:3:11"
																},
																"nativeSrc": "13128:12:11",
																"nodeType": "YulFunctionCall",
																"src": "13128:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13121:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13121:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_89d1227f4ad2981902a8cceca87767b4412485e5f09406e0c7532110c6c96e36_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12780:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12914:3:11",
														"nodeType": "YulTypedName",
														"src": "12914:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12922:3:11",
														"nodeType": "YulTypedName",
														"src": "12922:3:11",
														"type": ""
													}
												],
												"src": "12780:366:11"
											},
											{
												"body": {
													"nativeSrc": "13323:248:11",
													"nodeType": "YulBlock",
													"src": "13323:248:11",
													"statements": [
														{
															"nativeSrc": "13333:26:11",
															"nodeType": "YulAssignment",
															"src": "13333:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13345:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "13345:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13356:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13356:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13341:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13341:3:11"
																},
																"nativeSrc": "13341:18:11",
																"nodeType": "YulFunctionCall",
																"src": "13341:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13333:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "13333:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13380:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13380:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13391:1:11",
																				"nodeType": "YulLiteral",
																				"src": "13391:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13376:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13376:3:11"
																		},
																		"nativeSrc": "13376:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13376:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13399:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "13399:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13405:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13405:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13395:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13395:3:11"
																		},
																		"nativeSrc": "13395:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13395:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13369:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13369:6:11"
																},
																"nativeSrc": "13369:47:11",
																"nodeType": "YulFunctionCall",
																"src": "13369:47:11"
															},
															"nativeSrc": "13369:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "13369:47:11"
														},
														{
															"nativeSrc": "13425:139:11",
															"nodeType": "YulAssignment",
															"src": "13425:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13559:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "13559:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_89d1227f4ad2981902a8cceca87767b4412485e5f09406e0c7532110c6c96e36_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13433:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "13433:124:11"
																},
																"nativeSrc": "13433:131:11",
																"nodeType": "YulFunctionCall",
																"src": "13433:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13425:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "13425:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_89d1227f4ad2981902a8cceca87767b4412485e5f09406e0c7532110c6c96e36__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13152:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13303:9:11",
														"nodeType": "YulTypedName",
														"src": "13303:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13318:4:11",
														"nodeType": "YulTypedName",
														"src": "13318:4:11",
														"type": ""
													}
												],
												"src": "13152:419:11"
											},
											{
												"body": {
													"nativeSrc": "13683:75:11",
													"nodeType": "YulBlock",
													"src": "13683:75:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13705:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "13705:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13713:1:11",
																				"nodeType": "YulLiteral",
																				"src": "13713:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13701:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13701:3:11"
																		},
																		"nativeSrc": "13701:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13701:14:11"
																	},
																	{
																		"hexValue": "53636f7265206d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "13717:33:11",
																		"nodeType": "YulLiteral",
																		"src": "13717:33:11",
																		"type": "",
																		"value": "Score must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13694:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13694:6:11"
																},
																"nativeSrc": "13694:57:11",
																"nodeType": "YulFunctionCall",
																"src": "13694:57:11"
															},
															"nativeSrc": "13694:57:11",
															"nodeType": "YulExpressionStatement",
															"src": "13694:57:11"
														}
													]
												},
												"name": "store_literal_in_memory_398ada248aa1fe4fb1217cf136e95109d6d0cf282d97dd6caac95b709fec5ccc",
												"nativeSrc": "13577:181:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13675:6:11",
														"nodeType": "YulTypedName",
														"src": "13675:6:11",
														"type": ""
													}
												],
												"src": "13577:181:11"
											},
											{
												"body": {
													"nativeSrc": "13910:220:11",
													"nodeType": "YulBlock",
													"src": "13910:220:11",
													"statements": [
														{
															"nativeSrc": "13920:74:11",
															"nodeType": "YulAssignment",
															"src": "13920:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13986:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "13986:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13991:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13991:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13927:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "13927:58:11"
																},
																"nativeSrc": "13927:67:11",
																"nodeType": "YulFunctionCall",
																"src": "13927:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13920:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13920:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14092:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "14092:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_398ada248aa1fe4fb1217cf136e95109d6d0cf282d97dd6caac95b709fec5ccc",
																	"nativeSrc": "14003:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "14003:88:11"
																},
																"nativeSrc": "14003:93:11",
																"nodeType": "YulFunctionCall",
																"src": "14003:93:11"
															},
															"nativeSrc": "14003:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "14003:93:11"
														},
														{
															"nativeSrc": "14105:19:11",
															"nodeType": "YulAssignment",
															"src": "14105:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14116:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "14116:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14121:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14121:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14112:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14112:3:11"
																},
																"nativeSrc": "14112:12:11",
																"nodeType": "YulFunctionCall",
																"src": "14112:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14105:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14105:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_398ada248aa1fe4fb1217cf136e95109d6d0cf282d97dd6caac95b709fec5ccc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13764:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13898:3:11",
														"nodeType": "YulTypedName",
														"src": "13898:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13906:3:11",
														"nodeType": "YulTypedName",
														"src": "13906:3:11",
														"type": ""
													}
												],
												"src": "13764:366:11"
											},
											{
												"body": {
													"nativeSrc": "14307:248:11",
													"nodeType": "YulBlock",
													"src": "14307:248:11",
													"statements": [
														{
															"nativeSrc": "14317:26:11",
															"nodeType": "YulAssignment",
															"src": "14317:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14329:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "14329:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14340:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14340:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14325:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14325:3:11"
																},
																"nativeSrc": "14325:18:11",
																"nodeType": "YulFunctionCall",
																"src": "14325:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14317:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "14317:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14364:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14364:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14375:1:11",
																				"nodeType": "YulLiteral",
																				"src": "14375:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14360:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14360:3:11"
																		},
																		"nativeSrc": "14360:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14360:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14383:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "14383:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14389:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14389:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14379:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14379:3:11"
																		},
																		"nativeSrc": "14379:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14379:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14353:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14353:6:11"
																},
																"nativeSrc": "14353:47:11",
																"nodeType": "YulFunctionCall",
																"src": "14353:47:11"
															},
															"nativeSrc": "14353:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "14353:47:11"
														},
														{
															"nativeSrc": "14409:139:11",
															"nodeType": "YulAssignment",
															"src": "14409:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14543:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "14543:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_398ada248aa1fe4fb1217cf136e95109d6d0cf282d97dd6caac95b709fec5ccc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14417:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "14417:124:11"
																},
																"nativeSrc": "14417:131:11",
																"nodeType": "YulFunctionCall",
																"src": "14417:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14409:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "14409:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_398ada248aa1fe4fb1217cf136e95109d6d0cf282d97dd6caac95b709fec5ccc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14136:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14287:9:11",
														"nodeType": "YulTypedName",
														"src": "14287:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14302:4:11",
														"nodeType": "YulTypedName",
														"src": "14302:4:11",
														"type": ""
													}
												],
												"src": "14136:419:11"
											},
											{
												"body": {
													"nativeSrc": "14589:152:11",
													"nodeType": "YulBlock",
													"src": "14589:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14606:1:11",
																		"nodeType": "YulLiteral",
																		"src": "14606:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14609:77:11",
																		"nodeType": "YulLiteral",
																		"src": "14609:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14599:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14599:6:11"
																},
																"nativeSrc": "14599:88:11",
																"nodeType": "YulFunctionCall",
																"src": "14599:88:11"
															},
															"nativeSrc": "14599:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "14599:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14703:1:11",
																		"nodeType": "YulLiteral",
																		"src": "14703:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14706:4:11",
																		"nodeType": "YulLiteral",
																		"src": "14706:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14696:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14696:6:11"
																},
																"nativeSrc": "14696:15:11",
																"nodeType": "YulFunctionCall",
																"src": "14696:15:11"
															},
															"nativeSrc": "14696:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "14696:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14727:1:11",
																		"nodeType": "YulLiteral",
																		"src": "14727:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14730:4:11",
																		"nodeType": "YulLiteral",
																		"src": "14730:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14720:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14720:6:11"
																},
																"nativeSrc": "14720:15:11",
																"nodeType": "YulFunctionCall",
																"src": "14720:15:11"
															},
															"nativeSrc": "14720:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "14720:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "14561:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "14561:180:11"
											},
											{
												"body": {
													"nativeSrc": "14791:147:11",
													"nodeType": "YulBlock",
													"src": "14791:147:11",
													"statements": [
														{
															"nativeSrc": "14801:25:11",
															"nodeType": "YulAssignment",
															"src": "14801:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14824:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "14824:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14806:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "14806:17:11"
																},
																"nativeSrc": "14806:20:11",
																"nodeType": "YulFunctionCall",
																"src": "14806:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14801:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "14801:1:11"
																}
															]
														},
														{
															"nativeSrc": "14835:25:11",
															"nodeType": "YulAssignment",
															"src": "14835:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14858:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "14858:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14840:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "14840:17:11"
																},
																"nativeSrc": "14840:20:11",
																"nodeType": "YulFunctionCall",
																"src": "14840:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14835:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "14835:1:11"
																}
															]
														},
														{
															"nativeSrc": "14869:16:11",
															"nodeType": "YulAssignment",
															"src": "14869:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14880:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "14880:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14883:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "14883:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14876:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14876:3:11"
																},
																"nativeSrc": "14876:9:11",
																"nodeType": "YulFunctionCall",
																"src": "14876:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "14869:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14869:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14909:22:11",
																"nodeType": "YulBlock",
																"src": "14909:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14911:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "14911:16:11"
																			},
																			"nativeSrc": "14911:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "14911:18:11"
																		},
																		"nativeSrc": "14911:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "14911:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14901:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "14901:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "14904:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "14904:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14898:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "14898:2:11"
																},
																"nativeSrc": "14898:10:11",
																"nodeType": "YulFunctionCall",
																"src": "14898:10:11"
															},
															"nativeSrc": "14895:36:11",
															"nodeType": "YulIf",
															"src": "14895:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "14747:191:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14778:1:11",
														"nodeType": "YulTypedName",
														"src": "14778:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14781:1:11",
														"nodeType": "YulTypedName",
														"src": "14781:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "14787:3:11",
														"nodeType": "YulTypedName",
														"src": "14787:3:11",
														"type": ""
													}
												],
												"src": "14747:191:11"
											},
											{
												"body": {
													"nativeSrc": "14992:362:11",
													"nodeType": "YulBlock",
													"src": "14992:362:11",
													"statements": [
														{
															"nativeSrc": "15002:25:11",
															"nodeType": "YulAssignment",
															"src": "15002:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15025:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "15025:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15007:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "15007:17:11"
																},
																"nativeSrc": "15007:20:11",
																"nodeType": "YulFunctionCall",
																"src": "15007:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15002:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "15002:1:11"
																}
															]
														},
														{
															"nativeSrc": "15036:25:11",
															"nodeType": "YulAssignment",
															"src": "15036:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15059:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "15059:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15041:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "15041:17:11"
																},
																"nativeSrc": "15041:20:11",
																"nodeType": "YulFunctionCall",
																"src": "15041:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15036:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "15036:1:11"
																}
															]
														},
														{
															"nativeSrc": "15070:28:11",
															"nodeType": "YulVariableDeclaration",
															"src": "15070:28:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15093:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "15093:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15096:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "15096:1:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "15089:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15089:3:11"
																},
																"nativeSrc": "15089:9:11",
																"nodeType": "YulFunctionCall",
																"src": "15089:9:11"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "15074:11:11",
																	"nodeType": "YulTypedName",
																	"src": "15074:11:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15107:41:11",
															"nodeType": "YulAssignment",
															"src": "15107:41:11",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "15136:11:11",
																		"nodeType": "YulIdentifier",
																		"src": "15136:11:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15118:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "15118:17:11"
																},
																"nativeSrc": "15118:30:11",
																"nodeType": "YulFunctionCall",
																"src": "15118:30:11"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "15107:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "15107:7:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15325:22:11",
																"nodeType": "YulBlock",
																"src": "15325:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15327:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "15327:16:11"
																			},
																			"nativeSrc": "15327:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "15327:18:11"
																		},
																		"nativeSrc": "15327:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "15327:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "15258:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "15258:1:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "15251:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "15251:6:11"
																				},
																				"nativeSrc": "15251:9:11",
																				"nodeType": "YulFunctionCall",
																				"src": "15251:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "15281:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "15281:1:11"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "15288:7:11",
																								"nodeType": "YulIdentifier",
																								"src": "15288:7:11"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "15297:1:11",
																								"nodeType": "YulIdentifier",
																								"src": "15297:1:11"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "15284:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "15284:3:11"
																						},
																						"nativeSrc": "15284:15:11",
																						"nodeType": "YulFunctionCall",
																						"src": "15284:15:11"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "15278:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "15278:2:11"
																				},
																				"nativeSrc": "15278:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "15278:22:11"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "15231:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "15231:2:11"
																		},
																		"nativeSrc": "15231:83:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15231:83:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15211:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15211:6:11"
																},
																"nativeSrc": "15211:113:11",
																"nodeType": "YulFunctionCall",
																"src": "15211:113:11"
															},
															"nativeSrc": "15208:139:11",
															"nodeType": "YulIf",
															"src": "15208:139:11"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "14944:410:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14975:1:11",
														"nodeType": "YulTypedName",
														"src": "14975:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14978:1:11",
														"nodeType": "YulTypedName",
														"src": "14978:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "14984:7:11",
														"nodeType": "YulTypedName",
														"src": "14984:7:11",
														"type": ""
													}
												],
												"src": "14944:410:11"
											},
											{
												"body": {
													"nativeSrc": "15466:117:11",
													"nodeType": "YulBlock",
													"src": "15466:117:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15488:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "15488:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15496:1:11",
																				"nodeType": "YulLiteral",
																				"src": "15496:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15484:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15484:3:11"
																		},
																		"nativeSrc": "15484:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15484:14:11"
																	},
																	{
																		"hexValue": "4d756c7469706c696572206d7573742062652067726561746572207468616e20",
																		"kind": "string",
																		"nativeSrc": "15500:34:11",
																		"nodeType": "YulLiteral",
																		"src": "15500:34:11",
																		"type": "",
																		"value": "Multiplier must be greater than "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15477:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15477:6:11"
																},
																"nativeSrc": "15477:58:11",
																"nodeType": "YulFunctionCall",
																"src": "15477:58:11"
															},
															"nativeSrc": "15477:58:11",
															"nodeType": "YulExpressionStatement",
															"src": "15477:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15556:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "15556:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15564:2:11",
																				"nodeType": "YulLiteral",
																				"src": "15564:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15552:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15552:3:11"
																		},
																		"nativeSrc": "15552:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15552:15:11"
																	},
																	{
																		"hexValue": "7a65726f",
																		"kind": "string",
																		"nativeSrc": "15569:6:11",
																		"nodeType": "YulLiteral",
																		"src": "15569:6:11",
																		"type": "",
																		"value": "zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15545:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15545:6:11"
																},
																"nativeSrc": "15545:31:11",
																"nodeType": "YulFunctionCall",
																"src": "15545:31:11"
															},
															"nativeSrc": "15545:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "15545:31:11"
														}
													]
												},
												"name": "store_literal_in_memory_a9017d63cbf4a2c4f26e7cdb5a4fe6fa27d0445793ac73adc9717af021961238",
												"nativeSrc": "15360:223:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15458:6:11",
														"nodeType": "YulTypedName",
														"src": "15458:6:11",
														"type": ""
													}
												],
												"src": "15360:223:11"
											},
											{
												"body": {
													"nativeSrc": "15735:220:11",
													"nodeType": "YulBlock",
													"src": "15735:220:11",
													"statements": [
														{
															"nativeSrc": "15745:74:11",
															"nodeType": "YulAssignment",
															"src": "15745:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15811:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "15811:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15816:2:11",
																		"nodeType": "YulLiteral",
																		"src": "15816:2:11",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15752:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "15752:58:11"
																},
																"nativeSrc": "15752:67:11",
																"nodeType": "YulFunctionCall",
																"src": "15752:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15745:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15745:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15917:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "15917:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a9017d63cbf4a2c4f26e7cdb5a4fe6fa27d0445793ac73adc9717af021961238",
																	"nativeSrc": "15828:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "15828:88:11"
																},
																"nativeSrc": "15828:93:11",
																"nodeType": "YulFunctionCall",
																"src": "15828:93:11"
															},
															"nativeSrc": "15828:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "15828:93:11"
														},
														{
															"nativeSrc": "15930:19:11",
															"nodeType": "YulAssignment",
															"src": "15930:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15941:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "15941:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15946:2:11",
																		"nodeType": "YulLiteral",
																		"src": "15946:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15937:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15937:3:11"
																},
																"nativeSrc": "15937:12:11",
																"nodeType": "YulFunctionCall",
																"src": "15937:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15930:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15930:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a9017d63cbf4a2c4f26e7cdb5a4fe6fa27d0445793ac73adc9717af021961238_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15589:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15723:3:11",
														"nodeType": "YulTypedName",
														"src": "15723:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15731:3:11",
														"nodeType": "YulTypedName",
														"src": "15731:3:11",
														"type": ""
													}
												],
												"src": "15589:366:11"
											},
											{
												"body": {
													"nativeSrc": "16132:248:11",
													"nodeType": "YulBlock",
													"src": "16132:248:11",
													"statements": [
														{
															"nativeSrc": "16142:26:11",
															"nodeType": "YulAssignment",
															"src": "16142:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16154:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "16154:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16165:2:11",
																		"nodeType": "YulLiteral",
																		"src": "16165:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16150:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16150:3:11"
																},
																"nativeSrc": "16150:18:11",
																"nodeType": "YulFunctionCall",
																"src": "16150:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16142:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "16142:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16189:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "16189:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16200:1:11",
																				"nodeType": "YulLiteral",
																				"src": "16200:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16185:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "16185:3:11"
																		},
																		"nativeSrc": "16185:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "16185:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16208:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "16208:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16214:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "16214:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16204:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "16204:3:11"
																		},
																		"nativeSrc": "16204:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "16204:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16178:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "16178:6:11"
																},
																"nativeSrc": "16178:47:11",
																"nodeType": "YulFunctionCall",
																"src": "16178:47:11"
															},
															"nativeSrc": "16178:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "16178:47:11"
														},
														{
															"nativeSrc": "16234:139:11",
															"nodeType": "YulAssignment",
															"src": "16234:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16368:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "16368:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a9017d63cbf4a2c4f26e7cdb5a4fe6fa27d0445793ac73adc9717af021961238_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16242:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "16242:124:11"
																},
																"nativeSrc": "16242:131:11",
																"nodeType": "YulFunctionCall",
																"src": "16242:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16234:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "16234:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a9017d63cbf4a2c4f26e7cdb5a4fe6fa27d0445793ac73adc9717af021961238__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15961:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16112:9:11",
														"nodeType": "YulTypedName",
														"src": "16112:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16127:4:11",
														"nodeType": "YulTypedName",
														"src": "16127:4:11",
														"type": ""
													}
												],
												"src": "15961:419:11"
											},
											{
												"body": {
													"nativeSrc": "16492:64:11",
													"nodeType": "YulBlock",
													"src": "16492:64:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16514:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "16514:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16522:1:11",
																				"nodeType": "YulLiteral",
																				"src": "16522:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16510:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "16510:3:11"
																		},
																		"nativeSrc": "16510:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "16510:14:11"
																	},
																	{
																		"hexValue": "4f6666736574206f7574206f6620626f756e6473",
																		"kind": "string",
																		"nativeSrc": "16526:22:11",
																		"nodeType": "YulLiteral",
																		"src": "16526:22:11",
																		"type": "",
																		"value": "Offset out of bounds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16503:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "16503:6:11"
																},
																"nativeSrc": "16503:46:11",
																"nodeType": "YulFunctionCall",
																"src": "16503:46:11"
															},
															"nativeSrc": "16503:46:11",
															"nodeType": "YulExpressionStatement",
															"src": "16503:46:11"
														}
													]
												},
												"name": "store_literal_in_memory_bd7762eaf702b467ee1c1a0b6ba487d7210427f0d0614f20734e4fa41b5fb777",
												"nativeSrc": "16386:170:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16484:6:11",
														"nodeType": "YulTypedName",
														"src": "16484:6:11",
														"type": ""
													}
												],
												"src": "16386:170:11"
											},
											{
												"body": {
													"nativeSrc": "16708:220:11",
													"nodeType": "YulBlock",
													"src": "16708:220:11",
													"statements": [
														{
															"nativeSrc": "16718:74:11",
															"nodeType": "YulAssignment",
															"src": "16718:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16784:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16784:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16789:2:11",
																		"nodeType": "YulLiteral",
																		"src": "16789:2:11",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16725:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "16725:58:11"
																},
																"nativeSrc": "16725:67:11",
																"nodeType": "YulFunctionCall",
																"src": "16725:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16718:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16718:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16890:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16890:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bd7762eaf702b467ee1c1a0b6ba487d7210427f0d0614f20734e4fa41b5fb777",
																	"nativeSrc": "16801:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "16801:88:11"
																},
																"nativeSrc": "16801:93:11",
																"nodeType": "YulFunctionCall",
																"src": "16801:93:11"
															},
															"nativeSrc": "16801:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "16801:93:11"
														},
														{
															"nativeSrc": "16903:19:11",
															"nodeType": "YulAssignment",
															"src": "16903:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16914:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16914:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16919:2:11",
																		"nodeType": "YulLiteral",
																		"src": "16919:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16910:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16910:3:11"
																},
																"nativeSrc": "16910:12:11",
																"nodeType": "YulFunctionCall",
																"src": "16910:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16903:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16903:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bd7762eaf702b467ee1c1a0b6ba487d7210427f0d0614f20734e4fa41b5fb777_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16562:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16696:3:11",
														"nodeType": "YulTypedName",
														"src": "16696:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16704:3:11",
														"nodeType": "YulTypedName",
														"src": "16704:3:11",
														"type": ""
													}
												],
												"src": "16562:366:11"
											},
											{
												"body": {
													"nativeSrc": "17105:248:11",
													"nodeType": "YulBlock",
													"src": "17105:248:11",
													"statements": [
														{
															"nativeSrc": "17115:26:11",
															"nodeType": "YulAssignment",
															"src": "17115:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17127:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "17127:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17138:2:11",
																		"nodeType": "YulLiteral",
																		"src": "17138:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17123:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17123:3:11"
																},
																"nativeSrc": "17123:18:11",
																"nodeType": "YulFunctionCall",
																"src": "17123:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17115:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "17115:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17162:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "17162:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17173:1:11",
																				"nodeType": "YulLiteral",
																				"src": "17173:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17158:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17158:3:11"
																		},
																		"nativeSrc": "17158:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17158:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17181:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "17181:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17187:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "17187:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17177:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17177:3:11"
																		},
																		"nativeSrc": "17177:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17177:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17151:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "17151:6:11"
																},
																"nativeSrc": "17151:47:11",
																"nodeType": "YulFunctionCall",
																"src": "17151:47:11"
															},
															"nativeSrc": "17151:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "17151:47:11"
														},
														{
															"nativeSrc": "17207:139:11",
															"nodeType": "YulAssignment",
															"src": "17207:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17341:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "17341:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bd7762eaf702b467ee1c1a0b6ba487d7210427f0d0614f20734e4fa41b5fb777_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17215:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "17215:124:11"
																},
																"nativeSrc": "17215:131:11",
																"nodeType": "YulFunctionCall",
																"src": "17215:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17207:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "17207:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bd7762eaf702b467ee1c1a0b6ba487d7210427f0d0614f20734e4fa41b5fb777__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16934:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17085:9:11",
														"nodeType": "YulTypedName",
														"src": "17085:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17100:4:11",
														"nodeType": "YulTypedName",
														"src": "17100:4:11",
														"type": ""
													}
												],
												"src": "16934:419:11"
											},
											{
												"body": {
													"nativeSrc": "17404:149:11",
													"nodeType": "YulBlock",
													"src": "17404:149:11",
													"statements": [
														{
															"nativeSrc": "17414:25:11",
															"nodeType": "YulAssignment",
															"src": "17414:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17437:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "17437:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17419:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "17419:17:11"
																},
																"nativeSrc": "17419:20:11",
																"nodeType": "YulFunctionCall",
																"src": "17419:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17414:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "17414:1:11"
																}
															]
														},
														{
															"nativeSrc": "17448:25:11",
															"nodeType": "YulAssignment",
															"src": "17448:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17471:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "17471:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17453:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "17453:17:11"
																},
																"nativeSrc": "17453:20:11",
																"nodeType": "YulFunctionCall",
																"src": "17453:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "17448:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "17448:1:11"
																}
															]
														},
														{
															"nativeSrc": "17482:17:11",
															"nodeType": "YulAssignment",
															"src": "17482:17:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17494:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "17494:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17497:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "17497:1:11"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "17490:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17490:3:11"
																},
																"nativeSrc": "17490:9:11",
																"nodeType": "YulFunctionCall",
																"src": "17490:9:11"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "17482:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "17482:4:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17524:22:11",
																"nodeType": "YulBlock",
																"src": "17524:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17526:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "17526:16:11"
																			},
																			"nativeSrc": "17526:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "17526:18:11"
																		},
																		"nativeSrc": "17526:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "17526:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "17515:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "17515:4:11"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "17521:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "17521:1:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17512:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "17512:2:11"
																},
																"nativeSrc": "17512:11:11",
																"nodeType": "YulFunctionCall",
																"src": "17512:11:11"
															},
															"nativeSrc": "17509:37:11",
															"nodeType": "YulIf",
															"src": "17509:37:11"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "17359:194:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17390:1:11",
														"nodeType": "YulTypedName",
														"src": "17390:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17393:1:11",
														"nodeType": "YulTypedName",
														"src": "17393:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "17399:4:11",
														"nodeType": "YulTypedName",
														"src": "17399:4:11",
														"type": ""
													}
												],
												"src": "17359:194:11"
											},
											{
												"body": {
													"nativeSrc": "17587:152:11",
													"nodeType": "YulBlock",
													"src": "17587:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17604:1:11",
																		"nodeType": "YulLiteral",
																		"src": "17604:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17607:77:11",
																		"nodeType": "YulLiteral",
																		"src": "17607:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17597:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "17597:6:11"
																},
																"nativeSrc": "17597:88:11",
																"nodeType": "YulFunctionCall",
																"src": "17597:88:11"
															},
															"nativeSrc": "17597:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "17597:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17701:1:11",
																		"nodeType": "YulLiteral",
																		"src": "17701:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17704:4:11",
																		"nodeType": "YulLiteral",
																		"src": "17704:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17694:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "17694:6:11"
																},
																"nativeSrc": "17694:15:11",
																"nodeType": "YulFunctionCall",
																"src": "17694:15:11"
															},
															"nativeSrc": "17694:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "17694:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17725:1:11",
																		"nodeType": "YulLiteral",
																		"src": "17725:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17728:4:11",
																		"nodeType": "YulLiteral",
																		"src": "17728:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17718:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "17718:6:11"
																},
																"nativeSrc": "17718:15:11",
																"nodeType": "YulFunctionCall",
																"src": "17718:15:11"
															},
															"nativeSrc": "17718:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "17718:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "17559:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "17559:180:11"
											},
											{
												"body": {
													"nativeSrc": "17773:152:11",
													"nodeType": "YulBlock",
													"src": "17773:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17790:1:11",
																		"nodeType": "YulLiteral",
																		"src": "17790:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17793:77:11",
																		"nodeType": "YulLiteral",
																		"src": "17793:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17783:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "17783:6:11"
																},
																"nativeSrc": "17783:88:11",
																"nodeType": "YulFunctionCall",
																"src": "17783:88:11"
															},
															"nativeSrc": "17783:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "17783:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17887:1:11",
																		"nodeType": "YulLiteral",
																		"src": "17887:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17890:4:11",
																		"nodeType": "YulLiteral",
																		"src": "17890:4:11",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17880:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "17880:6:11"
																},
																"nativeSrc": "17880:15:11",
																"nodeType": "YulFunctionCall",
																"src": "17880:15:11"
															},
															"nativeSrc": "17880:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "17880:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17911:1:11",
																		"nodeType": "YulLiteral",
																		"src": "17911:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17914:4:11",
																		"nodeType": "YulLiteral",
																		"src": "17914:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17904:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "17904:6:11"
																},
																"nativeSrc": "17904:15:11",
																"nodeType": "YulFunctionCall",
																"src": "17904:15:11"
															},
															"nativeSrc": "17904:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "17904:15:11"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "17745:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "17745:180:11"
											},
											{
												"body": {
													"nativeSrc": "17974:190:11",
													"nodeType": "YulBlock",
													"src": "17974:190:11",
													"statements": [
														{
															"nativeSrc": "17984:33:11",
															"nodeType": "YulAssignment",
															"src": "17984:33:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18011:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "18011:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17993:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "17993:17:11"
																},
																"nativeSrc": "17993:24:11",
																"nodeType": "YulFunctionCall",
																"src": "17993:24:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "17984:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "17984:5:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18107:22:11",
																"nodeType": "YulBlock",
																"src": "18107:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18109:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "18109:16:11"
																			},
																			"nativeSrc": "18109:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "18109:18:11"
																		},
																		"nativeSrc": "18109:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "18109:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18032:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "18032:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18039:66:11",
																		"nodeType": "YulLiteral",
																		"src": "18039:66:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "18029:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "18029:2:11"
																},
																"nativeSrc": "18029:77:11",
																"nodeType": "YulFunctionCall",
																"src": "18029:77:11"
															},
															"nativeSrc": "18026:103:11",
															"nodeType": "YulIf",
															"src": "18026:103:11"
														},
														{
															"nativeSrc": "18138:20:11",
															"nodeType": "YulAssignment",
															"src": "18138:20:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18149:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "18149:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18156:1:11",
																		"nodeType": "YulLiteral",
																		"src": "18156:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18145:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "18145:3:11"
																},
																"nativeSrc": "18145:13:11",
																"nodeType": "YulFunctionCall",
																"src": "18145:13:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "18138:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "18138:3:11"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "17931:233:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17960:5:11",
														"nodeType": "YulTypedName",
														"src": "17960:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "17970:3:11",
														"nodeType": "YulTypedName",
														"src": "17970:3:11",
														"type": ""
													}
												],
												"src": "17931:233:11"
											},
											{
												"body": {
													"nativeSrc": "18296:206:11",
													"nodeType": "YulBlock",
													"src": "18296:206:11",
													"statements": [
														{
															"nativeSrc": "18306:26:11",
															"nodeType": "YulAssignment",
															"src": "18306:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18318:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "18318:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18329:2:11",
																		"nodeType": "YulLiteral",
																		"src": "18329:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18314:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "18314:3:11"
																},
																"nativeSrc": "18314:18:11",
																"nodeType": "YulFunctionCall",
																"src": "18314:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18306:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "18306:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18386:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "18386:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18399:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "18399:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18410:1:11",
																				"nodeType": "YulLiteral",
																				"src": "18410:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18395:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "18395:3:11"
																		},
																		"nativeSrc": "18395:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18395:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18342:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "18342:43:11"
																},
																"nativeSrc": "18342:71:11",
																"nodeType": "YulFunctionCall",
																"src": "18342:71:11"
															},
															"nativeSrc": "18342:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "18342:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18467:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "18467:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18480:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "18480:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18491:2:11",
																				"nodeType": "YulLiteral",
																				"src": "18491:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18476:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "18476:3:11"
																		},
																		"nativeSrc": "18476:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18476:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18423:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "18423:43:11"
																},
																"nativeSrc": "18423:72:11",
																"nodeType": "YulFunctionCall",
																"src": "18423:72:11"
															},
															"nativeSrc": "18423:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "18423:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "18170:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18260:9:11",
														"nodeType": "YulTypedName",
														"src": "18260:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18272:6:11",
														"nodeType": "YulTypedName",
														"src": "18272:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18280:6:11",
														"nodeType": "YulTypedName",
														"src": "18280:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18291:4:11",
														"nodeType": "YulTypedName",
														"src": "18291:4:11",
														"type": ""
													}
												],
												"src": "18170:332:11"
											},
											{
												"body": {
													"nativeSrc": "18571:80:11",
													"nodeType": "YulBlock",
													"src": "18571:80:11",
													"statements": [
														{
															"nativeSrc": "18581:22:11",
															"nodeType": "YulAssignment",
															"src": "18581:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "18596:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "18596:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18590:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "18590:5:11"
																},
																"nativeSrc": "18590:13:11",
																"nodeType": "YulFunctionCall",
																"src": "18590:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "18581:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "18581:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18639:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "18639:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "18612:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "18612:26:11"
																},
																"nativeSrc": "18612:33:11",
																"nodeType": "YulFunctionCall",
																"src": "18612:33:11"
															},
															"nativeSrc": "18612:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "18612:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "18508:143:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "18549:6:11",
														"nodeType": "YulTypedName",
														"src": "18549:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "18557:3:11",
														"nodeType": "YulTypedName",
														"src": "18557:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "18565:5:11",
														"nodeType": "YulTypedName",
														"src": "18565:5:11",
														"type": ""
													}
												],
												"src": "18508:143:11"
											},
											{
												"body": {
													"nativeSrc": "18734:274:11",
													"nodeType": "YulBlock",
													"src": "18734:274:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "18780:83:11",
																"nodeType": "YulBlock",
																"src": "18780:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "18782:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "18782:77:11"
																			},
																			"nativeSrc": "18782:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "18782:79:11"
																		},
																		"nativeSrc": "18782:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "18782:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18755:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "18755:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18764:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "18764:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18751:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "18751:3:11"
																		},
																		"nativeSrc": "18751:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18751:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18776:2:11",
																		"nodeType": "YulLiteral",
																		"src": "18776:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "18747:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "18747:3:11"
																},
																"nativeSrc": "18747:32:11",
																"nodeType": "YulFunctionCall",
																"src": "18747:32:11"
															},
															"nativeSrc": "18744:119:11",
															"nodeType": "YulIf",
															"src": "18744:119:11"
														},
														{
															"nativeSrc": "18873:128:11",
															"nodeType": "YulBlock",
															"src": "18873:128:11",
															"statements": [
																{
																	"nativeSrc": "18888:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18888:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18902:1:11",
																		"nodeType": "YulLiteral",
																		"src": "18902:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18892:6:11",
																			"nodeType": "YulTypedName",
																			"src": "18892:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "18917:74:11",
																	"nodeType": "YulAssignment",
																	"src": "18917:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18963:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "18963:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18974:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "18974:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18959:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "18959:3:11"
																				},
																				"nativeSrc": "18959:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "18959:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18983:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "18983:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "18927:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "18927:31:11"
																		},
																		"nativeSrc": "18927:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18927:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "18917:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "18917:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "18657:351:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18704:9:11",
														"nodeType": "YulTypedName",
														"src": "18704:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "18715:7:11",
														"nodeType": "YulTypedName",
														"src": "18715:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "18727:6:11",
														"nodeType": "YulTypedName",
														"src": "18727:6:11",
														"type": ""
													}
												],
												"src": "18657:351:11"
											},
											{
												"body": {
													"nativeSrc": "19120:66:11",
													"nodeType": "YulBlock",
													"src": "19120:66:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19142:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "19142:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19150:1:11",
																				"nodeType": "YulLiteral",
																				"src": "19150:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19138:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "19138:3:11"
																		},
																		"nativeSrc": "19138:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19138:14:11"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "19154:24:11",
																		"nodeType": "YulLiteral",
																		"src": "19154:24:11",
																		"type": "",
																		"value": "Insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19131:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "19131:6:11"
																},
																"nativeSrc": "19131:48:11",
																"nodeType": "YulFunctionCall",
																"src": "19131:48:11"
															},
															"nativeSrc": "19131:48:11",
															"nodeType": "YulExpressionStatement",
															"src": "19131:48:11"
														}
													]
												},
												"name": "store_literal_in_memory_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
												"nativeSrc": "19014:172:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19112:6:11",
														"nodeType": "YulTypedName",
														"src": "19112:6:11",
														"type": ""
													}
												],
												"src": "19014:172:11"
											},
											{
												"body": {
													"nativeSrc": "19338:220:11",
													"nodeType": "YulBlock",
													"src": "19338:220:11",
													"statements": [
														{
															"nativeSrc": "19348:74:11",
															"nodeType": "YulAssignment",
															"src": "19348:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19414:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "19414:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19419:2:11",
																		"nodeType": "YulLiteral",
																		"src": "19419:2:11",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19355:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "19355:58:11"
																},
																"nativeSrc": "19355:67:11",
																"nodeType": "YulFunctionCall",
																"src": "19355:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19348:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "19348:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19520:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "19520:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
																	"nativeSrc": "19431:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "19431:88:11"
																},
																"nativeSrc": "19431:93:11",
																"nodeType": "YulFunctionCall",
																"src": "19431:93:11"
															},
															"nativeSrc": "19431:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "19431:93:11"
														},
														{
															"nativeSrc": "19533:19:11",
															"nodeType": "YulAssignment",
															"src": "19533:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19544:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "19544:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19549:2:11",
																		"nodeType": "YulLiteral",
																		"src": "19549:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19540:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "19540:3:11"
																},
																"nativeSrc": "19540:12:11",
																"nodeType": "YulFunctionCall",
																"src": "19540:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19533:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "19533:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19192:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19326:3:11",
														"nodeType": "YulTypedName",
														"src": "19326:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19334:3:11",
														"nodeType": "YulTypedName",
														"src": "19334:3:11",
														"type": ""
													}
												],
												"src": "19192:366:11"
											},
											{
												"body": {
													"nativeSrc": "19735:248:11",
													"nodeType": "YulBlock",
													"src": "19735:248:11",
													"statements": [
														{
															"nativeSrc": "19745:26:11",
															"nodeType": "YulAssignment",
															"src": "19745:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19757:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "19757:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19768:2:11",
																		"nodeType": "YulLiteral",
																		"src": "19768:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19753:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "19753:3:11"
																},
																"nativeSrc": "19753:18:11",
																"nodeType": "YulFunctionCall",
																"src": "19753:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19745:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "19745:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19792:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "19792:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19803:1:11",
																				"nodeType": "YulLiteral",
																				"src": "19803:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19788:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "19788:3:11"
																		},
																		"nativeSrc": "19788:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19788:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19811:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "19811:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19817:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "19817:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19807:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "19807:3:11"
																		},
																		"nativeSrc": "19807:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19807:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19781:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "19781:6:11"
																},
																"nativeSrc": "19781:47:11",
																"nodeType": "YulFunctionCall",
																"src": "19781:47:11"
															},
															"nativeSrc": "19781:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "19781:47:11"
														},
														{
															"nativeSrc": "19837:139:11",
															"nodeType": "YulAssignment",
															"src": "19837:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19971:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "19971:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19845:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "19845:124:11"
																},
																"nativeSrc": "19845:131:11",
																"nodeType": "YulFunctionCall",
																"src": "19845:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19837:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "19837:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19564:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19715:9:11",
														"nodeType": "YulTypedName",
														"src": "19715:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19730:4:11",
														"nodeType": "YulTypedName",
														"src": "19730:4:11",
														"type": ""
													}
												],
												"src": "19564:419:11"
											},
											{
												"body": {
													"nativeSrc": "20053:84:11",
													"nodeType": "YulBlock",
													"src": "20053:84:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "20077:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "20077:3:11"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "20082:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "20082:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "20087:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "20087:6:11"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "20064:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "20064:12:11"
																},
																"nativeSrc": "20064:30:11",
																"nodeType": "YulFunctionCall",
																"src": "20064:30:11"
															},
															"nativeSrc": "20064:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "20064:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "20114:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "20114:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "20119:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "20119:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20110:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "20110:3:11"
																		},
																		"nativeSrc": "20110:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "20110:16:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20128:1:11",
																		"nodeType": "YulLiteral",
																		"src": "20128:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20103:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "20103:6:11"
																},
																"nativeSrc": "20103:27:11",
																"nodeType": "YulFunctionCall",
																"src": "20103:27:11"
															},
															"nativeSrc": "20103:27:11",
															"nodeType": "YulExpressionStatement",
															"src": "20103:27:11"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "19989:148:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "20035:3:11",
														"nodeType": "YulTypedName",
														"src": "20035:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "20040:3:11",
														"nodeType": "YulTypedName",
														"src": "20040:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "20045:6:11",
														"nodeType": "YulTypedName",
														"src": "20045:6:11",
														"type": ""
													}
												],
												"src": "19989:148:11"
											},
											{
												"body": {
													"nativeSrc": "20191:54:11",
													"nodeType": "YulBlock",
													"src": "20191:54:11",
													"statements": [
														{
															"nativeSrc": "20201:38:11",
															"nodeType": "YulAssignment",
															"src": "20201:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "20219:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "20219:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20226:2:11",
																				"nodeType": "YulLiteral",
																				"src": "20226:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20215:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "20215:3:11"
																		},
																		"nativeSrc": "20215:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "20215:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "20235:2:11",
																				"nodeType": "YulLiteral",
																				"src": "20235:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "20231:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "20231:3:11"
																		},
																		"nativeSrc": "20231:7:11",
																		"nodeType": "YulFunctionCall",
																		"src": "20231:7:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "20211:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "20211:3:11"
																},
																"nativeSrc": "20211:28:11",
																"nodeType": "YulFunctionCall",
																"src": "20211:28:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "20201:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "20201:6:11"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "20143:102:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20174:5:11",
														"nodeType": "YulTypedName",
														"src": "20174:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "20184:6:11",
														"nodeType": "YulTypedName",
														"src": "20184:6:11",
														"type": ""
													}
												],
												"src": "20143:102:11"
											},
											{
												"body": {
													"nativeSrc": "20377:215:11",
													"nodeType": "YulBlock",
													"src": "20377:215:11",
													"statements": [
														{
															"nativeSrc": "20387:78:11",
															"nodeType": "YulAssignment",
															"src": "20387:78:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20453:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "20453:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "20458:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "20458:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20394:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "20394:58:11"
																},
																"nativeSrc": "20394:71:11",
																"nodeType": "YulFunctionCall",
																"src": "20394:71:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20387:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "20387:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "20512:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "20512:5:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "20519:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "20519:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "20524:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "20524:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "20475:36:11",
																	"nodeType": "YulIdentifier",
																	"src": "20475:36:11"
																},
																"nativeSrc": "20475:56:11",
																"nodeType": "YulFunctionCall",
																"src": "20475:56:11"
															},
															"nativeSrc": "20475:56:11",
															"nodeType": "YulExpressionStatement",
															"src": "20475:56:11"
														},
														{
															"nativeSrc": "20540:46:11",
															"nodeType": "YulAssignment",
															"src": "20540:46:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20551:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "20551:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "20578:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "20578:6:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "20556:21:11",
																			"nodeType": "YulIdentifier",
																			"src": "20556:21:11"
																		},
																		"nativeSrc": "20556:29:11",
																		"nodeType": "YulFunctionCall",
																		"src": "20556:29:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20547:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "20547:3:11"
																},
																"nativeSrc": "20547:39:11",
																"nodeType": "YulFunctionCall",
																"src": "20547:39:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20540:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "20540:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20275:317:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "20350:5:11",
														"nodeType": "YulTypedName",
														"src": "20350:5:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "20357:6:11",
														"nodeType": "YulTypedName",
														"src": "20357:6:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "20365:3:11",
														"nodeType": "YulTypedName",
														"src": "20365:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20373:3:11",
														"nodeType": "YulTypedName",
														"src": "20373:3:11",
														"type": ""
													}
												],
												"src": "20275:317:11"
											},
											{
												"body": {
													"nativeSrc": "20726:205:11",
													"nodeType": "YulBlock",
													"src": "20726:205:11",
													"statements": [
														{
															"nativeSrc": "20736:26:11",
															"nodeType": "YulAssignment",
															"src": "20736:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20748:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "20748:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20759:2:11",
																		"nodeType": "YulLiteral",
																		"src": "20759:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20744:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "20744:3:11"
																},
																"nativeSrc": "20744:18:11",
																"nodeType": "YulFunctionCall",
																"src": "20744:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20736:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "20736:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20783:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "20783:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20794:1:11",
																				"nodeType": "YulLiteral",
																				"src": "20794:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20779:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "20779:3:11"
																		},
																		"nativeSrc": "20779:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "20779:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20802:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "20802:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20808:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "20808:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20798:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "20798:3:11"
																		},
																		"nativeSrc": "20798:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "20798:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20772:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "20772:6:11"
																},
																"nativeSrc": "20772:47:11",
																"nodeType": "YulFunctionCall",
																"src": "20772:47:11"
															},
															"nativeSrc": "20772:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "20772:47:11"
														},
														{
															"nativeSrc": "20828:96:11",
															"nodeType": "YulAssignment",
															"src": "20828:96:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20902:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "20902:6:11"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "20910:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "20910:6:11"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "20919:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "20919:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20836:65:11",
																	"nodeType": "YulIdentifier",
																	"src": "20836:65:11"
																},
																"nativeSrc": "20836:88:11",
																"nodeType": "YulFunctionCall",
																"src": "20836:88:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20828:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "20828:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20598:333:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20690:9:11",
														"nodeType": "YulTypedName",
														"src": "20690:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20702:6:11",
														"nodeType": "YulTypedName",
														"src": "20702:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20710:6:11",
														"nodeType": "YulTypedName",
														"src": "20710:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20721:4:11",
														"nodeType": "YulTypedName",
														"src": "20721:4:11",
														"type": ""
													}
												],
												"src": "20598:333:11"
											},
											{
												"body": {
													"nativeSrc": "21063:206:11",
													"nodeType": "YulBlock",
													"src": "21063:206:11",
													"statements": [
														{
															"nativeSrc": "21073:26:11",
															"nodeType": "YulAssignment",
															"src": "21073:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21085:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "21085:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21096:2:11",
																		"nodeType": "YulLiteral",
																		"src": "21096:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21081:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "21081:3:11"
																},
																"nativeSrc": "21081:18:11",
																"nodeType": "YulFunctionCall",
																"src": "21081:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21073:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "21073:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21153:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "21153:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21166:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "21166:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21177:1:11",
																				"nodeType": "YulLiteral",
																				"src": "21177:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21162:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "21162:3:11"
																		},
																		"nativeSrc": "21162:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "21162:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21109:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "21109:43:11"
																},
																"nativeSrc": "21109:71:11",
																"nodeType": "YulFunctionCall",
																"src": "21109:71:11"
															},
															"nativeSrc": "21109:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "21109:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21234:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "21234:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21247:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "21247:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21258:2:11",
																				"nodeType": "YulLiteral",
																				"src": "21258:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21243:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "21243:3:11"
																		},
																		"nativeSrc": "21243:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "21243:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21190:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "21190:43:11"
																},
																"nativeSrc": "21190:72:11",
																"nodeType": "YulFunctionCall",
																"src": "21190:72:11"
															},
															"nativeSrc": "21190:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "21190:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "20937:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21027:9:11",
														"nodeType": "YulTypedName",
														"src": "21027:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21039:6:11",
														"nodeType": "YulTypedName",
														"src": "21039:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21047:6:11",
														"nodeType": "YulTypedName",
														"src": "21047:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21058:4:11",
														"nodeType": "YulTypedName",
														"src": "21058:4:11",
														"type": ""
													}
												],
												"src": "20937:332:11"
											},
											{
												"body": {
													"nativeSrc": "21429:288:11",
													"nodeType": "YulBlock",
													"src": "21429:288:11",
													"statements": [
														{
															"nativeSrc": "21439:26:11",
															"nodeType": "YulAssignment",
															"src": "21439:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21451:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "21451:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21462:2:11",
																		"nodeType": "YulLiteral",
																		"src": "21462:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21447:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "21447:3:11"
																},
																"nativeSrc": "21447:18:11",
																"nodeType": "YulFunctionCall",
																"src": "21447:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21439:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "21439:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21519:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "21519:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21532:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "21532:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21543:1:11",
																				"nodeType": "YulLiteral",
																				"src": "21543:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21528:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "21528:3:11"
																		},
																		"nativeSrc": "21528:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "21528:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21475:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "21475:43:11"
																},
																"nativeSrc": "21475:71:11",
																"nodeType": "YulFunctionCall",
																"src": "21475:71:11"
															},
															"nativeSrc": "21475:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "21475:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21600:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "21600:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21613:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "21613:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21624:2:11",
																				"nodeType": "YulLiteral",
																				"src": "21624:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21609:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "21609:3:11"
																		},
																		"nativeSrc": "21609:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "21609:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21556:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "21556:43:11"
																},
																"nativeSrc": "21556:72:11",
																"nodeType": "YulFunctionCall",
																"src": "21556:72:11"
															},
															"nativeSrc": "21556:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "21556:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "21682:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "21682:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21695:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "21695:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21706:2:11",
																				"nodeType": "YulLiteral",
																				"src": "21706:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21691:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "21691:3:11"
																		},
																		"nativeSrc": "21691:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "21691:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21638:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "21638:43:11"
																},
																"nativeSrc": "21638:72:11",
																"nodeType": "YulFunctionCall",
																"src": "21638:72:11"
															},
															"nativeSrc": "21638:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "21638:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "21275:442:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21385:9:11",
														"nodeType": "YulTypedName",
														"src": "21385:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "21397:6:11",
														"nodeType": "YulTypedName",
														"src": "21397:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21405:6:11",
														"nodeType": "YulTypedName",
														"src": "21405:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21413:6:11",
														"nodeType": "YulTypedName",
														"src": "21413:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21424:4:11",
														"nodeType": "YulTypedName",
														"src": "21424:4:11",
														"type": ""
													}
												],
												"src": "21275:442:11"
											},
											{
												"body": {
													"nativeSrc": "21849:206:11",
													"nodeType": "YulBlock",
													"src": "21849:206:11",
													"statements": [
														{
															"nativeSrc": "21859:26:11",
															"nodeType": "YulAssignment",
															"src": "21859:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21871:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "21871:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21882:2:11",
																		"nodeType": "YulLiteral",
																		"src": "21882:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21867:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "21867:3:11"
																},
																"nativeSrc": "21867:18:11",
																"nodeType": "YulFunctionCall",
																"src": "21867:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21859:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "21859:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21939:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "21939:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21952:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "21952:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21963:1:11",
																				"nodeType": "YulLiteral",
																				"src": "21963:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21948:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "21948:3:11"
																		},
																		"nativeSrc": "21948:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "21948:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21895:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "21895:43:11"
																},
																"nativeSrc": "21895:71:11",
																"nodeType": "YulFunctionCall",
																"src": "21895:71:11"
															},
															"nativeSrc": "21895:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "21895:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22020:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "22020:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22033:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "22033:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22044:2:11",
																				"nodeType": "YulLiteral",
																				"src": "22044:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22029:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "22029:3:11"
																		},
																		"nativeSrc": "22029:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "22029:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "21976:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "21976:43:11"
																},
																"nativeSrc": "21976:72:11",
																"nodeType": "YulFunctionCall",
																"src": "21976:72:11"
															},
															"nativeSrc": "21976:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "21976:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "21723:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21813:9:11",
														"nodeType": "YulTypedName",
														"src": "21813:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21825:6:11",
														"nodeType": "YulTypedName",
														"src": "21825:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21833:6:11",
														"nodeType": "YulTypedName",
														"src": "21833:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21844:4:11",
														"nodeType": "YulTypedName",
														"src": "21844:4:11",
														"type": ""
													}
												],
												"src": "21723:332:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct GameLogic.LeaderboardEntry -> struct GameLogic.LeaderboardEntry\n    function abi_encode_t_struct$_LeaderboardEntry_$1116_memory_ptr_to_t_struct$_LeaderboardEntry_$1116_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // player\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // score\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_LeaderboardEntry_$1116_memory_ptr_to_t_struct$_LeaderboardEntry_$1116_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_LeaderboardEntry_$1116_memory_ptr_to_t_struct$_LeaderboardEntry_$1116_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x40)\n    }\n\n    function array_nextElement_t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct GameLogic.LeaderboardEntry[] -> struct GameLogic.LeaderboardEntry[]\n    function abi_encode_t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_LeaderboardEntry_$1116_memory_ptr_to_t_struct$_LeaderboardEntry_$1116_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$547_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$547_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$547_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$547__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$547_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_string_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_89d1227f4ad2981902a8cceca87767b4412485e5f09406e0c7532110c6c96e36(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid player address\")\n\n    }\n\n    function abi_encode_t_stringliteral_89d1227f4ad2981902a8cceca87767b4412485e5f09406e0c7532110c6c96e36_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_89d1227f4ad2981902a8cceca87767b4412485e5f09406e0c7532110c6c96e36(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_89d1227f4ad2981902a8cceca87767b4412485e5f09406e0c7532110c6c96e36__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_89d1227f4ad2981902a8cceca87767b4412485e5f09406e0c7532110c6c96e36_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_398ada248aa1fe4fb1217cf136e95109d6d0cf282d97dd6caac95b709fec5ccc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Score must be greater than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_398ada248aa1fe4fb1217cf136e95109d6d0cf282d97dd6caac95b709fec5ccc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_398ada248aa1fe4fb1217cf136e95109d6d0cf282d97dd6caac95b709fec5ccc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_398ada248aa1fe4fb1217cf136e95109d6d0cf282d97dd6caac95b709fec5ccc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_398ada248aa1fe4fb1217cf136e95109d6d0cf282d97dd6caac95b709fec5ccc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_a9017d63cbf4a2c4f26e7cdb5a4fe6fa27d0445793ac73adc9717af021961238(memPtr) {\n\n        mstore(add(memPtr, 0), \"Multiplier must be greater than \")\n\n        mstore(add(memPtr, 32), \"zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_a9017d63cbf4a2c4f26e7cdb5a4fe6fa27d0445793ac73adc9717af021961238_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_a9017d63cbf4a2c4f26e7cdb5a4fe6fa27d0445793ac73adc9717af021961238(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a9017d63cbf4a2c4f26e7cdb5a4fe6fa27d0445793ac73adc9717af021961238__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a9017d63cbf4a2c4f26e7cdb5a4fe6fa27d0445793ac73adc9717af021961238_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_bd7762eaf702b467ee1c1a0b6ba487d7210427f0d0614f20734e4fa41b5fb777(memPtr) {\n\n        mstore(add(memPtr, 0), \"Offset out of bounds\")\n\n    }\n\n    function abi_encode_t_stringliteral_bd7762eaf702b467ee1c1a0b6ba487d7210427f0d0614f20734e4fa41b5fb777_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_bd7762eaf702b467ee1c1a0b6ba487d7210427f0d0614f20734e4fa41b5fb777(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bd7762eaf702b467ee1c1a0b6ba487d7210427f0d0614f20734e4fa41b5fb777__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bd7762eaf702b467ee1c1a0b6ba487d7210427f0d0614f20734e4fa41b5fb777_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    // string -> string\n    function abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(value0, value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061012a575f3560e01c80639a19c7b0116100ab578063d12af19a1161006f578063d12af19a1461033e578063d47875d01461035c578063d547741f1461038c578063e2eb41ff146103a8578063ed4b7eaa146103d95761012a565b80639a19c7b0146102ac578063a217fddf146102c8578063ba3f5a12146102e6578063c3dfdae614610304578063c634b78e146103225761012a565b80633596362b116100f25780633596362b146101f657806336568abe1461021257806373af16fc1461022e57806375b238fc1461025e57806391d148541461027c5761012a565b806301ffc9a71461012e57806315c6aee21461015e5780631db544c01461018e578063248a9ca3146101aa5780632f2ff15d146101da575b5f5ffd5b61014860048036038101906101439190611575565b6103f5565b60405161015591906115ba565b60405180910390f35b61017860048036038101906101739190611606565b61046e565b6040516101859190611670565b60405180910390f35b6101a860048036038101906101a391906116b3565b6104a9565b005b6101c460048036038101906101bf9190611724565b610819565b6040516101d1919061175e565b60405180910390f35b6101f460048036038101906101ef9190611777565b610835565b005b610210600480360381019061020b9190611606565b610857565b005b61022c60048036038101906102279190611777565b610905565b005b610248600480360381019061024391906117b5565b610980565b60405161025591906118e6565b60405180910390f35b610266610d53565b604051610273919061175e565b60405180910390f35b61029660048036038101906102919190611777565b610d77565b6040516102a391906115ba565b60405180910390f35b6102c660048036038101906102c19190611906565b610dda565b005b6102d0610e14565b6040516102dd919061175e565b60405180910390f35b6102ee610e1a565b6040516102fb9190611940565b60405180910390f35b61030c610e20565b60405161031991906119b4565b60405180910390f35b61033c60048036038101906103379190611906565b610e45565b005b610346610e7f565b6040516103539190611940565b60405180910390f35b61037660048036038101906103719190611906565b610e8c565b6040516103839190611940565b60405180910390f35b6103a660048036038101906103a19190611777565b610ed4565b005b6103c260048036038101906103bd9190611906565b610ef6565b6040516103d09291906119cd565b60405180910390f35b6103f360048036038101906103ee9190611a55565b610f16565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104675750610466826110a7565b5b9050919050565b6004818154811061047d575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217756104d381611110565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610541576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053890611afa565b60405180910390fd5b5f8211610583576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057a90611b62565b60405180910390fd5b5f60035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015414801561061057505f60035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060010154145b156106b957600483908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff167ff2ae205522024c14e5a7a26ba6d1fb1252dc8e161b5abc79ed5795fd3c5b926160405160405180910390a25b8160035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f8282546107079190611bad565b925050819055504260035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600101819055505f670de0b6b3a76400006002548461076b9190611be0565b6107759190611be0565b90506107c3848260015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166111249092919063ffffffff16565b8373ffffffffffffffffffffffffffffffffffffffff167fb7f20d0949b6a8bc59d005af4a52f7ff5d0cfcde9056fa556adb0e4b24dcb6d2848360405161080b9291906119cd565b60405180910390a250505050565b5f5f5f8381526020019081526020015f20600101549050919050565b61083e82610819565b61084781611110565b61085183836111a3565b50505050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177561088181611110565b5f82116108c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ba90611c91565b60405180910390fd5b816002819055507fe6b19b2c6617851a0f4c49df91138e172046ffa3fc94114d4a7294d0e4362dd6826040516108f99190611940565b60405180910390a15050565b61090d61128c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610971576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61097b8282611293565b505050565b606060048054905083106109c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c090611cf9565b60405180910390fd5b5f836004805490506109db9190611d17565b90505f8184116109eb57836109ed565b815b90505f8167ffffffffffffffff811115610a0a57610a09611d4a565b5b604051908082528060200260200182016040528015610a4357816020015b610a306114ea565b815260200190600190039081610a285790505b5090505f60048054905067ffffffffffffffff811115610a6657610a65611d4a565b5b604051908082528060200260200182016040528015610a9f57816020015b610a8c6114ea565b815260200190600190039081610a845790505b5090505f5f90505b600480549050811015610bbf57604051806040016040528060048381548110610ad357610ad2611d77565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160035f60048581548110610b2d57610b2c611d77565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0154815250828281518110610ba757610ba6611d77565b5b60200260200101819052508080600101915050610aa7565b505f5f90505b815181108015610bdf57508388610bdc9190611bad565b81105b15610ce6575f8190505f600183610bf69190611bad565b90505b8351811015610c5757838281518110610c1557610c14611d77565b5b602002602001015160200151848281518110610c3457610c33611d77565b5b6020026020010151602001511115610c4a578091505b8080600101915050610bf9565b50818114610cd257828181518110610c7257610c71611d77565b5b6020026020010151838381518110610c8d57610c8c611d77565b5b6020026020010151848481518110610ca857610ca7611d77565b5b60200260200101858481518110610cc257610cc1611d77565b5b6020026020010182905282905250505b508080610cde90611da4565b915050610bc5565b505f5f90505b83811015610d4557818189610d019190611bad565b81518110610d1257610d11611d77565b5b6020026020010151838281518110610d2d57610d2c611d77565b5b60200260200101819052508080600101915050610cec565b508194505050505092915050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b5f5f5f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f5f1b610de681611110565b610e107fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177583610ed4565b5050565b5f5f1b81565b60025481565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f1b610e5181611110565b610e7b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177583610835565b5050565b68056bc75e2d6310000081565b5f60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01549050919050565b610edd82610819565b610ee681611110565b610ef08383611293565b50505050565b6003602052805f5260405f205f91509050805f0154908060010154905082565b68056bc75e2d6310000060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610f7c929190611deb565b602060405180830381865afa158015610f97573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610fbb9190611e26565b1015610ffc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff390611e9b565b60405180910390fd5b611053333068056bc75e2d6310000060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661137c909392919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f769873612369de25d7a32b1071976767e3071b8182b9353e1cd5d6cf25b33dca838360405161109b929190611f03565b60405180910390a25050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6111218161111c61128c565b6113fe565b50565b61119e838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611157929190611f25565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061144f565b505050565b5f6111ae8383610d77565b6112825760015f5f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061121f61128c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050611286565b5f90505b92915050565b5f33905090565b5f61129e8383610d77565b15611372575f5f5f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061130f61128c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611376565b5f90505b92915050565b6113f8848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016113b193929190611f4c565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061144f565b50505050565b6114088282610d77565b61144b5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611442929190611f81565b60405180910390fd5b5050565b5f5f60205f8451602086015f885af18061146e576040513d5f823e3d81fd5b3d92505f519150505f82146114875760018114156114a2565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b156114e457836040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016114db9190611670565b60405180910390fd5b50505050565b60405180604001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81525090565b5f5ffd5b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61155481611520565b811461155e575f5ffd5b50565b5f8135905061156f8161154b565b92915050565b5f6020828403121561158a57611589611518565b5b5f61159784828501611561565b91505092915050565b5f8115159050919050565b6115b4816115a0565b82525050565b5f6020820190506115cd5f8301846115ab565b92915050565b5f819050919050565b6115e5816115d3565b81146115ef575f5ffd5b50565b5f81359050611600816115dc565b92915050565b5f6020828403121561161b5761161a611518565b5b5f611628848285016115f2565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61165a82611631565b9050919050565b61166a81611650565b82525050565b5f6020820190506116835f830184611661565b92915050565b61169281611650565b811461169c575f5ffd5b50565b5f813590506116ad81611689565b92915050565b5f5f604083850312156116c9576116c8611518565b5b5f6116d68582860161169f565b92505060206116e7858286016115f2565b9150509250929050565b5f819050919050565b611703816116f1565b811461170d575f5ffd5b50565b5f8135905061171e816116fa565b92915050565b5f6020828403121561173957611738611518565b5b5f61174684828501611710565b91505092915050565b611758816116f1565b82525050565b5f6020820190506117715f83018461174f565b92915050565b5f5f6040838503121561178d5761178c611518565b5b5f61179a85828601611710565b92505060206117ab8582860161169f565b9150509250929050565b5f5f604083850312156117cb576117ca611518565b5b5f6117d8858286016115f2565b92505060206117e9858286016115f2565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b61182581611650565b82525050565b611834816115d3565b82525050565b604082015f82015161184e5f85018261181c565b506020820151611861602085018261182b565b50505050565b5f611872838361183a565b60408301905092915050565b5f602082019050919050565b5f611894826117f3565b61189e81856117fd565b93506118a98361180d565b805f5b838110156118d95781516118c08882611867565b97506118cb8361187e565b9250506001810190506118ac565b5085935050505092915050565b5f6020820190508181035f8301526118fe818461188a565b905092915050565b5f6020828403121561191b5761191a611518565b5b5f6119288482850161169f565b91505092915050565b61193a816115d3565b82525050565b5f6020820190506119535f830184611931565b92915050565b5f819050919050565b5f61197c61197761197284611631565b611959565b611631565b9050919050565b5f61198d82611962565b9050919050565b5f61199e82611983565b9050919050565b6119ae81611994565b82525050565b5f6020820190506119c75f8301846119a5565b92915050565b5f6040820190506119e05f830185611931565b6119ed6020830184611931565b9392505050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f840112611a1557611a146119f4565b5b8235905067ffffffffffffffff811115611a3257611a316119f8565b5b602083019150836001820283011115611a4e57611a4d6119fc565b5b9250929050565b5f5f60208385031215611a6b57611a6a611518565b5b5f83013567ffffffffffffffff811115611a8857611a8761151c565b5b611a9485828601611a00565b92509250509250929050565b5f82825260208201905092915050565b7f496e76616c696420706c617965722061646472657373000000000000000000005f82015250565b5f611ae4601683611aa0565b9150611aef82611ab0565b602082019050919050565b5f6020820190508181035f830152611b1181611ad8565b9050919050565b7f53636f7265206d7573742062652067726561746572207468616e207a65726f005f82015250565b5f611b4c601f83611aa0565b9150611b5782611b18565b602082019050919050565b5f6020820190508181035f830152611b7981611b40565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611bb7826115d3565b9150611bc2836115d3565b9250828201905080821115611bda57611bd9611b80565b5b92915050565b5f611bea826115d3565b9150611bf5836115d3565b9250828202611c03816115d3565b91508282048414831517611c1a57611c19611b80565b5b5092915050565b7f4d756c7469706c696572206d7573742062652067726561746572207468616e205f8201527f7a65726f00000000000000000000000000000000000000000000000000000000602082015250565b5f611c7b602483611aa0565b9150611c8682611c21565b604082019050919050565b5f6020820190508181035f830152611ca881611c6f565b9050919050565b7f4f6666736574206f7574206f6620626f756e64730000000000000000000000005f82015250565b5f611ce3601483611aa0565b9150611cee82611caf565b602082019050919050565b5f6020820190508181035f830152611d1081611cd7565b9050919050565b5f611d21826115d3565b9150611d2c836115d3565b9250828203905081811115611d4457611d43611b80565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f611dae826115d3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611de057611ddf611b80565b5b600182019050919050565b5f604082019050611dfe5f830185611661565b611e0b6020830184611661565b9392505050565b5f81519050611e20816115dc565b92915050565b5f60208284031215611e3b57611e3a611518565b5b5f611e4884828501611e12565b91505092915050565b7f496e73756666696369656e7420616c6c6f77616e6365000000000000000000005f82015250565b5f611e85601683611aa0565b9150611e9082611e51565b602082019050919050565b5f6020820190508181035f830152611eb281611e79565b9050919050565b828183375f83830152505050565b5f601f19601f8301169050919050565b5f611ee28385611aa0565b9350611eef838584611eb9565b611ef883611ec7565b840190509392505050565b5f6020820190508181035f830152611f1c818486611ed7565b90509392505050565b5f604082019050611f385f830185611661565b611f456020830184611931565b9392505050565b5f606082019050611f5f5f830186611661565b611f6c6020830185611661565b611f796040830184611931565b949350505050565b5f604082019050611f945f830185611661565b611fa1602083018461174f565b939250505056fea2646970667358221220aff86586eed2327a3fe5c5a9fa48719d66c53f90dcbda49ad893d0d52f5e7ac364736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9A19C7B0 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xD12AF19A GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD12AF19A EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0xD47875D0 EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0xE2EB41FF EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0xED4B7EAA EQ PUSH2 0x3D9 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x9A19C7B0 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0xBA3F5A12 EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0xC3DFDAE6 EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0xC634B78E EQ PUSH2 0x322 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x3596362B GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x3596362B EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x73AF16FC EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x27C JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x15C6AEE2 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x1DB544C0 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1DA JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x1575 JUMP JUMPDEST PUSH2 0x3F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x15BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x1606 JUMP JUMPDEST PUSH2 0x46E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x1670 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x16B3 JUMP JUMPDEST PUSH2 0x4A9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x1724 JUMP JUMPDEST PUSH2 0x819 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x175E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x1777 JUMP JUMPDEST PUSH2 0x835 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x1606 JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x1777 JUMP JUMPDEST PUSH2 0x905 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x248 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x17B5 JUMP JUMPDEST PUSH2 0x980 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x18E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x266 PUSH2 0xD53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x175E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x296 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x1777 JUMP JUMPDEST PUSH2 0xD77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x15BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x1906 JUMP JUMPDEST PUSH2 0xDDA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D0 PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x175E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EE PUSH2 0xE1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x1940 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30C PUSH2 0xE20 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x19B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x1906 JUMP JUMPDEST PUSH2 0xE45 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x346 PUSH2 0xE7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x1940 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x376 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x371 SWAP2 SWAP1 PUSH2 0x1906 JUMP JUMPDEST PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x383 SWAP2 SWAP1 PUSH2 0x1940 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0x1777 JUMP JUMPDEST PUSH2 0xED4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x1906 JUMP JUMPDEST PUSH2 0xEF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D0 SWAP3 SWAP2 SWAP1 PUSH2 0x19CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0x1A55 JUMP JUMPDEST PUSH2 0xF16 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x467 JUMPI POP PUSH2 0x466 DUP3 PUSH2 0x10A7 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x47D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x4D3 DUP2 PUSH2 0x1110 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x541 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x538 SWAP1 PUSH2 0x1AFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x583 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57A SWAP1 PUSH2 0x1B62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x610 JUMPI POP PUSH0 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x6B9 JUMPI PUSH1 0x4 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF2AE205522024C14E5A7A26BA6D1FB1252DC8E161B5ABC79ED5795FD3C5B9261 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x707 SWAP2 SWAP1 PUSH2 0x1BAD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 SLOAD DUP5 PUSH2 0x76B SWAP2 SWAP1 PUSH2 0x1BE0 JUMP JUMPDEST PUSH2 0x775 SWAP2 SWAP1 PUSH2 0x1BE0 JUMP JUMPDEST SWAP1 POP PUSH2 0x7C3 DUP5 DUP3 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1124 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB7F20D0949B6A8BC59D005AF4A52F7FF5D0CFCDE9056FA556ADB0E4B24DCB6D2 DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x80B SWAP3 SWAP2 SWAP1 PUSH2 0x19CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x83E DUP3 PUSH2 0x819 JUMP JUMPDEST PUSH2 0x847 DUP2 PUSH2 0x1110 JUMP JUMPDEST PUSH2 0x851 DUP4 DUP4 PUSH2 0x11A3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x881 DUP2 PUSH2 0x1110 JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x8C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8BA SWAP1 PUSH2 0x1C91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0xE6B19B2C6617851A0F4C49DF91138E172046FFA3FC94114D4A7294D0E4362DD6 DUP3 PUSH1 0x40 MLOAD PUSH2 0x8F9 SWAP2 SWAP1 PUSH2 0x1940 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x90D PUSH2 0x128C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x971 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x97B DUP3 DUP3 PUSH2 0x1293 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD SWAP1 POP DUP4 LT PUSH2 0x9C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C0 SWAP1 PUSH2 0x1CF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 PUSH1 0x4 DUP1 SLOAD SWAP1 POP PUSH2 0x9DB SWAP2 SWAP1 PUSH2 0x1D17 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP5 GT PUSH2 0x9EB JUMPI DUP4 PUSH2 0x9ED JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA0A JUMPI PUSH2 0xA09 PUSH2 0x1D4A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA43 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xA30 PUSH2 0x14EA JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xA28 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 PUSH1 0x4 DUP1 SLOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA66 JUMPI PUSH2 0xA65 PUSH2 0x1D4A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA9F JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xA8C PUSH2 0x14EA JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xA84 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xBBF JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xAD3 JUMPI PUSH2 0xAD2 PUSH2 0x1D77 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 PUSH0 PUSH1 0x4 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0xB2D JUMPI PUSH2 0xB2C PUSH2 0x1D77 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD DUP2 MSTORE POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xBA7 JUMPI PUSH2 0xBA6 PUSH2 0x1D77 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xAA7 JUMP JUMPDEST POP PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP2 MLOAD DUP2 LT DUP1 ISZERO PUSH2 0xBDF JUMPI POP DUP4 DUP9 PUSH2 0xBDC SWAP2 SWAP1 PUSH2 0x1BAD JUMP JUMPDEST DUP2 LT JUMPDEST ISZERO PUSH2 0xCE6 JUMPI PUSH0 DUP2 SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH2 0xBF6 SWAP2 SWAP1 PUSH2 0x1BAD JUMP JUMPDEST SWAP1 POP JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xC57 JUMPI DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xC15 JUMPI PUSH2 0xC14 PUSH2 0x1D77 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xC34 JUMPI PUSH2 0xC33 PUSH2 0x1D77 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD GT ISZERO PUSH2 0xC4A JUMPI DUP1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xBF9 JUMP JUMPDEST POP DUP2 DUP2 EQ PUSH2 0xCD2 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xC72 JUMPI PUSH2 0xC71 PUSH2 0x1D77 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC8D JUMPI PUSH2 0xC8C PUSH2 0x1D77 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xCA8 JUMPI PUSH2 0xCA7 PUSH2 0x1D77 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xCC2 JUMPI PUSH2 0xCC1 PUSH2 0x1D77 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP3 SWAP1 MSTORE DUP3 SWAP1 MSTORE POP POP JUMPDEST POP DUP1 DUP1 PUSH2 0xCDE SWAP1 PUSH2 0x1DA4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBC5 JUMP JUMPDEST POP PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD45 JUMPI DUP2 DUP2 DUP10 PUSH2 0xD01 SWAP2 SWAP1 PUSH2 0x1BAD JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xD12 JUMPI PUSH2 0xD11 PUSH2 0x1D77 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD2D JUMPI PUSH2 0xD2C PUSH2 0x1D77 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xCEC JUMP JUMPDEST POP DUP2 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 SHL PUSH2 0xDE6 DUP2 PUSH2 0x1110 JUMP JUMPDEST PUSH2 0xE10 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP4 PUSH2 0xED4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 SHL DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 SHL PUSH2 0xE51 DUP2 PUSH2 0x1110 JUMP JUMPDEST PUSH2 0xE7B PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP4 PUSH2 0x835 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH9 0x56BC75E2D63100000 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEDD DUP3 PUSH2 0x819 JUMP JUMPDEST PUSH2 0xEE6 DUP2 PUSH2 0x1110 JUMP JUMPDEST PUSH2 0xEF0 DUP4 DUP4 PUSH2 0x1293 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH9 0x56BC75E2D63100000 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF7C SWAP3 SWAP2 SWAP1 PUSH2 0x1DEB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF97 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFBB SWAP2 SWAP1 PUSH2 0x1E26 JUMP JUMPDEST LT ISZERO PUSH2 0xFFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF3 SWAP1 PUSH2 0x1E9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1053 CALLER ADDRESS PUSH9 0x56BC75E2D63100000 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x137C SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x769873612369DE25D7A32B1071976767E3071B8182B9353E1CD5D6CF25B33DCA DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x109B SWAP3 SWAP2 SWAP1 PUSH2 0x1F03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1121 DUP2 PUSH2 0x111C PUSH2 0x128C JUMP JUMPDEST PUSH2 0x13FE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x119E DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1157 SWAP3 SWAP2 SWAP1 PUSH2 0x1F25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x144F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11AE DUP4 DUP4 PUSH2 0xD77 JUMP JUMPDEST PUSH2 0x1282 JUMPI PUSH1 0x1 PUSH0 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x121F PUSH2 0x128C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1286 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x129E DUP4 DUP4 PUSH2 0xD77 JUMP JUMPDEST ISZERO PUSH2 0x1372 JUMPI PUSH0 PUSH0 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x130F PUSH2 0x128C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1376 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13F8 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x13B1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x144F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1408 DUP3 DUP3 PUSH2 0xD77 JUMP JUMPDEST PUSH2 0x144B JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1442 SWAP3 SWAP2 SWAP1 PUSH2 0x1F81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x146E JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1487 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x14A2 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x14E4 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14DB SWAP2 SWAP1 PUSH2 0x1670 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1554 DUP2 PUSH2 0x1520 JUMP JUMPDEST DUP2 EQ PUSH2 0x155E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x156F DUP2 PUSH2 0x154B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x158A JUMPI PUSH2 0x1589 PUSH2 0x1518 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1597 DUP5 DUP3 DUP6 ADD PUSH2 0x1561 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15B4 DUP2 PUSH2 0x15A0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15CD PUSH0 DUP4 ADD DUP5 PUSH2 0x15AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15E5 DUP2 PUSH2 0x15D3 JUMP JUMPDEST DUP2 EQ PUSH2 0x15EF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1600 DUP2 PUSH2 0x15DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x161B JUMPI PUSH2 0x161A PUSH2 0x1518 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1628 DUP5 DUP3 DUP6 ADD PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x165A DUP3 PUSH2 0x1631 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x166A DUP2 PUSH2 0x1650 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1683 PUSH0 DUP4 ADD DUP5 PUSH2 0x1661 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1692 DUP2 PUSH2 0x1650 JUMP JUMPDEST DUP2 EQ PUSH2 0x169C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16AD DUP2 PUSH2 0x1689 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16C9 JUMPI PUSH2 0x16C8 PUSH2 0x1518 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16D6 DUP6 DUP3 DUP7 ADD PUSH2 0x169F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16E7 DUP6 DUP3 DUP7 ADD PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1703 DUP2 PUSH2 0x16F1 JUMP JUMPDEST DUP2 EQ PUSH2 0x170D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x171E DUP2 PUSH2 0x16FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1739 JUMPI PUSH2 0x1738 PUSH2 0x1518 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1746 DUP5 DUP3 DUP6 ADD PUSH2 0x1710 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1758 DUP2 PUSH2 0x16F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1771 PUSH0 DUP4 ADD DUP5 PUSH2 0x174F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x178D JUMPI PUSH2 0x178C PUSH2 0x1518 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x179A DUP6 DUP3 DUP7 ADD PUSH2 0x1710 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17AB DUP6 DUP3 DUP7 ADD PUSH2 0x169F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17CB JUMPI PUSH2 0x17CA PUSH2 0x1518 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17D8 DUP6 DUP3 DUP7 ADD PUSH2 0x15F2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17E9 DUP6 DUP3 DUP7 ADD PUSH2 0x15F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1825 DUP2 PUSH2 0x1650 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1834 DUP2 PUSH2 0x15D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x184E PUSH0 DUP6 ADD DUP3 PUSH2 0x181C JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1861 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x182B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1872 DUP4 DUP4 PUSH2 0x183A JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1894 DUP3 PUSH2 0x17F3 JUMP JUMPDEST PUSH2 0x189E DUP2 DUP6 PUSH2 0x17FD JUMP JUMPDEST SWAP4 POP PUSH2 0x18A9 DUP4 PUSH2 0x180D JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18D9 JUMPI DUP2 MLOAD PUSH2 0x18C0 DUP9 DUP3 PUSH2 0x1867 JUMP JUMPDEST SWAP8 POP PUSH2 0x18CB DUP4 PUSH2 0x187E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x18AC JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18FE DUP2 DUP5 PUSH2 0x188A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x191B JUMPI PUSH2 0x191A PUSH2 0x1518 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1928 DUP5 DUP3 DUP6 ADD PUSH2 0x169F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x193A DUP2 PUSH2 0x15D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1953 PUSH0 DUP4 ADD DUP5 PUSH2 0x1931 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x197C PUSH2 0x1977 PUSH2 0x1972 DUP5 PUSH2 0x1631 JUMP JUMPDEST PUSH2 0x1959 JUMP JUMPDEST PUSH2 0x1631 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x198D DUP3 PUSH2 0x1962 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x199E DUP3 PUSH2 0x1983 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19AE DUP2 PUSH2 0x1994 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19C7 PUSH0 DUP4 ADD DUP5 PUSH2 0x19A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19E0 PUSH0 DUP4 ADD DUP6 PUSH2 0x1931 JUMP JUMPDEST PUSH2 0x19ED PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1931 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1A15 JUMPI PUSH2 0x1A14 PUSH2 0x19F4 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A32 JUMPI PUSH2 0x1A31 PUSH2 0x19F8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1A4E JUMPI PUSH2 0x1A4D PUSH2 0x19FC JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A6B JUMPI PUSH2 0x1A6A PUSH2 0x1518 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A88 JUMPI PUSH2 0x1A87 PUSH2 0x151C JUMP JUMPDEST JUMPDEST PUSH2 0x1A94 DUP6 DUP3 DUP7 ADD PUSH2 0x1A00 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420706C61796572206164647265737300000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AE4 PUSH1 0x16 DUP4 PUSH2 0x1AA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AEF DUP3 PUSH2 0x1AB0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B11 DUP2 PUSH2 0x1AD8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53636F7265206D7573742062652067726561746572207468616E207A65726F00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B4C PUSH1 0x1F DUP4 PUSH2 0x1AA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B57 DUP3 PUSH2 0x1B18 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B79 DUP2 PUSH2 0x1B40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1BB7 DUP3 PUSH2 0x15D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BC2 DUP4 PUSH2 0x15D3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1BDA JUMPI PUSH2 0x1BD9 PUSH2 0x1B80 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BEA DUP3 PUSH2 0x15D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BF5 DUP4 PUSH2 0x15D3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1C03 DUP2 PUSH2 0x15D3 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1C1A JUMPI PUSH2 0x1C19 PUSH2 0x1B80 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D756C7469706C696572206D7573742062652067726561746572207468616E20 PUSH0 DUP3 ADD MSTORE PUSH32 0x7A65726F00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C7B PUSH1 0x24 DUP4 PUSH2 0x1AA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C86 DUP3 PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CA8 DUP2 PUSH2 0x1C6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6666736574206F7574206F6620626F756E6473000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CE3 PUSH1 0x14 DUP4 PUSH2 0x1AA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CEE DUP3 PUSH2 0x1CAF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D10 DUP2 PUSH2 0x1CD7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D21 DUP3 PUSH2 0x15D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D2C DUP4 PUSH2 0x15D3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1D44 JUMPI PUSH2 0x1D43 PUSH2 0x1B80 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1DAE DUP3 PUSH2 0x15D3 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1DE0 JUMPI PUSH2 0x1DDF PUSH2 0x1B80 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1DFE PUSH0 DUP4 ADD DUP6 PUSH2 0x1661 JUMP JUMPDEST PUSH2 0x1E0B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1661 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E20 DUP2 PUSH2 0x15DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E3B JUMPI PUSH2 0x1E3A PUSH2 0x1518 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E48 DUP5 DUP3 DUP6 ADD PUSH2 0x1E12 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420616C6C6F77616E636500000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E85 PUSH1 0x16 DUP4 PUSH2 0x1AA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E90 DUP3 PUSH2 0x1E51 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EB2 DUP2 PUSH2 0x1E79 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EE2 DUP4 DUP6 PUSH2 0x1AA0 JUMP JUMPDEST SWAP4 POP PUSH2 0x1EEF DUP4 DUP6 DUP5 PUSH2 0x1EB9 JUMP JUMPDEST PUSH2 0x1EF8 DUP4 PUSH2 0x1EC7 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F1C DUP2 DUP5 DUP7 PUSH2 0x1ED7 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F38 PUSH0 DUP4 ADD DUP6 PUSH2 0x1661 JUMP JUMPDEST PUSH2 0x1F45 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1931 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F5F PUSH0 DUP4 ADD DUP7 PUSH2 0x1661 JUMP JUMPDEST PUSH2 0x1F6C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1661 JUMP JUMPDEST PUSH2 0x1F79 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1931 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F94 PUSH0 DUP4 ADD DUP6 PUSH2 0x1661 JUMP JUMPDEST PUSH2 0x1FA1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x174F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF EXTCALL PUSH6 0x86EED2327A3F JUMPF 0xC5A9 STATICCALL BASEFEE PUSH18 0x9D66C53F90DCBDA49AD893D0D52F5E7AC364 PUSH20 0x6F6C634300081E00330000000000000000000000 ",
							"sourceMap": "241:4636:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2541:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;876:32:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1520:810;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3786:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4202:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4323:252:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5304:245:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2521:1397:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;572:60;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4747:128:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2196:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;386:34:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;316:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4615:126;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;466:52;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2371:111;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4618:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;814:41:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3956:301;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2541:202:0;2626:4;2664:32;2649:47;;;:11;:47;;;;:87;;;;2700:36;2724:11;2700:23;:36::i;:::-;2649:87;2642:94;;2541:202;;;:::o;876:32:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1520:810::-;609:23;2473:16:0;2484:4;2473:10;:16::i;:::-;1638:1:10::1;1620:20;;:6;:20;;::::0;1612:55:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1693:1;1685:5;:9;1677:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;1814:1;1789:7;:15;1797:6;1789:15;;;;;;;;;;;;;;;:21;;;:26;:74;;;;;1862:1;1819:7;:15;1827:6;1819:15;;;;;;;;;;;;;;;:39;;;:44;1789:74;1785:171;;;1879:15;1900:6;1879:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1938:6;1926:19;;;;;;;;;;;;1785:171;1991:5;1966:7;:15;1974:6;1966:15;;;;;;;;;;;;;;;:21;;;:30;;;;;;;:::i;:::-;;;;;;;;2048:15;2006:7;:15;2014:6;2006:15;;;;;;;;;;;;;;;:39;;:57;;;;2153:20;2202:8;2184:15;;2176:5;:23;;;;:::i;:::-;:34;;;;:::i;:::-;2153:57;;2220:44;2243:6;2251:12;2220:9;;;;;;;;;;;:22;;;;:44;;;;;:::i;:::-;2295:6;2280:43;;;2303:5;2310:12;2280:43;;;;;;;:::i;:::-;;;;;;;;1602:728;1520:810:::0;;;:::o;3786:120:0:-;3851:7;3877:6;:12;3884:4;3877:12;;;;;;;;;;;:22;;;3870:29;;3786:120;;;:::o;4202:136::-;4276:18;4289:4;4276:12;:18::i;:::-;2473:16;2484:4;2473:10;:16::i;:::-;4306:25:::1;4317:4;4323:7;4306:10;:25::i;:::-;;4202:136:::0;;;:::o;4323:252:10:-;609:23;2473:16:0;2484:4;2473:10;:16::i;:::-;4441:1:10::1;4425:13;:17;4417:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;4511:13;4493:15;:31;;;;4539:29;4554:13;4539:29;;;;;;:::i;:::-;;;;;;;;4323:252:::0;;:::o;5304:245:0:-;5419:12;:10;:12::i;:::-;5397:34;;:18;:34;;;5393:102;;5454:30;;;;;;;;;;;;;;5393:102;5505:37;5517:4;5523:18;5505:11;:37::i;:::-;;5304:245;;:::o;2521:1397:10:-;2599:25;2653:15;:22;;;;2644:6;:31;2636:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;2710:17;2755:6;2730:15;:22;;;;:31;;;;:::i;:::-;2710:51;;2771:20;2802:9;2794:5;:17;:37;;2826:5;2794:37;;;2814:9;2794:37;2771:60;;2841:37;2904:12;2881:36;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2841:76;;2976:33;3035:15;:22;;;;3012:46;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2976:82;;3073:9;3085:1;3073:13;;3068:162;3092:15;:22;;;;3088:1;:26;3068:162;;;3148:71;;;;;;;;3165:15;3181:1;3165:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3148:71;;;;;;3185:7;:27;3193:15;3209:1;3193:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3185:27;;;;;;;;;;;;;;;:33;;;3148:71;;;3135:7;3143:1;3135:10;;;;;;;;:::i;:::-;;;;;;;:84;;;;3116:3;;;;;;;3068:162;;;;3286:9;3298:1;3286:13;;3281:444;3305:7;:14;3301:1;:18;:47;;;;;3336:12;3327:6;:21;;;;:::i;:::-;3323:1;:25;3301:47;3281:444;;;3369:16;3388:1;3369:20;;3408:9;3424:1;3420;:5;;;;:::i;:::-;3408:17;;3403:182;3431:7;:14;3427:1;:18;3403:182;;;3493:7;3501:8;3493:17;;;;;;;;:::i;:::-;;;;;;;;:23;;;3474:7;3482:1;3474:10;;;;;;;;:::i;:::-;;;;;;;;:16;;;:42;3470:101;;;3551:1;3540:12;;3470:101;3447:3;;;;;;;3403:182;;;;3614:1;3602:8;:13;3598:117;;3670:7;3678:8;3670:17;;;;;;;;:::i;:::-;;;;;;;;3689:7;3697:1;3689:10;;;;;;;;:::i;:::-;;;;;;;;3636:7;3644:1;3636:10;;;;;;;;:::i;:::-;;;;;;;3648:7;3656:8;3648:17;;;;;;;;:::i;:::-;;;;;;;3635:65;;;;;;;;3598:117;3355:370;3350:3;;;;;:::i;:::-;;;;3281:444;;;;3784:9;3796:1;3784:13;;3779:104;3803:12;3799:1;:16;3779:104;;;3853:7;3870:1;3861:6;:10;;;;:::i;:::-;3853:19;;;;;;;;:::i;:::-;;;;;;;;3836:11;3848:1;3836:14;;;;;;;;:::i;:::-;;;;;;;:36;;;;3817:3;;;;;;;3779:104;;;;3900:11;3893:18;;;;;;2521:1397;;;;:::o;572:60::-;609:23;572:60;:::o;2830:136:0:-;2907:4;2930:6;:12;2937:4;2930:12;;;;;;;;;;;:20;;:29;2951:7;2930:29;;;;;;;;;;;;;;;;;;;;;;;;;2923:36;;2830:136;;;;:::o;4747:128:10:-;2241:4:0;4807:18:10;;2473:16:0;2484:4;2473:10;:16::i;:::-;4837:31:10::1;609:23;4860:7;4837:10;:31::i;:::-;4747:128:::0;;:::o;2196:49:0:-;2241:4;2196:49;;;:::o;386:34:10:-;;;;:::o;316:23::-;;;;;;;;;;;;;:::o;4615:126::-;2241:4:0;4674:18:10;;2473:16:0;2484:4;2473:10;:16::i;:::-;4704:30:10::1;609:23;4726:7;4704:9;:30::i;:::-;4615:126:::0;;:::o;466:52::-;504:14;466:52;:::o;2371:111::-;2428:7;2454;:15;2462:6;2454:15;;;;;;;;;;;;;;;:21;;;2447:28;;2371:111;;;:::o;4618:138:0:-;4693:18;4706:4;4693:12;:18::i;:::-;2473:16;2484:4;2473:10;:16::i;:::-;4723:26:::1;4735:4;4741:7;4723:11;:26::i;:::-;;4618:138:::0;;;:::o;814:41:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3956:301::-;504:14;4033:9;;;;;;;;;;;:19;;;4053:10;4073:4;4033:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:61;;4025:96;;;;;;;;;;;;:::i;:::-;;;;;;;;;4131:66;4158:10;4178:4;504:14;4131:9;;;;;;;;;;;:26;;;;:66;;;;;;:::i;:::-;4228:10;4212:38;;;4240:9;;4212:38;;;;;;;:::i;:::-;;;;;;;;3956:301;;:::o;730:146:8:-;806:4;844:25;829:40;;;:11;:40;;;;822:47;;730:146;;;:::o;3175:103:0:-;3241:30;3252:4;3258:12;:10;:12::i;:::-;3241:10;:30::i;:::-;3175:103;:::o;1219:160:6:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;6155:316:0:-;6232:4;6253:22;6261:4;6267:7;6253;:22::i;:::-;6248:217;;6323:4;6291:6;:12;6298:4;6291:12;;;;;;;;;;;:20;;:29;6312:7;6291:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6373:12;:10;:12::i;:::-;6346:40;;6364:7;6346:40;;6358:4;6346:40;;;;;;;;;;6407:4;6400:11;;;;6248:217;6449:5;6442:12;;6155:316;;;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;6708:317:0:-;6786:4;6806:22;6814:4;6820:7;6806;:22::i;:::-;6802:217;;;6876:5;6844:6;:12;6851:4;6844:12;;;;;;;;;;;:20;;:29;6865:7;6844:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6927:12;:10;:12::i;:::-;6900:40;;6918:7;6900:40;;6912:4;6900:40;;;;;;;;;;6961:4;6954:11;;;;6802:217;7003:5;6996:12;;6708:317;;;;;:::o;1618:188:6:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;3408:197:0:-;3496:22;3504:4;3510:7;3496;:22::i;:::-;3491:108;;3574:7;3583:4;3541:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3491:108;3408:197;;:::o;8370:720:6:-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::o;88:117:11:-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:122::-;1674:24;1692:5;1674:24;:::i;:::-;1667:5;1664:35;1654:63;;1713:1;1710;1703:12;1654:63;1601:122;:::o;1729:139::-;1775:5;1813:6;1800:20;1791:29;;1829:33;1856:5;1829:33;:::i;:::-;1729:139;;;;:::o;1874:329::-;1933:6;1982:2;1970:9;1961:7;1957:23;1953:32;1950:119;;;1988:79;;:::i;:::-;1950:119;2108:1;2133:53;2178:7;2169:6;2158:9;2154:22;2133:53;:::i;:::-;2123:63;;2079:117;1874:329;;;;:::o;2209:126::-;2246:7;2286:42;2279:5;2275:54;2264:65;;2209:126;;;:::o;2341:96::-;2378:7;2407:24;2425:5;2407:24;:::i;:::-;2396:35;;2341:96;;;:::o;2443:118::-;2530:24;2548:5;2530:24;:::i;:::-;2525:3;2518:37;2443:118;;:::o;2567:222::-;2660:4;2698:2;2687:9;2683:18;2675:26;;2711:71;2779:1;2768:9;2764:17;2755:6;2711:71;:::i;:::-;2567:222;;;;:::o;2795:122::-;2868:24;2886:5;2868:24;:::i;:::-;2861:5;2858:35;2848:63;;2907:1;2904;2897:12;2848:63;2795:122;:::o;2923:139::-;2969:5;3007:6;2994:20;2985:29;;3023:33;3050:5;3023:33;:::i;:::-;2923:139;;;;:::o;3068:474::-;3136:6;3144;3193:2;3181:9;3172:7;3168:23;3164:32;3161:119;;;3199:79;;:::i;:::-;3161:119;3319:1;3344:53;3389:7;3380:6;3369:9;3365:22;3344:53;:::i;:::-;3334:63;;3290:117;3446:2;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3417:118;3068:474;;;;;:::o;3548:77::-;3585:7;3614:5;3603:16;;3548:77;;;:::o;3631:122::-;3704:24;3722:5;3704:24;:::i;:::-;3697:5;3694:35;3684:63;;3743:1;3740;3733:12;3684:63;3631:122;:::o;3759:139::-;3805:5;3843:6;3830:20;3821:29;;3859:33;3886:5;3859:33;:::i;:::-;3759:139;;;;:::o;3904:329::-;3963:6;4012:2;4000:9;3991:7;3987:23;3983:32;3980:119;;;4018:79;;:::i;:::-;3980:119;4138:1;4163:53;4208:7;4199:6;4188:9;4184:22;4163:53;:::i;:::-;4153:63;;4109:117;3904:329;;;;:::o;4239:118::-;4326:24;4344:5;4326:24;:::i;:::-;4321:3;4314:37;4239:118;;:::o;4363:222::-;4456:4;4494:2;4483:9;4479:18;4471:26;;4507:71;4575:1;4564:9;4560:17;4551:6;4507:71;:::i;:::-;4363:222;;;;:::o;4591:474::-;4659:6;4667;4716:2;4704:9;4695:7;4691:23;4687:32;4684:119;;;4722:79;;:::i;:::-;4684:119;4842:1;4867:53;4912:7;4903:6;4892:9;4888:22;4867:53;:::i;:::-;4857:63;;4813:117;4969:2;4995:53;5040:7;5031:6;5020:9;5016:22;4995:53;:::i;:::-;4985:63;;4940:118;4591:474;;;;;:::o;5071:::-;5139:6;5147;5196:2;5184:9;5175:7;5171:23;5167:32;5164:119;;;5202:79;;:::i;:::-;5164:119;5322:1;5347:53;5392:7;5383:6;5372:9;5368:22;5347:53;:::i;:::-;5337:63;;5293:117;5449:2;5475:53;5520:7;5511:6;5500:9;5496:22;5475:53;:::i;:::-;5465:63;;5420:118;5071:474;;;;;:::o;5551:148::-;5652:6;5686:5;5680:12;5670:22;;5551:148;;;:::o;5705:218::-;5838:11;5872:6;5867:3;5860:19;5912:4;5907:3;5903:14;5888:29;;5705:218;;;;:::o;5929:166::-;6030:4;6053:3;6045:11;;6083:4;6078:3;6074:14;6066:22;;5929:166;;;:::o;6101:108::-;6178:24;6196:5;6178:24;:::i;:::-;6173:3;6166:37;6101:108;;:::o;6215:::-;6292:24;6310:5;6292:24;:::i;:::-;6287:3;6280:37;6215:108;;:::o;6407:518::-;6562:4;6557:3;6553:14;6651:4;6644:5;6640:16;6634:23;6670:63;6727:4;6722:3;6718:14;6704:12;6670:63;:::i;:::-;6577:166;6826:4;6819:5;6815:16;6809:23;6845:63;6902:4;6897:3;6893:14;6879:12;6845:63;:::i;:::-;6753:165;6531:394;6407:518;;:::o;6931:315::-;7068:10;7089:114;7199:3;7191:6;7089:114;:::i;:::-;7235:4;7230:3;7226:14;7212:28;;6931:315;;;;:::o;7252:147::-;7356:4;7388;7383:3;7379:14;7371:22;;7252:147;;;:::o;7487:1004::-;7674:3;7703:88;7785:5;7703:88;:::i;:::-;7807:120;7920:6;7915:3;7807:120;:::i;:::-;7800:127;;7951:90;8035:5;7951:90;:::i;:::-;8064:7;8095:1;8080:386;8105:6;8102:1;8099:13;8080:386;;;8181:6;8175:13;8208:131;8335:3;8320:13;8208:131;:::i;:::-;8201:138;;8362:94;8449:6;8362:94;:::i;:::-;8352:104;;8140:326;8127:1;8124;8120:9;8115:14;;8080:386;;;8084:14;8482:3;8475:10;;7679:812;;;7487:1004;;;;:::o;8497:509::-;8708:4;8746:2;8735:9;8731:18;8723:26;;8795:9;8789:4;8785:20;8781:1;8770:9;8766:17;8759:47;8823:176;8994:4;8985:6;8823:176;:::i;:::-;8815:184;;8497:509;;;;:::o;9012:329::-;9071:6;9120:2;9108:9;9099:7;9095:23;9091:32;9088:119;;;9126:79;;:::i;:::-;9088:119;9246:1;9271:53;9316:7;9307:6;9296:9;9292:22;9271:53;:::i;:::-;9261:63;;9217:117;9012:329;;;;:::o;9347:118::-;9434:24;9452:5;9434:24;:::i;:::-;9429:3;9422:37;9347:118;;:::o;9471:222::-;9564:4;9602:2;9591:9;9587:18;9579:26;;9615:71;9683:1;9672:9;9668:17;9659:6;9615:71;:::i;:::-;9471:222;;;;:::o;9699:60::-;9727:3;9748:5;9741:12;;9699:60;;;:::o;9765:142::-;9815:9;9848:53;9866:34;9875:24;9893:5;9875:24;:::i;:::-;9866:34;:::i;:::-;9848:53;:::i;:::-;9835:66;;9765:142;;;:::o;9913:126::-;9963:9;9996:37;10027:5;9996:37;:::i;:::-;9983:50;;9913:126;;;:::o;10045:140::-;10109:9;10142:37;10173:5;10142:37;:::i;:::-;10129:50;;10045:140;;;:::o;10191:159::-;10292:51;10337:5;10292:51;:::i;:::-;10287:3;10280:64;10191:159;;:::o;10356:250::-;10463:4;10501:2;10490:9;10486:18;10478:26;;10514:85;10596:1;10585:9;10581:17;10572:6;10514:85;:::i;:::-;10356:250;;;;:::o;10612:332::-;10733:4;10771:2;10760:9;10756:18;10748:26;;10784:71;10852:1;10841:9;10837:17;10828:6;10784:71;:::i;:::-;10865:72;10933:2;10922:9;10918:18;10909:6;10865:72;:::i;:::-;10612:332;;;;;:::o;10950:117::-;11059:1;11056;11049:12;11073:117;11182:1;11179;11172:12;11196:117;11305:1;11302;11295:12;11333:553;11391:8;11401:6;11451:3;11444:4;11436:6;11432:17;11428:27;11418:122;;11459:79;;:::i;:::-;11418:122;11572:6;11559:20;11549:30;;11602:18;11594:6;11591:30;11588:117;;;11624:79;;:::i;:::-;11588:117;11738:4;11730:6;11726:17;11714:29;;11792:3;11784:4;11776:6;11772:17;11762:8;11758:32;11755:41;11752:128;;;11799:79;;:::i;:::-;11752:128;11333:553;;;;;:::o;11892:529::-;11963:6;11971;12020:2;12008:9;11999:7;11995:23;11991:32;11988:119;;;12026:79;;:::i;:::-;11988:119;12174:1;12163:9;12159:17;12146:31;12204:18;12196:6;12193:30;12190:117;;;12226:79;;:::i;:::-;12190:117;12339:65;12396:7;12387:6;12376:9;12372:22;12339:65;:::i;:::-;12321:83;;;;12117:297;11892:529;;;;;:::o;12427:169::-;12511:11;12545:6;12540:3;12533:19;12585:4;12580:3;12576:14;12561:29;;12427:169;;;;:::o;12602:172::-;12742:24;12738:1;12730:6;12726:14;12719:48;12602:172;:::o;12780:366::-;12922:3;12943:67;13007:2;13002:3;12943:67;:::i;:::-;12936:74;;13019:93;13108:3;13019:93;:::i;:::-;13137:2;13132:3;13128:12;13121:19;;12780:366;;;:::o;13152:419::-;13318:4;13356:2;13345:9;13341:18;13333:26;;13405:9;13399:4;13395:20;13391:1;13380:9;13376:17;13369:47;13433:131;13559:4;13433:131;:::i;:::-;13425:139;;13152:419;;;:::o;13577:181::-;13717:33;13713:1;13705:6;13701:14;13694:57;13577:181;:::o;13764:366::-;13906:3;13927:67;13991:2;13986:3;13927:67;:::i;:::-;13920:74;;14003:93;14092:3;14003:93;:::i;:::-;14121:2;14116:3;14112:12;14105:19;;13764:366;;;:::o;14136:419::-;14302:4;14340:2;14329:9;14325:18;14317:26;;14389:9;14383:4;14379:20;14375:1;14364:9;14360:17;14353:47;14417:131;14543:4;14417:131;:::i;:::-;14409:139;;14136:419;;;:::o;14561:180::-;14609:77;14606:1;14599:88;14706:4;14703:1;14696:15;14730:4;14727:1;14720:15;14747:191;14787:3;14806:20;14824:1;14806:20;:::i;:::-;14801:25;;14840:20;14858:1;14840:20;:::i;:::-;14835:25;;14883:1;14880;14876:9;14869:16;;14904:3;14901:1;14898:10;14895:36;;;14911:18;;:::i;:::-;14895:36;14747:191;;;;:::o;14944:410::-;14984:7;15007:20;15025:1;15007:20;:::i;:::-;15002:25;;15041:20;15059:1;15041:20;:::i;:::-;15036:25;;15096:1;15093;15089:9;15118:30;15136:11;15118:30;:::i;:::-;15107:41;;15297:1;15288:7;15284:15;15281:1;15278:22;15258:1;15251:9;15231:83;15208:139;;15327:18;;:::i;:::-;15208:139;14992:362;14944:410;;;;:::o;15360:223::-;15500:34;15496:1;15488:6;15484:14;15477:58;15569:6;15564:2;15556:6;15552:15;15545:31;15360:223;:::o;15589:366::-;15731:3;15752:67;15816:2;15811:3;15752:67;:::i;:::-;15745:74;;15828:93;15917:3;15828:93;:::i;:::-;15946:2;15941:3;15937:12;15930:19;;15589:366;;;:::o;15961:419::-;16127:4;16165:2;16154:9;16150:18;16142:26;;16214:9;16208:4;16204:20;16200:1;16189:9;16185:17;16178:47;16242:131;16368:4;16242:131;:::i;:::-;16234:139;;15961:419;;;:::o;16386:170::-;16526:22;16522:1;16514:6;16510:14;16503:46;16386:170;:::o;16562:366::-;16704:3;16725:67;16789:2;16784:3;16725:67;:::i;:::-;16718:74;;16801:93;16890:3;16801:93;:::i;:::-;16919:2;16914:3;16910:12;16903:19;;16562:366;;;:::o;16934:419::-;17100:4;17138:2;17127:9;17123:18;17115:26;;17187:9;17181:4;17177:20;17173:1;17162:9;17158:17;17151:47;17215:131;17341:4;17215:131;:::i;:::-;17207:139;;16934:419;;;:::o;17359:194::-;17399:4;17419:20;17437:1;17419:20;:::i;:::-;17414:25;;17453:20;17471:1;17453:20;:::i;:::-;17448:25;;17497:1;17494;17490:9;17482:17;;17521:1;17515:4;17512:11;17509:37;;;17526:18;;:::i;:::-;17509:37;17359:194;;;;:::o;17559:180::-;17607:77;17604:1;17597:88;17704:4;17701:1;17694:15;17728:4;17725:1;17718:15;17745:180;17793:77;17790:1;17783:88;17890:4;17887:1;17880:15;17914:4;17911:1;17904:15;17931:233;17970:3;17993:24;18011:5;17993:24;:::i;:::-;17984:33;;18039:66;18032:5;18029:77;18026:103;;18109:18;;:::i;:::-;18026:103;18156:1;18149:5;18145:13;18138:20;;17931:233;;;:::o;18170:332::-;18291:4;18329:2;18318:9;18314:18;18306:26;;18342:71;18410:1;18399:9;18395:17;18386:6;18342:71;:::i;:::-;18423:72;18491:2;18480:9;18476:18;18467:6;18423:72;:::i;:::-;18170:332;;;;;:::o;18508:143::-;18565:5;18596:6;18590:13;18581:22;;18612:33;18639:5;18612:33;:::i;:::-;18508:143;;;;:::o;18657:351::-;18727:6;18776:2;18764:9;18755:7;18751:23;18747:32;18744:119;;;18782:79;;:::i;:::-;18744:119;18902:1;18927:64;18983:7;18974:6;18963:9;18959:22;18927:64;:::i;:::-;18917:74;;18873:128;18657:351;;;;:::o;19014:172::-;19154:24;19150:1;19142:6;19138:14;19131:48;19014:172;:::o;19192:366::-;19334:3;19355:67;19419:2;19414:3;19355:67;:::i;:::-;19348:74;;19431:93;19520:3;19431:93;:::i;:::-;19549:2;19544:3;19540:12;19533:19;;19192:366;;;:::o;19564:419::-;19730:4;19768:2;19757:9;19753:18;19745:26;;19817:9;19811:4;19807:20;19803:1;19792:9;19788:17;19781:47;19845:131;19971:4;19845:131;:::i;:::-;19837:139;;19564:419;;;:::o;19989:148::-;20087:6;20082:3;20077;20064:30;20128:1;20119:6;20114:3;20110:16;20103:27;19989:148;;;:::o;20143:102::-;20184:6;20235:2;20231:7;20226:2;20219:5;20215:14;20211:28;20201:38;;20143:102;;;:::o;20275:317::-;20373:3;20394:71;20458:6;20453:3;20394:71;:::i;:::-;20387:78;;20475:56;20524:6;20519:3;20512:5;20475:56;:::i;:::-;20556:29;20578:6;20556:29;:::i;:::-;20551:3;20547:39;20540:46;;20275:317;;;;;:::o;20598:333::-;20721:4;20759:2;20748:9;20744:18;20736:26;;20808:9;20802:4;20798:20;20794:1;20783:9;20779:17;20772:47;20836:88;20919:4;20910:6;20902;20836:88;:::i;:::-;20828:96;;20598:333;;;;;:::o;20937:332::-;21058:4;21096:2;21085:9;21081:18;21073:26;;21109:71;21177:1;21166:9;21162:17;21153:6;21109:71;:::i;:::-;21190:72;21258:2;21247:9;21243:18;21234:6;21190:72;:::i;:::-;20937:332;;;;;:::o;21275:442::-;21424:4;21462:2;21451:9;21447:18;21439:26;;21475:71;21543:1;21532:9;21528:17;21519:6;21475:71;:::i;:::-;21556:72;21624:2;21613:9;21609:18;21600:6;21556:72;:::i;:::-;21638;21706:2;21695:9;21691:18;21682:6;21638:72;:::i;:::-;21275:442;;;;;;:::o;21723:332::-;21844:4;21882:2;21871:9;21867:18;21859:26;;21895:71;21963:1;21952:9;21948:17;21939:6;21895:71;:::i;:::-;21976:72;22044:2;22033:9;22029:18;22020:6;21976:72;:::i;:::-;21723:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1631600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ADMIN_ROLE()": "414",
								"DEFAULT_ADMIN_ROLE()": "374",
								"REPAIR_COST()": "347",
								"gameToken()": "infinite",
								"getLeaderboard(uint256,uint256)": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"getScore(address)": "2878",
								"grantAdminRole(address)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3231",
								"playerAddresses(uint256)": "4990",
								"players(address)": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"repairVehicle(string)": "infinite",
								"revokeAdminRole(address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"submitScore(address,uint256)": "infinite",
								"supportsInterface(bytes4)": "741",
								"tokenMultiplier()": "2492",
								"updateTokenMultiplier(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 241,
									"end": 4877,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 241,
									"end": 4877,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 241,
									"end": 4877,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 419,
									"end": 420,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 386,
									"end": 420,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 386,
									"end": 420,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1243,
									"end": 1469,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 1243,
									"end": 1469,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1243,
									"end": 1469,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1243,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1243,
									"end": 1469,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1243,
									"end": 1469,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1243,
									"end": 1469,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1243,
									"end": 1469,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1243,
									"end": 1469,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1243,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1243,
									"end": 1469,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1243,
									"end": 1469,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1243,
									"end": 1469,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1243,
									"end": 1469,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 1243,
									"end": 1469,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 1243,
									"end": 1469,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1243,
									"end": 1469,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1243,
									"end": 1469,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 1243,
									"end": 1469,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1243,
									"end": 1469,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1243,
									"end": 1469,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1243,
									"end": 1469,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1243,
									"end": 1469,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1243,
									"end": 1469,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1243,
									"end": 1469,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1243,
									"end": 1469,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1243,
									"end": 1469,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1243,
									"end": 1469,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1243,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1243,
									"end": 1469,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1243,
									"end": 1469,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1243,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1243,
									"end": 1469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1243,
									"end": 1469,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1243,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1307,
									"end": 1320,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1288,
									"end": 1297,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1288,
									"end": 1297,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1321,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 1288,
									"end": 1321,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 1288,
									"end": 1321,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1288,
									"end": 1321,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 1288,
									"end": 1321,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1288,
									"end": 1321,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1288,
									"end": 1321,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1288,
									"end": 1321,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1288,
									"end": 1321,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1288,
									"end": 1321,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1288,
									"end": 1321,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1288,
									"end": 1321,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1288,
									"end": 1321,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1288,
									"end": 1321,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1288,
									"end": 1321,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1288,
									"end": 1321,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1288,
									"end": 1321,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1288,
									"end": 1321,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1376,
									"end": 1418,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 2241,
									"end": 2245,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1387,
									"end": 1405,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1387,
									"end": 1405,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 1417,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 1376,
									"end": 1386,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 1376,
									"end": 1386,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1376,
									"end": 1386,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1376,
									"end": 1418,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1376,
									"end": 1418,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1376,
									"end": 1418,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1376,
									"end": 1418,
									"name": "tag",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 1376,
									"end": 1418,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1376,
									"end": 1418,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1428,
									"end": 1462,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 609,
									"end": 632,
									"name": "PUSH",
									"source": 10,
									"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
								},
								{
									"begin": 1451,
									"end": 1461,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 1428,
									"end": 1438,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 1428,
									"end": 1438,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1428,
									"end": 1438,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1428,
									"end": 1462,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1428,
									"end": 1462,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1428,
									"end": 1462,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1428,
									"end": 1462,
									"name": "tag",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 1428,
									"end": 1462,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1428,
									"end": 1462,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1243,
									"end": 1469,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 241,
									"end": 4877,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 241,
									"end": 4877,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6232,
									"end": 6236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 6261,
									"end": 6265,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6267,
									"end": 6274,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6253,
									"end": 6260,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6253,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6253,
									"end": 6260,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6253,
									"end": 6275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6323,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6291,
									"end": 6297,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6311,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6311,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6312,
									"end": 6319,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 6373,
									"end": 6383,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 6373,
									"end": 6383,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6373,
									"end": 6383,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6364,
									"end": 6371,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6358,
									"end": 6362,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6407,
									"end": 6411,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6449,
									"end": 6454,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6442,
									"end": 6454,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6442,
									"end": 6454,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2907,
									"end": 2911,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2936,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2937,
									"end": 2941,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2950,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2950,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2951,
									"end": 2958,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2923,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2923,
									"end": 2959,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 241,
									"end": 4877,
									"name": "tag",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 241,
									"end": 4877,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 241,
									"end": 4877,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 241,
									"end": 4877,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 241,
									"end": 4877,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 241,
									"end": 4877,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 4877,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 241,
									"end": 4877,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 4877,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220aff86586eed2327a3fe5c5a9fa48719d66c53f90dcbda49ad893d0d52f5e7ac364736f6c634300081e0033",
									".code": [
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH",
											"source": 10,
											"value": "9A19C7B0"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH",
											"source": 10,
											"value": "D12AF19A"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH",
											"source": 10,
											"value": "D12AF19A"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH",
											"source": 10,
											"value": "D47875D0"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH",
											"source": 10,
											"value": "D547741F"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH",
											"source": 10,
											"value": "E2EB41FF"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH",
											"source": 10,
											"value": "ED4B7EAA"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH",
											"source": 10,
											"value": "9A19C7B0"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH",
											"source": 10,
											"value": "A217FDDF"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH",
											"source": 10,
											"value": "BA3F5A12"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH",
											"source": 10,
											"value": "C3DFDAE6"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH",
											"source": 10,
											"value": "C634B78E"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH",
											"source": 10,
											"value": "3596362B"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH",
											"source": 10,
											"value": "3596362B"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH",
											"source": 10,
											"value": "36568ABE"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH",
											"source": 10,
											"value": "73AF16FC"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH",
											"source": 10,
											"value": "75B238FC"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH",
											"source": 10,
											"value": "91D14854"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A7"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH",
											"source": 10,
											"value": "15C6AEE2"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH",
											"source": 10,
											"value": "1DB544C0"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH",
											"source": 10,
											"value": "248A9CA3"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH",
											"source": 10,
											"value": "2F2FF15D"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 4877,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 876,
											"end": 908,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 876,
											"end": 908,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 876,
											"end": 908,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 876,
											"end": 908,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 876,
											"end": 908,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 876,
											"end": 908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 876,
											"end": 908,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 876,
											"end": 908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 876,
											"end": 908,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 876,
											"end": 908,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 876,
											"end": 908,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 876,
											"end": 908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 876,
											"end": 908,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 876,
											"end": 908,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1520,
											"end": 2330,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1520,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1520,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 1520,
											"end": 2330,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1520,
											"end": 2330,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1520,
											"end": 2330,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1520,
											"end": 2330,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1520,
											"end": 2330,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1520,
											"end": 2330,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1520,
											"end": 2330,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1520,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 1520,
											"end": 2330,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1520,
											"end": 2330,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1520,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1520,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1520,
											"end": 2330,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 1520,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1520,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 1520,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1520,
											"end": 2330,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 1520,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1520,
											"end": 2330,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4575,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 4323,
											"end": 4575,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4323,
											"end": 4575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 4323,
											"end": 4575,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4323,
											"end": 4575,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4323,
											"end": 4575,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4323,
											"end": 4575,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4323,
											"end": 4575,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4323,
											"end": 4575,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4323,
											"end": 4575,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4323,
											"end": 4575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 4323,
											"end": 4575,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4323,
											"end": 4575,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4323,
											"end": 4575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 4323,
											"end": 4575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4323,
											"end": 4575,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 4323,
											"end": 4575,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4323,
											"end": 4575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 4323,
											"end": 4575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4323,
											"end": 4575,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 4323,
											"end": 4575,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4323,
											"end": 4575,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2521,
											"end": 3918,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 2521,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2521,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 2521,
											"end": 3918,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2521,
											"end": 3918,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2521,
											"end": 3918,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2521,
											"end": 3918,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2521,
											"end": 3918,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2521,
											"end": 3918,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2521,
											"end": 3918,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2521,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 2521,
											"end": 3918,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2521,
											"end": 3918,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2521,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2521,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2521,
											"end": 3918,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 2521,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2521,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 2521,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2521,
											"end": 3918,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 2521,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2521,
											"end": 3918,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 3918,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2521,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 2521,
											"end": 3918,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2521,
											"end": 3918,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2521,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 2521,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2521,
											"end": 3918,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 2521,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2521,
											"end": 3918,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 3918,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2521,
											"end": 3918,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2521,
											"end": 3918,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2521,
											"end": 3918,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2521,
											"end": 3918,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2521,
											"end": 3918,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 572,
											"end": 632,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 572,
											"end": 632,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 572,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 572,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 572,
											"end": 632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 572,
											"end": 632,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 572,
											"end": 632,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 572,
											"end": 632,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 572,
											"end": 632,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 572,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 572,
											"end": 632,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 572,
											"end": 632,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 572,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 572,
											"end": 632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 572,
											"end": 632,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 572,
											"end": 632,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 572,
											"end": 632,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 572,
											"end": 632,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 572,
											"end": 632,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 572,
											"end": 632,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 572,
											"end": 632,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 572,
											"end": 632,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 572,
											"end": 632,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4875,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 4747,
											"end": 4875,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4747,
											"end": 4875,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 4747,
											"end": 4875,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4747,
											"end": 4875,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4747,
											"end": 4875,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4747,
											"end": 4875,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4747,
											"end": 4875,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4747,
											"end": 4875,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4747,
											"end": 4875,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4747,
											"end": 4875,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 4747,
											"end": 4875,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4747,
											"end": 4875,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4747,
											"end": 4875,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 4747,
											"end": 4875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4747,
											"end": 4875,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 4747,
											"end": 4875,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4747,
											"end": 4875,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 4747,
											"end": 4875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4747,
											"end": 4875,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 4747,
											"end": 4875,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4747,
											"end": 4875,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 386,
											"end": 420,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 386,
											"end": 420,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 386,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 386,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 386,
											"end": 420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 386,
											"end": 420,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 386,
											"end": 420,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 386,
											"end": 420,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 420,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 386,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 386,
											"end": 420,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 386,
											"end": 420,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 386,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 386,
											"end": 420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 386,
											"end": 420,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 386,
											"end": 420,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 386,
											"end": 420,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 420,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 386,
											"end": 420,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 386,
											"end": 420,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 386,
											"end": 420,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 386,
											"end": 420,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 386,
											"end": 420,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 316,
											"end": 339,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 316,
											"end": 339,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 316,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 316,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 316,
											"end": 339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 316,
											"end": 339,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 316,
											"end": 339,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 316,
											"end": 339,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 316,
											"end": 339,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 316,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 316,
											"end": 339,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 316,
											"end": 339,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 316,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 316,
											"end": 339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 316,
											"end": 339,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 316,
											"end": 339,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 316,
											"end": 339,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 316,
											"end": 339,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 316,
											"end": 339,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 316,
											"end": 339,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 316,
											"end": 339,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 316,
											"end": 339,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 316,
											"end": 339,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 4615,
											"end": 4741,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 4615,
											"end": 4741,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4615,
											"end": 4741,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 4615,
											"end": 4741,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4615,
											"end": 4741,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4615,
											"end": 4741,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4615,
											"end": 4741,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4615,
											"end": 4741,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4615,
											"end": 4741,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4615,
											"end": 4741,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4615,
											"end": 4741,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 4615,
											"end": 4741,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4615,
											"end": 4741,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4615,
											"end": 4741,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 4615,
											"end": 4741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4615,
											"end": 4741,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 4615,
											"end": 4741,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4615,
											"end": 4741,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 4615,
											"end": 4741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4615,
											"end": 4741,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 4615,
											"end": 4741,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4615,
											"end": 4741,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 466,
											"end": 518,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 466,
											"end": 518,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 466,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 466,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 466,
											"end": 518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 466,
											"end": 518,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 466,
											"end": 518,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 466,
											"end": 518,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 518,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 466,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 466,
											"end": 518,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 466,
											"end": 518,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 466,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 466,
											"end": 518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 466,
											"end": 518,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 466,
											"end": 518,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 466,
											"end": 518,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 518,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 466,
											"end": 518,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 466,
											"end": 518,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 466,
											"end": 518,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 466,
											"end": 518,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 466,
											"end": 518,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2371,
											"end": 2482,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 2371,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2371,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 2371,
											"end": 2482,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2371,
											"end": 2482,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2371,
											"end": 2482,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2371,
											"end": 2482,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2371,
											"end": 2482,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2371,
											"end": 2482,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2371,
											"end": 2482,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2371,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 2371,
											"end": 2482,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2371,
											"end": 2482,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2371,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 2371,
											"end": 2482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2371,
											"end": 2482,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 2371,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2371,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 2371,
											"end": 2482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2371,
											"end": 2482,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 2371,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2371,
											"end": 2482,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2371,
											"end": 2482,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2371,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 2371,
											"end": 2482,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2371,
											"end": 2482,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2371,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 2371,
											"end": 2482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2371,
											"end": 2482,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 2371,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2371,
											"end": 2482,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2371,
											"end": 2482,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2371,
											"end": 2482,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2371,
											"end": 2482,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2371,
											"end": 2482,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2371,
											"end": 2482,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2371,
											"end": 2482,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 814,
											"end": 855,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 814,
											"end": 855,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 814,
											"end": 855,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 814,
											"end": 855,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 814,
											"end": 855,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 814,
											"end": 855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 814,
											"end": 855,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 814,
											"end": 855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 814,
											"end": 855,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 814,
											"end": 855,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 814,
											"end": 855,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 814,
											"end": 855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 814,
											"end": 855,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 814,
											"end": 855,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4257,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 3956,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 3956,
											"end": 4257,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3956,
											"end": 4257,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4257,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4257,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4257,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4257,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4257,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 3956,
											"end": 4257,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4257,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 3956,
											"end": 4257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4257,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 3956,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 3956,
											"end": 4257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4257,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 3956,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4257,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2664,
											"end": 2696,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2724,
											"end": 2735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2700,
											"end": 2736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2642,
											"end": 2736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2642,
											"end": 2736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 876,
											"end": 908,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 876,
											"end": 908,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 876,
											"end": 908,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 876,
											"end": 908,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 908,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 876,
											"end": 908,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 908,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 876,
											"end": 908,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 908,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 908,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 876,
											"end": 908,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 876,
											"end": 908,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 876,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1520,
											"end": 2330,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 1520,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 609,
											"end": 632,
											"name": "PUSH",
											"source": 10,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1639,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1620,
											"end": 1640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1620,
											"end": 1640,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1626,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1620,
											"end": 1640,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1667,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 1612,
											"end": 1667,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1612,
											"end": 1667,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1612,
											"end": 1667,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1667,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1612,
											"end": 1667,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1667,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 1612,
											"end": 1667,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1667,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 1612,
											"end": 1667,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1667,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 1612,
											"end": 1667,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1612,
											"end": 1667,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1667,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1667,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1667,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1667,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1667,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1667,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 1612,
											"end": 1667,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1693,
											"end": 1694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1690,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1685,
											"end": 1694,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1730,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 1677,
											"end": 1730,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1677,
											"end": 1730,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1677,
											"end": 1730,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1730,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1677,
											"end": 1730,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1730,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 1677,
											"end": 1730,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1730,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 1677,
											"end": 1730,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1730,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 1677,
											"end": 1730,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1677,
											"end": 1730,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1730,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1730,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1730,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1730,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1730,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1730,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 1677,
											"end": 1730,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1815,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1789,
											"end": 1796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1789,
											"end": 1804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1797,
											"end": 1803,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1789,
											"end": 1804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1789,
											"end": 1804,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1789,
											"end": 1804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1789,
											"end": 1804,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1789,
											"end": 1804,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1789,
											"end": 1804,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1789,
											"end": 1804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1789,
											"end": 1804,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1789,
											"end": 1804,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1789,
											"end": 1804,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1789,
											"end": 1804,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1789,
											"end": 1804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1789,
											"end": 1804,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1789,
											"end": 1804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1789,
											"end": 1804,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1789,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1789,
											"end": 1810,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1789,
											"end": 1810,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1789,
											"end": 1815,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1789,
											"end": 1863,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1789,
											"end": 1863,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1789,
											"end": 1863,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 1789,
											"end": 1863,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1789,
											"end": 1863,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1862,
											"end": 1863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1819,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1827,
											"end": 1833,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1819,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1819,
											"end": 1834,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1819,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1819,
											"end": 1834,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1819,
											"end": 1834,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1819,
											"end": 1834,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1819,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1834,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1819,
											"end": 1834,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1819,
											"end": 1834,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1819,
											"end": 1834,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1819,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1834,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1819,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1834,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1819,
											"end": 1858,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1819,
											"end": 1858,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1819,
											"end": 1858,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1819,
											"end": 1863,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1789,
											"end": 1863,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 1789,
											"end": 1863,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1785,
											"end": 1956,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1785,
											"end": 1956,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 1785,
											"end": 1956,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1900,
											"end": 1906,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1907,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1938,
											"end": 1944,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "F2AE205522024C14E5A7A26BA6D1FB1252DC8E161B5ABC79ED5795FD3C5B9261"
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 1785,
											"end": 1956,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 1785,
											"end": 1956,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 1996,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1966,
											"end": 1973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1966,
											"end": 1981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1980,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1966,
											"end": 1981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1966,
											"end": 1981,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1966,
											"end": 1981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1966,
											"end": 1981,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1966,
											"end": 1981,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1966,
											"end": 1981,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1966,
											"end": 1981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1966,
											"end": 1981,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1966,
											"end": 1981,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1966,
											"end": 1981,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1966,
											"end": 1981,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1966,
											"end": 1981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1966,
											"end": 1981,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1966,
											"end": 1981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1966,
											"end": 1981,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1966,
											"end": 1987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1966,
											"end": 1987,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1966,
											"end": 1987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1966,
											"end": 1996,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1966,
											"end": 1996,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1966,
											"end": 1996,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1966,
											"end": 1996,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 1966,
											"end": 1996,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1966,
											"end": 1996,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1966,
											"end": 1996,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 1966,
											"end": 1996,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1966,
											"end": 1996,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 1966,
											"end": 1996,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1966,
											"end": 1996,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1966,
											"end": 1996,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1966,
											"end": 1996,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1966,
											"end": 1996,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1966,
											"end": 1996,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1966,
											"end": 1996,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1966,
											"end": 1996,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2048,
											"end": 2063,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2006,
											"end": 2021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2014,
											"end": 2020,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2021,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2021,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2021,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2021,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2006,
											"end": 2021,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2021,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2021,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2021,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2006,
											"end": 2021,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2021,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2006,
											"end": 2045,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2063,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2063,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2063,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2063,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2153,
											"end": 2173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2202,
											"end": 2210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2184,
											"end": 2199,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2184,
											"end": 2199,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2181,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2199,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 2176,
											"end": 2199,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2199,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2199,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 2176,
											"end": 2199,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2199,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 2176,
											"end": 2199,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2210,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 2176,
											"end": 2210,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2210,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2210,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 2176,
											"end": 2210,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2176,
											"end": 2210,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 2176,
											"end": 2210,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2153,
											"end": 2210,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2153,
											"end": 2210,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2220,
											"end": 2264,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 2243,
											"end": 2249,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2251,
											"end": 2263,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2220,
											"end": 2229,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2220,
											"end": 2229,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2220,
											"end": 2229,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2220,
											"end": 2229,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2220,
											"end": 2229,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2220,
											"end": 2229,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2220,
											"end": 2229,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2220,
											"end": 2229,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2220,
											"end": 2229,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2220,
											"end": 2229,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2220,
											"end": 2229,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2220,
											"end": 2242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2220,
											"end": 2242,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2220,
											"end": 2242,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 2220,
											"end": 2242,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2220,
											"end": 2264,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2220,
											"end": 2264,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2220,
											"end": 2264,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2220,
											"end": 2264,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2220,
											"end": 2264,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2220,
											"end": 2264,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2220,
											"end": 2264,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 2220,
											"end": 2264,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2295,
											"end": 2301,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2280,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2280,
											"end": 2323,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2280,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "B7F20D0949B6A8BC59D005AF4A52F7FF5D0CFCDE9056FA556ADB0E4B24DCB6D2"
										},
										{
											"begin": 2303,
											"end": 2308,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2310,
											"end": 2322,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2280,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2280,
											"end": 2323,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2280,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 2280,
											"end": 2323,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2280,
											"end": 2323,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2280,
											"end": 2323,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2280,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 2280,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2280,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 2280,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2280,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2280,
											"end": 2323,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2280,
											"end": 2323,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2280,
											"end": 2323,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2280,
											"end": 2323,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2280,
											"end": 2323,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2280,
											"end": 2323,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 1602,
											"end": 2330,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1520,
											"end": 2330,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1520,
											"end": 2330,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1520,
											"end": 2330,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1520,
											"end": 2330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3884,
											"end": 3888,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3870,
											"end": 3899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3870,
											"end": 3899,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 4289,
											"end": 4293,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4276,
											"end": 4294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4317,
											"end": 4321,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4330,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4316,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 4306,
											"end": 4331,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4575,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 4323,
											"end": 4575,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 609,
											"end": 632,
											"name": "PUSH",
											"source": 10,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4441,
											"end": 4442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4425,
											"end": 4438,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4425,
											"end": 4442,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4417,
											"end": 4483,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 4417,
											"end": 4483,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4417,
											"end": 4483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4417,
											"end": 4483,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4417,
											"end": 4483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4417,
											"end": 4483,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4417,
											"end": 4483,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4417,
											"end": 4483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4417,
											"end": 4483,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4417,
											"end": 4483,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 4417,
											"end": 4483,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4417,
											"end": 4483,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 4417,
											"end": 4483,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4417,
											"end": 4483,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 4417,
											"end": 4483,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4417,
											"end": 4483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4417,
											"end": 4483,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4417,
											"end": 4483,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4417,
											"end": 4483,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4417,
											"end": 4483,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4417,
											"end": 4483,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4417,
											"end": 4483,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4417,
											"end": 4483,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 4417,
											"end": 4483,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4511,
											"end": 4524,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4493,
											"end": 4508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 4493,
											"end": 4524,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4493,
											"end": 4524,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4493,
											"end": 4524,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4493,
											"end": 4524,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4539,
											"end": 4568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "E6B19B2C6617851A0F4C49DF91138E172046FFA3FC94114D4A7294D0E4362DD6"
										},
										{
											"begin": 4554,
											"end": 4567,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4539,
											"end": 4568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4539,
											"end": 4568,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4539,
											"end": 4568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 4539,
											"end": 4568,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4539,
											"end": 4568,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4539,
											"end": 4568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 4539,
											"end": 4568,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4539,
											"end": 4568,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 4539,
											"end": 4568,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4539,
											"end": 4568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4539,
											"end": 4568,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4539,
											"end": 4568,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4539,
											"end": 4568,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4539,
											"end": 4568,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4539,
											"end": 4568,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4539,
											"end": 4568,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 4323,
											"end": 4575,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4323,
											"end": 4575,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4323,
											"end": 4575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 5419,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5419,
											"end": 5431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5517,
											"end": 5521,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5523,
											"end": 5541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 5505,
											"end": 5542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2521,
											"end": 3918,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 2521,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2624,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2653,
											"end": 2668,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2653,
											"end": 2675,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2653,
											"end": 2675,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2653,
											"end": 2675,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2653,
											"end": 2675,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2644,
											"end": 2650,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2644,
											"end": 2675,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 2636,
											"end": 2700,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2700,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2636,
											"end": 2700,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2700,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2636,
											"end": 2700,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2700,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2700,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2636,
											"end": 2700,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 2636,
											"end": 2700,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 2636,
											"end": 2700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2700,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 2636,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2700,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2636,
											"end": 2700,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2700,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2700,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2700,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2700,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2700,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2700,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 2636,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2727,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2755,
											"end": 2761,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2730,
											"end": 2745,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2730,
											"end": 2752,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2730,
											"end": 2752,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2730,
											"end": 2752,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2730,
											"end": 2752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2730,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 2730,
											"end": 2761,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2730,
											"end": 2761,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2730,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 2730,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2730,
											"end": 2761,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 2730,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2761,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2761,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2771,
											"end": 2791,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2802,
											"end": 2811,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2794,
											"end": 2799,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2794,
											"end": 2811,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2794,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 2794,
											"end": 2831,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2831,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2794,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 2794,
											"end": 2831,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2794,
											"end": 2831,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 2794,
											"end": 2831,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2814,
											"end": 2823,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2794,
											"end": 2831,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 2794,
											"end": 2831,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2771,
											"end": 2831,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2771,
											"end": 2831,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2841,
											"end": 2878,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2904,
											"end": 2916,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 2881,
											"end": 2917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 2881,
											"end": 2917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "tag",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2841,
											"end": 2917,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2841,
											"end": 2917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2976,
											"end": 3009,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3035,
											"end": 3050,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3035,
											"end": 3057,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3035,
											"end": 3057,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3035,
											"end": 3057,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3035,
											"end": 3057,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 3012,
											"end": 3058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 3012,
											"end": 3058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3058,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2976,
											"end": 3058,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2976,
											"end": 3058,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3073,
											"end": 3082,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3085,
											"end": 3086,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3073,
											"end": 3086,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3073,
											"end": 3086,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3068,
											"end": 3230,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 3068,
											"end": 3230,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3107,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3092,
											"end": 3114,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3114,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3114,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3114,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3088,
											"end": 3089,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3088,
											"end": 3114,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3068,
											"end": 3230,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3068,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 3068,
											"end": 3230,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3148,
											"end": 3219,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3148,
											"end": 3219,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3148,
											"end": 3219,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3148,
											"end": 3219,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3148,
											"end": 3219,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3148,
											"end": 3219,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3148,
											"end": 3219,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3148,
											"end": 3219,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3165,
											"end": 3180,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3181,
											"end": 3182,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 3165,
											"end": 3183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3165,
											"end": 3183,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3148,
											"end": 3219,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3148,
											"end": 3219,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3148,
											"end": 3219,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3148,
											"end": 3219,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3148,
											"end": 3219,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3148,
											"end": 3219,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3185,
											"end": 3192,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3185,
											"end": 3212,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3193,
											"end": 3208,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3209,
											"end": 3210,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3193,
											"end": 3211,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3193,
											"end": 3211,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3193,
											"end": 3211,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3193,
											"end": 3211,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3193,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 3193,
											"end": 3211,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3193,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 3193,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 3193,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3193,
											"end": 3211,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 3193,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3193,
											"end": 3211,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 3193,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3193,
											"end": 3211,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3193,
											"end": 3211,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3193,
											"end": 3211,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3193,
											"end": 3211,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3193,
											"end": 3211,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3193,
											"end": 3211,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3193,
											"end": 3211,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3193,
											"end": 3211,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3193,
											"end": 3211,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3193,
											"end": 3211,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3193,
											"end": 3211,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3193,
											"end": 3211,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3193,
											"end": 3211,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3193,
											"end": 3211,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3193,
											"end": 3211,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3193,
											"end": 3211,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3193,
											"end": 3211,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3185,
											"end": 3212,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3185,
											"end": 3212,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3185,
											"end": 3212,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3185,
											"end": 3212,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3185,
											"end": 3212,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3185,
											"end": 3212,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3185,
											"end": 3212,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3185,
											"end": 3212,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3185,
											"end": 3212,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3185,
											"end": 3212,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3185,
											"end": 3212,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3185,
											"end": 3212,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3185,
											"end": 3212,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3185,
											"end": 3212,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3185,
											"end": 3212,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3185,
											"end": 3218,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3185,
											"end": 3218,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3185,
											"end": 3218,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3148,
											"end": 3219,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3148,
											"end": 3219,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3148,
											"end": 3219,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3135,
											"end": 3142,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3143,
											"end": 3144,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3135,
											"end": 3145,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3135,
											"end": 3145,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3135,
											"end": 3145,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3135,
											"end": 3145,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3135,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 3135,
											"end": 3145,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3135,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 3135,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 3135,
											"end": 3145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3135,
											"end": 3145,
											"name": "tag",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 3135,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3135,
											"end": 3145,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 3135,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3135,
											"end": 3145,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3135,
											"end": 3145,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3135,
											"end": 3145,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3135,
											"end": 3145,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3135,
											"end": 3145,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3135,
											"end": 3219,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3135,
											"end": 3219,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3135,
											"end": 3219,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3135,
											"end": 3219,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3116,
											"end": 3119,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3116,
											"end": 3119,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3116,
											"end": 3119,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3116,
											"end": 3119,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3116,
											"end": 3119,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3116,
											"end": 3119,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3116,
											"end": 3119,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3068,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 3068,
											"end": 3230,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3068,
											"end": 3230,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 3068,
											"end": 3230,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3068,
											"end": 3230,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3286,
											"end": 3295,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3298,
											"end": 3299,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3286,
											"end": 3299,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3286,
											"end": 3299,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3281,
											"end": 3725,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 3281,
											"end": 3725,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3305,
											"end": 3312,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3305,
											"end": 3319,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3301,
											"end": 3302,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3301,
											"end": 3319,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3301,
											"end": 3348,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3301,
											"end": 3348,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3301,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 3301,
											"end": 3348,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3301,
											"end": 3348,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3336,
											"end": 3348,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3327,
											"end": 3333,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3327,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 3327,
											"end": 3348,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3327,
											"end": 3348,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3327,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 3327,
											"end": 3348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3327,
											"end": 3348,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 3327,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3348,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3301,
											"end": 3348,
											"name": "tag",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 3301,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3281,
											"end": 3725,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3281,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 3281,
											"end": 3725,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3369,
											"end": 3385,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3388,
											"end": 3389,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3369,
											"end": 3389,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3369,
											"end": 3389,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3408,
											"end": 3417,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3424,
											"end": 3425,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3420,
											"end": 3421,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3420,
											"end": 3425,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 3420,
											"end": 3425,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3420,
											"end": 3425,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3420,
											"end": 3425,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 3420,
											"end": 3425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3420,
											"end": 3425,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 3420,
											"end": 3425,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3408,
											"end": 3425,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3408,
											"end": 3425,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3403,
											"end": 3585,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 3403,
											"end": 3585,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3431,
											"end": 3438,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3431,
											"end": 3445,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3427,
											"end": 3428,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3427,
											"end": 3445,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3403,
											"end": 3585,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3403,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 3403,
											"end": 3585,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3500,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3501,
											"end": 3509,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3510,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3510,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3510,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3510,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 3493,
											"end": 3510,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 3493,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 3493,
											"end": 3510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3510,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 3493,
											"end": 3510,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3510,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 3493,
											"end": 3510,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3510,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3493,
											"end": 3510,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3510,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3493,
											"end": 3510,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3510,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3510,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3516,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3493,
											"end": 3516,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3516,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3474,
											"end": 3481,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3482,
											"end": 3483,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3474,
											"end": 3484,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3474,
											"end": 3484,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3474,
											"end": 3484,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3474,
											"end": 3484,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3474,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 3474,
											"end": 3484,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3474,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 3474,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 3474,
											"end": 3484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3474,
											"end": 3484,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 3474,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3474,
											"end": 3484,
											"name": "tag",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 3474,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3474,
											"end": 3484,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3474,
											"end": 3484,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3474,
											"end": 3484,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3474,
											"end": 3484,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3474,
											"end": 3484,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3474,
											"end": 3484,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3474,
											"end": 3490,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3474,
											"end": 3490,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3474,
											"end": 3490,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3474,
											"end": 3516,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3470,
											"end": 3571,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3470,
											"end": 3571,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 3470,
											"end": 3571,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3551,
											"end": 3552,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3552,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3552,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3470,
											"end": 3571,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 3470,
											"end": 3571,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3447,
											"end": 3450,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3447,
											"end": 3450,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3447,
											"end": 3450,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3447,
											"end": 3450,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3447,
											"end": 3450,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3447,
											"end": 3450,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3447,
											"end": 3450,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3403,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 3403,
											"end": 3585,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3403,
											"end": 3585,
											"name": "tag",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 3403,
											"end": 3585,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3403,
											"end": 3585,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3614,
											"end": 3615,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3602,
											"end": 3610,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3602,
											"end": 3615,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3598,
											"end": 3715,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 3598,
											"end": 3715,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3670,
											"end": 3677,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3678,
											"end": 3686,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3670,
											"end": 3687,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3670,
											"end": 3687,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3670,
											"end": 3687,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3670,
											"end": 3687,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3670,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 3670,
											"end": 3687,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3670,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 3670,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 3670,
											"end": 3687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3670,
											"end": 3687,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 3670,
											"end": 3687,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3670,
											"end": 3687,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 3670,
											"end": 3687,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3670,
											"end": 3687,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3670,
											"end": 3687,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3670,
											"end": 3687,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3670,
											"end": 3687,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3670,
											"end": 3687,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3670,
											"end": 3687,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3689,
											"end": 3696,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3697,
											"end": 3698,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3689,
											"end": 3699,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3689,
											"end": 3699,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3689,
											"end": 3699,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3689,
											"end": 3699,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3689,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 3689,
											"end": 3699,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3689,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 3689,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 3689,
											"end": 3699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3689,
											"end": 3699,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 3689,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3689,
											"end": 3699,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 3689,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3689,
											"end": 3699,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3689,
											"end": 3699,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3689,
											"end": 3699,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3689,
											"end": 3699,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3689,
											"end": 3699,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3689,
											"end": 3699,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3644,
											"end": 3645,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3636,
											"end": 3646,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3636,
											"end": 3646,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3636,
											"end": 3646,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3636,
											"end": 3646,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3636,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 3636,
											"end": 3646,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3636,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 3636,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 3636,
											"end": 3646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3636,
											"end": 3646,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 3636,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3636,
											"end": 3646,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 3636,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3636,
											"end": 3646,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3636,
											"end": 3646,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3636,
											"end": 3646,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3636,
											"end": 3646,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3636,
											"end": 3646,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3648,
											"end": 3655,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3656,
											"end": 3664,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3648,
											"end": 3665,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3648,
											"end": 3665,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3648,
											"end": 3665,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3648,
											"end": 3665,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3648,
											"end": 3665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 3648,
											"end": 3665,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3648,
											"end": 3665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 3648,
											"end": 3665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 3648,
											"end": 3665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3648,
											"end": 3665,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 3648,
											"end": 3665,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3648,
											"end": 3665,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 3648,
											"end": 3665,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3648,
											"end": 3665,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3648,
											"end": 3665,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3648,
											"end": 3665,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3648,
											"end": 3665,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3648,
											"end": 3665,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3635,
											"end": 3700,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3635,
											"end": 3700,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3635,
											"end": 3700,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3635,
											"end": 3700,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3635,
											"end": 3700,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3635,
											"end": 3700,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3635,
											"end": 3700,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3635,
											"end": 3700,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3598,
											"end": 3715,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 3598,
											"end": 3715,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3355,
											"end": 3725,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3350,
											"end": 3353,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3350,
											"end": 3353,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3350,
											"end": 3353,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 3350,
											"end": 3353,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3350,
											"end": 3353,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 3350,
											"end": 3353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3350,
											"end": 3353,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 3350,
											"end": 3353,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3350,
											"end": 3353,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3350,
											"end": 3353,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3350,
											"end": 3353,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3281,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 3281,
											"end": 3725,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3281,
											"end": 3725,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 3281,
											"end": 3725,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3281,
											"end": 3725,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3784,
											"end": 3793,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3796,
											"end": 3797,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3797,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3784,
											"end": 3797,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3779,
											"end": 3883,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 3779,
											"end": 3883,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3803,
											"end": 3815,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3799,
											"end": 3800,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3799,
											"end": 3815,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3779,
											"end": 3883,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3779,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 3779,
											"end": 3883,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3853,
											"end": 3860,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3870,
											"end": 3871,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3867,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 3861,
											"end": 3871,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3871,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 3861,
											"end": 3871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3871,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 3861,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3853,
											"end": 3872,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3853,
											"end": 3872,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3853,
											"end": 3872,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3853,
											"end": 3872,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3853,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 3853,
											"end": 3872,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3853,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 3853,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 3853,
											"end": 3872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3853,
											"end": 3872,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 3853,
											"end": 3872,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3853,
											"end": 3872,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 3853,
											"end": 3872,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3853,
											"end": 3872,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3853,
											"end": 3872,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3853,
											"end": 3872,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3853,
											"end": 3872,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3853,
											"end": 3872,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3853,
											"end": 3872,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3836,
											"end": 3847,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3848,
											"end": 3849,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3836,
											"end": 3850,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3836,
											"end": 3850,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3836,
											"end": 3850,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3836,
											"end": 3850,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3836,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 3836,
											"end": 3850,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3836,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 3836,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 3836,
											"end": 3850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3836,
											"end": 3850,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 3836,
											"end": 3850,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3836,
											"end": 3850,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 3836,
											"end": 3850,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3836,
											"end": 3850,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3836,
											"end": 3850,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3836,
											"end": 3850,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3836,
											"end": 3850,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3836,
											"end": 3850,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3836,
											"end": 3872,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3836,
											"end": 3872,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3836,
											"end": 3872,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3836,
											"end": 3872,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3817,
											"end": 3820,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3817,
											"end": 3820,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3817,
											"end": 3820,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3817,
											"end": 3820,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3817,
											"end": 3820,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3817,
											"end": 3820,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3817,
											"end": 3820,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3779,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 3779,
											"end": 3883,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3779,
											"end": 3883,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 3779,
											"end": 3883,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3779,
											"end": 3883,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3900,
											"end": 3911,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3893,
											"end": 3911,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3893,
											"end": 3911,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3893,
											"end": 3911,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3893,
											"end": 3911,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3893,
											"end": 3911,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3893,
											"end": 3911,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2521,
											"end": 3918,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2521,
											"end": 3918,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2521,
											"end": 3918,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2521,
											"end": 3918,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2521,
											"end": 3918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 572,
											"end": 632,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 572,
											"end": 632,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 609,
											"end": 632,
											"name": "PUSH",
											"source": 10,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 572,
											"end": 632,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 572,
											"end": 632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2911,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2941,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2958,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2923,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2923,
											"end": 2959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4875,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 4747,
											"end": 4875,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4807,
											"end": 4825,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4807,
											"end": 4825,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4837,
											"end": 4868,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 609,
											"end": 632,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 4860,
											"end": 4867,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4837,
											"end": 4847,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 4837,
											"end": 4868,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4837,
											"end": 4868,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 4837,
											"end": 4868,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4747,
											"end": 4875,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4747,
											"end": 4875,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4747,
											"end": 4875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 386,
											"end": 420,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 386,
											"end": 420,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 386,
											"end": 420,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 420,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 386,
											"end": 420,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 386,
											"end": 420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 316,
											"end": 339,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 316,
											"end": 339,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 316,
											"end": 339,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 316,
											"end": 339,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 316,
											"end": 339,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 316,
											"end": 339,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 316,
											"end": 339,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 316,
											"end": 339,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 316,
											"end": 339,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 316,
											"end": 339,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 316,
											"end": 339,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 316,
											"end": 339,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 316,
											"end": 339,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 316,
											"end": 339,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 316,
											"end": 339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4615,
											"end": 4741,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 4615,
											"end": 4741,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4674,
											"end": 4692,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4674,
											"end": 4692,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 609,
											"end": 632,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 4726,
											"end": 4733,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4704,
											"end": 4713,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 4704,
											"end": 4734,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4704,
											"end": 4734,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 4704,
											"end": 4734,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4615,
											"end": 4741,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4615,
											"end": 4741,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4615,
											"end": 4741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 466,
											"end": 518,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 466,
											"end": 518,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 504,
											"end": 518,
											"name": "PUSH",
											"source": 10,
											"value": "56BC75E2D63100000"
										},
										{
											"begin": 466,
											"end": 518,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 466,
											"end": 518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2371,
											"end": 2482,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 2371,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2428,
											"end": 2435,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2454,
											"end": 2461,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2454,
											"end": 2469,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2462,
											"end": 2468,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2454,
											"end": 2469,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2454,
											"end": 2469,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2454,
											"end": 2469,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2454,
											"end": 2469,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2454,
											"end": 2469,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2454,
											"end": 2469,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2454,
											"end": 2469,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2454,
											"end": 2469,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2454,
											"end": 2469,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2454,
											"end": 2469,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2454,
											"end": 2469,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2454,
											"end": 2469,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2454,
											"end": 2469,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2454,
											"end": 2469,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2454,
											"end": 2469,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2454,
											"end": 2475,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2454,
											"end": 2475,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2454,
											"end": 2475,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2447,
											"end": 2475,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2447,
											"end": 2475,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2371,
											"end": 2482,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2371,
											"end": 2482,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2371,
											"end": 2482,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2371,
											"end": 2482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 4706,
											"end": 4710,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4693,
											"end": 4705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4693,
											"end": 4711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 4735,
											"end": 4739,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4741,
											"end": 4748,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 4723,
											"end": 4749,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 814,
											"end": 855,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 814,
											"end": 855,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 814,
											"end": 855,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 814,
											"end": 855,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 814,
											"end": 855,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 814,
											"end": 855,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 814,
											"end": 855,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 814,
											"end": 855,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 814,
											"end": 855,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 814,
											"end": 855,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 814,
											"end": 855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4257,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 3956,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 504,
											"end": 518,
											"name": "PUSH",
											"source": 10,
											"value": "56BC75E2D63100000"
										},
										{
											"begin": 4033,
											"end": 4042,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4033,
											"end": 4042,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4033,
											"end": 4042,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4042,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4042,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4042,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4033,
											"end": 4042,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4042,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4042,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4042,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4033,
											"end": 4042,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4052,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4033,
											"end": 4052,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4052,
											"name": "PUSH",
											"source": 10,
											"value": "DD62ED3E"
										},
										{
											"begin": 4053,
											"end": 4063,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4073,
											"end": 4077,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 4033,
											"end": 4079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 4033,
											"end": 4079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 4033,
											"end": 4079,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4094,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4094,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4025,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 4025,
											"end": 4121,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4025,
											"end": 4121,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4025,
											"end": 4121,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4025,
											"end": 4121,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4025,
											"end": 4121,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4025,
											"end": 4121,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4025,
											"end": 4121,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4025,
											"end": 4121,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4025,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 4025,
											"end": 4121,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4025,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 4025,
											"end": 4121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4025,
											"end": 4121,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 4025,
											"end": 4121,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4025,
											"end": 4121,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4025,
											"end": 4121,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4025,
											"end": 4121,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4025,
											"end": 4121,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4025,
											"end": 4121,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4025,
											"end": 4121,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4025,
											"end": 4121,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4025,
											"end": 4121,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 4025,
											"end": 4121,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4131,
											"end": 4197,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 4158,
											"end": 4168,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4178,
											"end": 4182,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 504,
											"end": 518,
											"name": "PUSH",
											"source": 10,
											"value": "56BC75E2D63100000"
										},
										{
											"begin": 4131,
											"end": 4140,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4131,
											"end": 4140,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4131,
											"end": 4140,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4131,
											"end": 4140,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4131,
											"end": 4140,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4131,
											"end": 4140,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4131,
											"end": 4140,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4131,
											"end": 4140,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4131,
											"end": 4140,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 4131,
											"end": 4140,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4131,
											"end": 4140,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4131,
											"end": 4157,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4131,
											"end": 4157,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4131,
											"end": 4157,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 4131,
											"end": 4157,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4131,
											"end": 4197,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4131,
											"end": 4197,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4131,
											"end": 4197,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4131,
											"end": 4197,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4131,
											"end": 4197,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4131,
											"end": 4197,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4131,
											"end": 4197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4131,
											"end": 4197,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 4131,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4228,
											"end": 4238,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4212,
											"end": 4250,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4212,
											"end": 4250,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4212,
											"end": 4250,
											"name": "PUSH",
											"source": 10,
											"value": "769873612369DE25D7A32B1071976767E3071B8182B9353E1CD5D6CF25B33DCA"
										},
										{
											"begin": 4240,
											"end": 4249,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4249,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4212,
											"end": 4250,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4212,
											"end": 4250,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4212,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 4212,
											"end": 4250,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4212,
											"end": 4250,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4212,
											"end": 4250,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4212,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 4212,
											"end": 4250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4212,
											"end": 4250,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 4212,
											"end": 4250,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4212,
											"end": 4250,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4212,
											"end": 4250,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4212,
											"end": 4250,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4212,
											"end": 4250,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4212,
											"end": 4250,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4212,
											"end": 4250,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4212,
											"end": 4250,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4257,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4257,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 730,
											"end": 876,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 730,
											"end": 876,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 806,
											"end": 810,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 844,
											"end": 869,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 829,
											"end": 869,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 829,
											"end": 840,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 829,
											"end": 869,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 829,
											"end": 869,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 829,
											"end": 869,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 822,
											"end": 869,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 822,
											"end": 869,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 730,
											"end": 876,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 730,
											"end": 876,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 730,
											"end": 876,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 730,
											"end": 876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 3252,
											"end": 3256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 3258,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 3258,
											"end": 3270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 3241,
											"end": 3271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6232,
											"end": 6236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 6261,
											"end": 6265,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6267,
											"end": 6274,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6253,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6253,
											"end": 6275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6323,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6291,
											"end": 6297,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6311,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6312,
											"end": 6319,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 6373,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 6373,
											"end": 6385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6364,
											"end": 6371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6358,
											"end": 6362,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6407,
											"end": 6411,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6449,
											"end": 6454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6786,
											"end": 6790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 6814,
											"end": 6818,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6820,
											"end": 6827,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6806,
											"end": 6828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6876,
											"end": 6881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6851,
											"end": 6855,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6865,
											"end": 6872,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 6927,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 6927,
											"end": 6939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6918,
											"end": 6925,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6912,
											"end": 6916,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6961,
											"end": 6965,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7003,
											"end": 7008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6996,
											"end": 7008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6996,
											"end": 7008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 3504,
											"end": 3508,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3517,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3496,
											"end": 3518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3583,
											"end": 3587,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 3541,
											"end": 3588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8532,
											"end": 8928,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8956,
											"end": 8957,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8952,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8990,
											"end": 8991,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 8973,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9066,
											"end": 9071,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 9033,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "169"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "353"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 11,
											"value": "353"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "tag",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 1692,
											"end": 1697,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 1674,
											"end": 1698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "tag",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1667,
											"end": 1672,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1664,
											"end": 1699,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1711,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1703,
											"end": 1715,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "tag",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1601,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1775,
											"end": 1780,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1800,
											"end": 1820,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 1829,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "tag",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1933,
											"end": 1939,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 1984,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1961,
											"end": 1968,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1957,
											"end": 1980,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1953,
											"end": 1985,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 1988,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "tag",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "tag",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 2178,
											"end": 2185,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2169,
											"end": 2175,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2167,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 2133,
											"end": 2186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "tag",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2079,
											"end": 2196,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1874,
											"end": 2203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2209,
											"end": 2335,
											"name": "tag",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 2209,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2246,
											"end": 2253,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2286,
											"end": 2328,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2279,
											"end": 2284,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2275,
											"end": 2329,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2329,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2264,
											"end": 2329,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2209,
											"end": 2335,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2209,
											"end": 2335,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2209,
											"end": 2335,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2209,
											"end": 2335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2341,
											"end": 2437,
											"name": "tag",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 2341,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2378,
											"end": 2385,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 2425,
											"end": 2430,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 2407,
											"end": 2431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2407,
											"end": 2431,
											"name": "tag",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 2407,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2396,
											"end": 2431,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2396,
											"end": 2431,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2341,
											"end": 2437,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2341,
											"end": 2437,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2341,
											"end": 2437,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2341,
											"end": 2437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2561,
											"name": "tag",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 2443,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2530,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 2548,
											"end": 2553,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2530,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 2530,
											"end": 2554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2530,
											"end": 2554,
											"name": "tag",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 2530,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2525,
											"end": 2528,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2518,
											"end": 2555,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2561,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2561,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2660,
											"end": 2664,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2698,
											"end": 2700,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2687,
											"end": 2696,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2683,
											"end": 2701,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2675,
											"end": 2701,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2675,
											"end": 2701,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2711,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2764,
											"end": 2781,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2755,
											"end": 2761,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2711,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 2711,
											"end": 2782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2711,
											"end": 2782,
											"name": "tag",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 2711,
											"end": 2782,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2567,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 2886,
											"end": 2891,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 2868,
											"end": 2892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "tag",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2861,
											"end": 2866,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2858,
											"end": 2893,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2907,
											"end": 2908,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2904,
											"end": 2905,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2897,
											"end": 2909,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "tag",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2795,
											"end": 2917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "tag",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2969,
											"end": 2974,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3007,
											"end": 3013,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2994,
											"end": 3014,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2985,
											"end": 3014,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2985,
											"end": 3014,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 3050,
											"end": 3055,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 3023,
											"end": 3056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "tag",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 3062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3136,
											"end": 3142,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3150,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3193,
											"end": 3195,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3181,
											"end": 3190,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3172,
											"end": 3179,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3168,
											"end": 3191,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3164,
											"end": 3196,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 3199,
											"end": 3278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "tag",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "tag",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3319,
											"end": 3320,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 3389,
											"end": 3396,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3386,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3378,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3365,
											"end": 3387,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 3344,
											"end": 3397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "tag",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3334,
											"end": 3397,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3334,
											"end": 3397,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3290,
											"end": 3407,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3446,
											"end": 3448,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 3517,
											"end": 3524,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3508,
											"end": 3514,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3497,
											"end": 3506,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3493,
											"end": 3515,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 3472,
											"end": 3525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "tag",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3417,
											"end": 3535,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3068,
											"end": 3542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3548,
											"end": 3625,
											"name": "tag",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 3548,
											"end": 3625,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3585,
											"end": 3592,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3614,
											"end": 3619,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3603,
											"end": 3619,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3603,
											"end": 3619,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3548,
											"end": 3625,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3548,
											"end": 3625,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3548,
											"end": 3625,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3548,
											"end": 3625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3631,
											"end": 3753,
											"name": "tag",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 3631,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 3722,
											"end": 3727,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 3704,
											"end": 3728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3728,
											"name": "tag",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 3704,
											"end": 3728,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3697,
											"end": 3702,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3694,
											"end": 3729,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3684,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 3684,
											"end": 3747,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3743,
											"end": 3744,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3740,
											"end": 3741,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3733,
											"end": 3745,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3684,
											"end": 3747,
											"name": "tag",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 3684,
											"end": 3747,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3631,
											"end": 3753,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3631,
											"end": 3753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3759,
											"end": 3898,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 3759,
											"end": 3898,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3805,
											"end": 3810,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3843,
											"end": 3849,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3830,
											"end": 3850,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3821,
											"end": 3850,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3821,
											"end": 3850,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3859,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 3886,
											"end": 3891,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3859,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 3859,
											"end": 3892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3859,
											"end": 3892,
											"name": "tag",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 3859,
											"end": 3892,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3759,
											"end": 3898,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3759,
											"end": 3898,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3759,
											"end": 3898,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3759,
											"end": 3898,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3759,
											"end": 3898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3904,
											"end": 4233,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 3904,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3963,
											"end": 3969,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4012,
											"end": 4014,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4000,
											"end": 4009,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3991,
											"end": 3998,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3987,
											"end": 4010,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3983,
											"end": 4015,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3980,
											"end": 4099,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3980,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 3980,
											"end": 4099,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4018,
											"end": 4097,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "394"
										},
										{
											"begin": 4018,
											"end": 4097,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 4018,
											"end": 4097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4018,
											"end": 4097,
											"name": "tag",
											"source": 11,
											"value": "394"
										},
										{
											"begin": 4018,
											"end": 4097,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3980,
											"end": 4099,
											"name": "tag",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 3980,
											"end": 4099,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4138,
											"end": 4139,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4163,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 4208,
											"end": 4215,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4199,
											"end": 4205,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4188,
											"end": 4197,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4184,
											"end": 4206,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4163,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 4163,
											"end": 4216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4163,
											"end": 4216,
											"name": "tag",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 4163,
											"end": 4216,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4153,
											"end": 4216,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4153,
											"end": 4216,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4109,
											"end": 4226,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3904,
											"end": 4233,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3904,
											"end": 4233,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3904,
											"end": 4233,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3904,
											"end": 4233,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3904,
											"end": 4233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4239,
											"end": 4357,
											"name": "tag",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 4239,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4326,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 4344,
											"end": 4349,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4326,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 4326,
											"end": 4350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4326,
											"end": 4350,
											"name": "tag",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 4326,
											"end": 4350,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4321,
											"end": 4324,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4314,
											"end": 4351,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4239,
											"end": 4357,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4239,
											"end": 4357,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4239,
											"end": 4357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4363,
											"end": 4585,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 4363,
											"end": 4585,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4456,
											"end": 4460,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4494,
											"end": 4496,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4483,
											"end": 4492,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4479,
											"end": 4497,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4471,
											"end": 4497,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4471,
											"end": 4497,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4507,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 4575,
											"end": 4576,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4564,
											"end": 4573,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4560,
											"end": 4577,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4551,
											"end": 4557,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4507,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 4507,
											"end": 4578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4507,
											"end": 4578,
											"name": "tag",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 4507,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4363,
											"end": 4585,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4363,
											"end": 4585,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4363,
											"end": 4585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4363,
											"end": 4585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4363,
											"end": 4585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4591,
											"end": 5065,
											"name": "tag",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 4591,
											"end": 5065,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4659,
											"end": 4665,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4667,
											"end": 4673,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4716,
											"end": 4718,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4704,
											"end": 4713,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4695,
											"end": 4702,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4691,
											"end": 4714,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4687,
											"end": 4719,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4684,
											"end": 4803,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4684,
											"end": 4803,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 4684,
											"end": 4803,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4722,
											"end": 4801,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 4722,
											"end": 4801,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 4722,
											"end": 4801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4722,
											"end": 4801,
											"name": "tag",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 4722,
											"end": 4801,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4684,
											"end": 4803,
											"name": "tag",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 4684,
											"end": 4803,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4842,
											"end": 4843,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4867,
											"end": 4920,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 4912,
											"end": 4919,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4903,
											"end": 4909,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4892,
											"end": 4901,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4888,
											"end": 4910,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4867,
											"end": 4920,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 4867,
											"end": 4920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4867,
											"end": 4920,
											"name": "tag",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 4867,
											"end": 4920,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4857,
											"end": 4920,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4857,
											"end": 4920,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 4930,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4969,
											"end": 4971,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4995,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 5040,
											"end": 5047,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5031,
											"end": 5037,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5020,
											"end": 5029,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5016,
											"end": 5038,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4995,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 4995,
											"end": 5048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4995,
											"end": 5048,
											"name": "tag",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 4995,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4985,
											"end": 5048,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4985,
											"end": 5048,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4940,
											"end": 5058,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4591,
											"end": 5065,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4591,
											"end": 5065,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4591,
											"end": 5065,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4591,
											"end": 5065,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4591,
											"end": 5065,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4591,
											"end": 5065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5071,
											"end": 5545,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5071,
											"end": 5545,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5139,
											"end": 5145,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5147,
											"end": 5153,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5196,
											"end": 5198,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5184,
											"end": 5193,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5175,
											"end": 5182,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5171,
											"end": 5194,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5167,
											"end": 5199,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5164,
											"end": 5283,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5164,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 5164,
											"end": 5283,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5202,
											"end": 5281,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 5202,
											"end": 5281,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 5202,
											"end": 5281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5202,
											"end": 5281,
											"name": "tag",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 5202,
											"end": 5281,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5164,
											"end": 5283,
											"name": "tag",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 5164,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5322,
											"end": 5323,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5347,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 5392,
											"end": 5399,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5389,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5372,
											"end": 5381,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5368,
											"end": 5390,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5347,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 5347,
											"end": 5400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5347,
											"end": 5400,
											"name": "tag",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 5347,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5337,
											"end": 5400,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5337,
											"end": 5400,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5293,
											"end": 5410,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5451,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5475,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 5520,
											"end": 5527,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5511,
											"end": 5517,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5500,
											"end": 5509,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5496,
											"end": 5518,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5475,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 5475,
											"end": 5528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5475,
											"end": 5528,
											"name": "tag",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 5475,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5465,
											"end": 5528,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5465,
											"end": 5528,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5420,
											"end": 5538,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5071,
											"end": 5545,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5071,
											"end": 5545,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5071,
											"end": 5545,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5071,
											"end": 5545,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5071,
											"end": 5545,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5071,
											"end": 5545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5551,
											"end": 5699,
											"name": "tag",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 5551,
											"end": 5699,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5652,
											"end": 5658,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5686,
											"end": 5691,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5680,
											"end": 5692,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5670,
											"end": 5692,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5670,
											"end": 5692,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5551,
											"end": 5699,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5551,
											"end": 5699,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5551,
											"end": 5699,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5551,
											"end": 5699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5705,
											"end": 5923,
											"name": "tag",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 5705,
											"end": 5923,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5838,
											"end": 5849,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5872,
											"end": 5878,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5867,
											"end": 5870,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5860,
											"end": 5879,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5912,
											"end": 5916,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5907,
											"end": 5910,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5903,
											"end": 5917,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5888,
											"end": 5917,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5888,
											"end": 5917,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5705,
											"end": 5923,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5705,
											"end": 5923,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5705,
											"end": 5923,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5705,
											"end": 5923,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5705,
											"end": 5923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5929,
											"end": 6095,
											"name": "tag",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 5929,
											"end": 6095,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6030,
											"end": 6034,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6053,
											"end": 6056,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6045,
											"end": 6056,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6045,
											"end": 6056,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6087,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6078,
											"end": 6081,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6074,
											"end": 6088,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6066,
											"end": 6088,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6066,
											"end": 6088,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5929,
											"end": 6095,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5929,
											"end": 6095,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5929,
											"end": 6095,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5929,
											"end": 6095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6101,
											"end": 6209,
											"name": "tag",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 6101,
											"end": 6209,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6178,
											"end": 6202,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 6196,
											"end": 6201,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6178,
											"end": 6202,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 6178,
											"end": 6202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6178,
											"end": 6202,
											"name": "tag",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 6178,
											"end": 6202,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6173,
											"end": 6176,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6166,
											"end": 6203,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6101,
											"end": 6209,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6101,
											"end": 6209,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6101,
											"end": 6209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6215,
											"end": 6323,
											"name": "tag",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 6215,
											"end": 6323,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6292,
											"end": 6316,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 6310,
											"end": 6315,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6292,
											"end": 6316,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 6292,
											"end": 6316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6292,
											"end": 6316,
											"name": "tag",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 6292,
											"end": 6316,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6287,
											"end": 6290,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6280,
											"end": 6317,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6215,
											"end": 6323,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6215,
											"end": 6323,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6215,
											"end": 6323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6407,
											"end": 6925,
											"name": "tag",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 6407,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6562,
											"end": 6566,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6557,
											"end": 6560,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6553,
											"end": 6567,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6651,
											"end": 6655,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6644,
											"end": 6649,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6640,
											"end": 6656,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6634,
											"end": 6657,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6670,
											"end": 6733,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "418"
										},
										{
											"begin": 6727,
											"end": 6731,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6722,
											"end": 6725,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6718,
											"end": 6732,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6704,
											"end": 6716,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6670,
											"end": 6733,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 6670,
											"end": 6733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6670,
											"end": 6733,
											"name": "tag",
											"source": 11,
											"value": "418"
										},
										{
											"begin": 6670,
											"end": 6733,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6577,
											"end": 6743,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6826,
											"end": 6830,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6819,
											"end": 6824,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6815,
											"end": 6831,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6809,
											"end": 6832,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6845,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 6902,
											"end": 6906,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6897,
											"end": 6900,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6893,
											"end": 6907,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6879,
											"end": 6891,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6845,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 6845,
											"end": 6908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6845,
											"end": 6908,
											"name": "tag",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 6845,
											"end": 6908,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6753,
											"end": 6918,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6531,
											"end": 6925,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6407,
											"end": 6925,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6407,
											"end": 6925,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6407,
											"end": 6925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6931,
											"end": 7246,
											"name": "tag",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 6931,
											"end": 7246,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7068,
											"end": 7078,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7089,
											"end": 7203,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 7199,
											"end": 7202,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7191,
											"end": 7197,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7089,
											"end": 7203,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 7089,
											"end": 7203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7089,
											"end": 7203,
											"name": "tag",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 7089,
											"end": 7203,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7235,
											"end": 7239,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7230,
											"end": 7233,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7226,
											"end": 7240,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7212,
											"end": 7240,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7212,
											"end": 7240,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6931,
											"end": 7246,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6931,
											"end": 7246,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6931,
											"end": 7246,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6931,
											"end": 7246,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6931,
											"end": 7246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7252,
											"end": 7399,
											"name": "tag",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 7252,
											"end": 7399,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7356,
											"end": 7360,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7388,
											"end": 7392,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7383,
											"end": 7386,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7379,
											"end": 7393,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7371,
											"end": 7393,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7371,
											"end": 7393,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7252,
											"end": 7399,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7252,
											"end": 7399,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7252,
											"end": 7399,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7252,
											"end": 7399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7487,
											"end": 8491,
											"name": "tag",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 7487,
											"end": 8491,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7674,
											"end": 7677,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7703,
											"end": 7791,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 7785,
											"end": 7790,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7703,
											"end": 7791,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 7703,
											"end": 7791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7703,
											"end": 7791,
											"name": "tag",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 7703,
											"end": 7791,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7807,
											"end": 7927,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "425"
										},
										{
											"begin": 7920,
											"end": 7926,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7915,
											"end": 7918,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7807,
											"end": 7927,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 7807,
											"end": 7927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7807,
											"end": 7927,
											"name": "tag",
											"source": 11,
											"value": "425"
										},
										{
											"begin": 7807,
											"end": 7927,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7800,
											"end": 7927,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 7800,
											"end": 7927,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7951,
											"end": 8041,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 8035,
											"end": 8040,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7951,
											"end": 8041,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 7951,
											"end": 8041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7951,
											"end": 8041,
											"name": "tag",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 7951,
											"end": 8041,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8064,
											"end": 8071,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8095,
											"end": 8096,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8080,
											"end": 8466,
											"name": "tag",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 8080,
											"end": 8466,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8105,
											"end": 8111,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8102,
											"end": 8103,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8099,
											"end": 8112,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 8080,
											"end": 8466,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8080,
											"end": 8466,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 8080,
											"end": 8466,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8181,
											"end": 8187,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8175,
											"end": 8188,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8208,
											"end": 8339,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "430"
										},
										{
											"begin": 8335,
											"end": 8338,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 8320,
											"end": 8333,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8208,
											"end": 8339,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 8208,
											"end": 8339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8208,
											"end": 8339,
											"name": "tag",
											"source": 11,
											"value": "430"
										},
										{
											"begin": 8208,
											"end": 8339,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8201,
											"end": 8339,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 8201,
											"end": 8339,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8362,
											"end": 8456,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 8449,
											"end": 8455,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8362,
											"end": 8456,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 8362,
											"end": 8456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8362,
											"end": 8456,
											"name": "tag",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 8362,
											"end": 8456,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8352,
											"end": 8456,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8352,
											"end": 8456,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8140,
											"end": 8466,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8127,
											"end": 8128,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 8124,
											"end": 8125,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8120,
											"end": 8129,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8115,
											"end": 8129,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8115,
											"end": 8129,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8080,
											"end": 8466,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 8080,
											"end": 8466,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8080,
											"end": 8466,
											"name": "tag",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 8080,
											"end": 8466,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8084,
											"end": 8098,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8482,
											"end": 8485,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8475,
											"end": 8485,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 8475,
											"end": 8485,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7679,
											"end": 8491,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7679,
											"end": 8491,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7679,
											"end": 8491,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7487,
											"end": 8491,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7487,
											"end": 8491,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7487,
											"end": 8491,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7487,
											"end": 8491,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7487,
											"end": 8491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8497,
											"end": 9006,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 8497,
											"end": 9006,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8708,
											"end": 8712,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8746,
											"end": 8748,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8735,
											"end": 8744,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8731,
											"end": 8749,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8723,
											"end": 8749,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8723,
											"end": 8749,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8795,
											"end": 8804,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8789,
											"end": 8793,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8785,
											"end": 8805,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8781,
											"end": 8782,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8770,
											"end": 8779,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8766,
											"end": 8783,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8759,
											"end": 8806,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8823,
											"end": 8999,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 8994,
											"end": 8998,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8985,
											"end": 8991,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8823,
											"end": 8999,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 8823,
											"end": 8999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8823,
											"end": 8999,
											"name": "tag",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 8823,
											"end": 8999,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8815,
											"end": 8999,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8815,
											"end": 8999,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8497,
											"end": 9006,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8497,
											"end": 9006,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8497,
											"end": 9006,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8497,
											"end": 9006,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8497,
											"end": 9006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9012,
											"end": 9341,
											"name": "tag",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 9012,
											"end": 9341,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9071,
											"end": 9077,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9120,
											"end": 9122,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9108,
											"end": 9117,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9099,
											"end": 9106,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9095,
											"end": 9118,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9091,
											"end": 9123,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 9088,
											"end": 9207,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9088,
											"end": 9207,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "435"
										},
										{
											"begin": 9088,
											"end": 9207,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9126,
											"end": 9205,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 9126,
											"end": 9205,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 9126,
											"end": 9205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9126,
											"end": 9205,
											"name": "tag",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 9126,
											"end": 9205,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9088,
											"end": 9207,
											"name": "tag",
											"source": 11,
											"value": "435"
										},
										{
											"begin": 9088,
											"end": 9207,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9246,
											"end": 9247,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9271,
											"end": 9324,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 9316,
											"end": 9323,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9307,
											"end": 9313,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9296,
											"end": 9305,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9292,
											"end": 9314,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9271,
											"end": 9324,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 9271,
											"end": 9324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9271,
											"end": 9324,
											"name": "tag",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 9271,
											"end": 9324,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9261,
											"end": 9324,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9261,
											"end": 9324,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9217,
											"end": 9334,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9012,
											"end": 9341,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9012,
											"end": 9341,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9012,
											"end": 9341,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9012,
											"end": 9341,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9012,
											"end": 9341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9347,
											"end": 9465,
											"name": "tag",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 9347,
											"end": 9465,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9434,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "439"
										},
										{
											"begin": 9452,
											"end": 9457,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9434,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 9434,
											"end": 9458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9434,
											"end": 9458,
											"name": "tag",
											"source": 11,
											"value": "439"
										},
										{
											"begin": 9434,
											"end": 9458,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9429,
											"end": 9432,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9422,
											"end": 9459,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9347,
											"end": 9465,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9347,
											"end": 9465,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9347,
											"end": 9465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9471,
											"end": 9693,
											"name": "tag",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 9471,
											"end": 9693,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9564,
											"end": 9568,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9602,
											"end": 9604,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9591,
											"end": 9600,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9587,
											"end": 9605,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9579,
											"end": 9605,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9579,
											"end": 9605,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9615,
											"end": 9686,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 9683,
											"end": 9684,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9672,
											"end": 9681,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9668,
											"end": 9685,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9659,
											"end": 9665,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9615,
											"end": 9686,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 9615,
											"end": 9686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9615,
											"end": 9686,
											"name": "tag",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 9615,
											"end": 9686,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9471,
											"end": 9693,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9471,
											"end": 9693,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9471,
											"end": 9693,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9471,
											"end": 9693,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9471,
											"end": 9693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9699,
											"end": 9759,
											"name": "tag",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 9699,
											"end": 9759,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9727,
											"end": 9730,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9748,
											"end": 9753,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9741,
											"end": 9753,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9741,
											"end": 9753,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9699,
											"end": 9759,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9699,
											"end": 9759,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9699,
											"end": 9759,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9699,
											"end": 9759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9765,
											"end": 9907,
											"name": "tag",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 9765,
											"end": 9907,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9815,
											"end": 9824,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9848,
											"end": 9901,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 9866,
											"end": 9900,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "445"
										},
										{
											"begin": 9875,
											"end": 9899,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "446"
										},
										{
											"begin": 9893,
											"end": 9898,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9875,
											"end": 9899,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 9875,
											"end": 9899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9875,
											"end": 9899,
											"name": "tag",
											"source": 11,
											"value": "446"
										},
										{
											"begin": 9875,
											"end": 9899,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9866,
											"end": 9900,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 9866,
											"end": 9900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9866,
											"end": 9900,
											"name": "tag",
											"source": 11,
											"value": "445"
										},
										{
											"begin": 9866,
											"end": 9900,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9848,
											"end": 9901,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 9848,
											"end": 9901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9848,
											"end": 9901,
											"name": "tag",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 9848,
											"end": 9901,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9835,
											"end": 9901,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9835,
											"end": 9901,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9765,
											"end": 9907,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9765,
											"end": 9907,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9765,
											"end": 9907,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9765,
											"end": 9907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9913,
											"end": 10039,
											"name": "tag",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 9913,
											"end": 10039,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9963,
											"end": 9972,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9996,
											"end": 10033,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 10027,
											"end": 10032,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9996,
											"end": 10033,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 9996,
											"end": 10033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9996,
											"end": 10033,
											"name": "tag",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 9996,
											"end": 10033,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9983,
											"end": 10033,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9983,
											"end": 10033,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9913,
											"end": 10039,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9913,
											"end": 10039,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9913,
											"end": 10039,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9913,
											"end": 10039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10045,
											"end": 10185,
											"name": "tag",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 10045,
											"end": 10185,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10109,
											"end": 10118,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10142,
											"end": 10179,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "450"
										},
										{
											"begin": 10173,
											"end": 10178,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10142,
											"end": 10179,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 10142,
											"end": 10179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10142,
											"end": 10179,
											"name": "tag",
											"source": 11,
											"value": "450"
										},
										{
											"begin": 10142,
											"end": 10179,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10129,
											"end": 10179,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10129,
											"end": 10179,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10045,
											"end": 10185,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10045,
											"end": 10185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10045,
											"end": 10185,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10045,
											"end": 10185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10191,
											"end": 10350,
											"name": "tag",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 10191,
											"end": 10350,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10292,
											"end": 10343,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "452"
										},
										{
											"begin": 10337,
											"end": 10342,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10292,
											"end": 10343,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 10292,
											"end": 10343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10292,
											"end": 10343,
											"name": "tag",
											"source": 11,
											"value": "452"
										},
										{
											"begin": 10292,
											"end": 10343,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10287,
											"end": 10290,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10280,
											"end": 10344,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10191,
											"end": 10350,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10191,
											"end": 10350,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10191,
											"end": 10350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10356,
											"end": 10606,
											"name": "tag",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 10356,
											"end": 10606,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10463,
											"end": 10467,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10501,
											"end": 10503,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10490,
											"end": 10499,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10486,
											"end": 10504,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10478,
											"end": 10504,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10478,
											"end": 10504,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10514,
											"end": 10599,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "454"
										},
										{
											"begin": 10596,
											"end": 10597,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10585,
											"end": 10594,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10581,
											"end": 10598,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10572,
											"end": 10578,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10514,
											"end": 10599,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 10514,
											"end": 10599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10514,
											"end": 10599,
											"name": "tag",
											"source": 11,
											"value": "454"
										},
										{
											"begin": 10514,
											"end": 10599,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10356,
											"end": 10606,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10356,
											"end": 10606,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10356,
											"end": 10606,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10356,
											"end": 10606,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10356,
											"end": 10606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10612,
											"end": 10944,
											"name": "tag",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 10612,
											"end": 10944,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10733,
											"end": 10737,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10771,
											"end": 10773,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10760,
											"end": 10769,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10756,
											"end": 10774,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10748,
											"end": 10774,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10748,
											"end": 10774,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10784,
											"end": 10855,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 10852,
											"end": 10853,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10841,
											"end": 10850,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10837,
											"end": 10854,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10828,
											"end": 10834,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10784,
											"end": 10855,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 10784,
											"end": 10855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10784,
											"end": 10855,
											"name": "tag",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 10784,
											"end": 10855,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10865,
											"end": 10937,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "457"
										},
										{
											"begin": 10933,
											"end": 10935,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10922,
											"end": 10931,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10918,
											"end": 10936,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10909,
											"end": 10915,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10865,
											"end": 10937,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 10865,
											"end": 10937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10865,
											"end": 10937,
											"name": "tag",
											"source": 11,
											"value": "457"
										},
										{
											"begin": 10865,
											"end": 10937,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10612,
											"end": 10944,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 10612,
											"end": 10944,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10612,
											"end": 10944,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10612,
											"end": 10944,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10612,
											"end": 10944,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10612,
											"end": 10944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10950,
											"end": 11067,
											"name": "tag",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 10950,
											"end": 11067,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11059,
											"end": 11060,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11056,
											"end": 11057,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11049,
											"end": 11061,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 11073,
											"end": 11190,
											"name": "tag",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 11073,
											"end": 11190,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11182,
											"end": 11183,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11179,
											"end": 11180,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11172,
											"end": 11184,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 11196,
											"end": 11313,
											"name": "tag",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 11196,
											"end": 11313,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11305,
											"end": 11306,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11302,
											"end": 11303,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11295,
											"end": 11307,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 11333,
											"end": 11886,
											"name": "tag",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 11333,
											"end": 11886,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11391,
											"end": 11399,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11401,
											"end": 11407,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11451,
											"end": 11454,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11444,
											"end": 11448,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 11436,
											"end": 11442,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11432,
											"end": 11449,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11428,
											"end": 11455,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 11418,
											"end": 11540,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "462"
										},
										{
											"begin": 11418,
											"end": 11540,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11459,
											"end": 11538,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "463"
										},
										{
											"begin": 11459,
											"end": 11538,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 11459,
											"end": 11538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11459,
											"end": 11538,
											"name": "tag",
											"source": 11,
											"value": "463"
										},
										{
											"begin": 11459,
											"end": 11538,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11418,
											"end": 11540,
											"name": "tag",
											"source": 11,
											"value": "462"
										},
										{
											"begin": 11418,
											"end": 11540,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11572,
											"end": 11578,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11559,
											"end": 11579,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 11549,
											"end": 11579,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11549,
											"end": 11579,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11602,
											"end": 11620,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11594,
											"end": 11600,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11591,
											"end": 11621,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 11588,
											"end": 11705,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11588,
											"end": 11705,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "464"
										},
										{
											"begin": 11588,
											"end": 11705,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11624,
											"end": 11703,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "465"
										},
										{
											"begin": 11624,
											"end": 11703,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 11624,
											"end": 11703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11624,
											"end": 11703,
											"name": "tag",
											"source": 11,
											"value": "465"
										},
										{
											"begin": 11624,
											"end": 11703,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11588,
											"end": 11705,
											"name": "tag",
											"source": 11,
											"value": "464"
										},
										{
											"begin": 11588,
											"end": 11705,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11738,
											"end": 11742,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11730,
											"end": 11736,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11726,
											"end": 11743,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11714,
											"end": 11743,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11714,
											"end": 11743,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11792,
											"end": 11795,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11784,
											"end": 11788,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 11776,
											"end": 11782,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11772,
											"end": 11789,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 11762,
											"end": 11770,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11758,
											"end": 11790,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11755,
											"end": 11796,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 11752,
											"end": 11880,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11752,
											"end": 11880,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "466"
										},
										{
											"begin": 11752,
											"end": 11880,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11799,
											"end": 11878,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "467"
										},
										{
											"begin": 11799,
											"end": 11878,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 11799,
											"end": 11878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11799,
											"end": 11878,
											"name": "tag",
											"source": 11,
											"value": "467"
										},
										{
											"begin": 11799,
											"end": 11878,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11752,
											"end": 11880,
											"name": "tag",
											"source": 11,
											"value": "466"
										},
										{
											"begin": 11752,
											"end": 11880,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11333,
											"end": 11886,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11333,
											"end": 11886,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11333,
											"end": 11886,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11333,
											"end": 11886,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11333,
											"end": 11886,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11333,
											"end": 11886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11892,
											"end": 12421,
											"name": "tag",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 11892,
											"end": 12421,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11963,
											"end": 11969,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11971,
											"end": 11977,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12020,
											"end": 12022,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12008,
											"end": 12017,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11999,
											"end": 12006,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 11995,
											"end": 12018,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11991,
											"end": 12023,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 11988,
											"end": 12107,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11988,
											"end": 12107,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 11988,
											"end": 12107,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12026,
											"end": 12105,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "470"
										},
										{
											"begin": 12026,
											"end": 12105,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 12026,
											"end": 12105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12026,
											"end": 12105,
											"name": "tag",
											"source": 11,
											"value": "470"
										},
										{
											"begin": 12026,
											"end": 12105,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11988,
											"end": 12107,
											"name": "tag",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 11988,
											"end": 12107,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12174,
											"end": 12175,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12163,
											"end": 12172,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12159,
											"end": 12176,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12146,
											"end": 12177,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 12204,
											"end": 12222,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12196,
											"end": 12202,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12193,
											"end": 12223,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 12190,
											"end": 12307,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12190,
											"end": 12307,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "471"
										},
										{
											"begin": 12190,
											"end": 12307,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12226,
											"end": 12305,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "472"
										},
										{
											"begin": 12226,
											"end": 12305,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 12226,
											"end": 12305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12226,
											"end": 12305,
											"name": "tag",
											"source": 11,
											"value": "472"
										},
										{
											"begin": 12226,
											"end": 12305,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12190,
											"end": 12307,
											"name": "tag",
											"source": 11,
											"value": "471"
										},
										{
											"begin": 12190,
											"end": 12307,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12339,
											"end": 12404,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "473"
										},
										{
											"begin": 12396,
											"end": 12403,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 12387,
											"end": 12393,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12376,
											"end": 12385,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 12372,
											"end": 12394,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12339,
											"end": 12404,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 12339,
											"end": 12404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12339,
											"end": 12404,
											"name": "tag",
											"source": 11,
											"value": "473"
										},
										{
											"begin": 12339,
											"end": 12404,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12321,
											"end": 12404,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12321,
											"end": 12404,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12321,
											"end": 12404,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12321,
											"end": 12404,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12117,
											"end": 12414,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11892,
											"end": 12421,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11892,
											"end": 12421,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11892,
											"end": 12421,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11892,
											"end": 12421,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11892,
											"end": 12421,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11892,
											"end": 12421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12427,
											"end": 12596,
											"name": "tag",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 12427,
											"end": 12596,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12511,
											"end": 12522,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12545,
											"end": 12551,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12540,
											"end": 12543,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12533,
											"end": 12552,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12585,
											"end": 12589,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12580,
											"end": 12583,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12576,
											"end": 12590,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12561,
											"end": 12590,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12561,
											"end": 12590,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12427,
											"end": 12596,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12427,
											"end": 12596,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12427,
											"end": 12596,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12427,
											"end": 12596,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12427,
											"end": 12596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12602,
											"end": 12774,
											"name": "tag",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 12602,
											"end": 12774,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12742,
											"end": 12766,
											"name": "PUSH",
											"source": 11,
											"value": "496E76616C696420706C61796572206164647265737300000000000000000000"
										},
										{
											"begin": 12738,
											"end": 12739,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12730,
											"end": 12736,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12726,
											"end": 12740,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12719,
											"end": 12767,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12602,
											"end": 12774,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12602,
											"end": 12774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12780,
											"end": 13146,
											"name": "tag",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 12780,
											"end": 13146,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12922,
											"end": 12925,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12943,
											"end": 13010,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "477"
										},
										{
											"begin": 13007,
											"end": 13009,
											"name": "PUSH",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 13002,
											"end": 13005,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12943,
											"end": 13010,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 12943,
											"end": 13010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12943,
											"end": 13010,
											"name": "tag",
											"source": 11,
											"value": "477"
										},
										{
											"begin": 12943,
											"end": 13010,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12936,
											"end": 13010,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12936,
											"end": 13010,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13019,
											"end": 13112,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "478"
										},
										{
											"begin": 13108,
											"end": 13111,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13019,
											"end": 13112,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 13019,
											"end": 13112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13019,
											"end": 13112,
											"name": "tag",
											"source": 11,
											"value": "478"
										},
										{
											"begin": 13019,
											"end": 13112,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13137,
											"end": 13139,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13132,
											"end": 13135,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13128,
											"end": 13140,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13121,
											"end": 13140,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13121,
											"end": 13140,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12780,
											"end": 13146,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12780,
											"end": 13146,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12780,
											"end": 13146,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12780,
											"end": 13146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13152,
											"end": 13571,
											"name": "tag",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 13152,
											"end": 13571,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13318,
											"end": 13322,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13356,
											"end": 13358,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13345,
											"end": 13354,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13341,
											"end": 13359,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13333,
											"end": 13359,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13333,
											"end": 13359,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13405,
											"end": 13414,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13399,
											"end": 13403,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13395,
											"end": 13415,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 13391,
											"end": 13392,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13380,
											"end": 13389,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13376,
											"end": 13393,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13369,
											"end": 13416,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13433,
											"end": 13564,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 13559,
											"end": 13563,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13433,
											"end": 13564,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 13433,
											"end": 13564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13433,
											"end": 13564,
											"name": "tag",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 13433,
											"end": 13564,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13425,
											"end": 13564,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13425,
											"end": 13564,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13152,
											"end": 13571,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13152,
											"end": 13571,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13152,
											"end": 13571,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13152,
											"end": 13571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13577,
											"end": 13758,
											"name": "tag",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 13577,
											"end": 13758,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13717,
											"end": 13750,
											"name": "PUSH",
											"source": 11,
											"value": "53636F7265206D7573742062652067726561746572207468616E207A65726F00"
										},
										{
											"begin": 13713,
											"end": 13714,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13705,
											"end": 13711,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13701,
											"end": 13715,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13694,
											"end": 13751,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13577,
											"end": 13758,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13577,
											"end": 13758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13764,
											"end": 14130,
											"name": "tag",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 13764,
											"end": 14130,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13906,
											"end": 13909,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13927,
											"end": 13994,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 13991,
											"end": 13993,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 13986,
											"end": 13989,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13927,
											"end": 13994,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 13927,
											"end": 13994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13927,
											"end": 13994,
											"name": "tag",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 13927,
											"end": 13994,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13920,
											"end": 13994,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13920,
											"end": 13994,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14003,
											"end": 14096,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "484"
										},
										{
											"begin": 14092,
											"end": 14095,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14003,
											"end": 14096,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 14003,
											"end": 14096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14003,
											"end": 14096,
											"name": "tag",
											"source": 11,
											"value": "484"
										},
										{
											"begin": 14003,
											"end": 14096,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14121,
											"end": 14123,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14116,
											"end": 14119,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14112,
											"end": 14124,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14105,
											"end": 14124,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14105,
											"end": 14124,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13764,
											"end": 14130,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13764,
											"end": 14130,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13764,
											"end": 14130,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13764,
											"end": 14130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14136,
											"end": 14555,
											"name": "tag",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 14136,
											"end": 14555,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14302,
											"end": 14306,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14340,
											"end": 14342,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14329,
											"end": 14338,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14325,
											"end": 14343,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14317,
											"end": 14343,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14317,
											"end": 14343,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14389,
											"end": 14398,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14383,
											"end": 14387,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14379,
											"end": 14399,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 14375,
											"end": 14376,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14364,
											"end": 14373,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14360,
											"end": 14377,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14353,
											"end": 14400,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14417,
											"end": 14548,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 14543,
											"end": 14547,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14417,
											"end": 14548,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 14417,
											"end": 14548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14417,
											"end": 14548,
											"name": "tag",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 14417,
											"end": 14548,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14409,
											"end": 14548,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14409,
											"end": 14548,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14136,
											"end": 14555,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14136,
											"end": 14555,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14136,
											"end": 14555,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14136,
											"end": 14555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14561,
											"end": 14741,
											"name": "tag",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 14561,
											"end": 14741,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14609,
											"end": 14686,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14606,
											"end": 14607,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14599,
											"end": 14687,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14706,
											"end": 14710,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 14703,
											"end": 14704,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 14696,
											"end": 14711,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14730,
											"end": 14734,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 14727,
											"end": 14728,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14720,
											"end": 14735,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 14747,
											"end": 14938,
											"name": "tag",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 14747,
											"end": 14938,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14787,
											"end": 14790,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14806,
											"end": 14826,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "489"
										},
										{
											"begin": 14824,
											"end": 14825,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14806,
											"end": 14826,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 14806,
											"end": 14826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14806,
											"end": 14826,
											"name": "tag",
											"source": 11,
											"value": "489"
										},
										{
											"begin": 14806,
											"end": 14826,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14801,
											"end": 14826,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14801,
											"end": 14826,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14840,
											"end": 14860,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "490"
										},
										{
											"begin": 14858,
											"end": 14859,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14840,
											"end": 14860,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 14840,
											"end": 14860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14840,
											"end": 14860,
											"name": "tag",
											"source": 11,
											"value": "490"
										},
										{
											"begin": 14840,
											"end": 14860,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14835,
											"end": 14860,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14835,
											"end": 14860,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14883,
											"end": 14884,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14880,
											"end": 14881,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14876,
											"end": 14885,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14869,
											"end": 14885,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14869,
											"end": 14885,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14904,
											"end": 14907,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14901,
											"end": 14902,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14898,
											"end": 14908,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 14895,
											"end": 14931,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14895,
											"end": 14931,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "491"
										},
										{
											"begin": 14895,
											"end": 14931,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14911,
											"end": 14929,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "492"
										},
										{
											"begin": 14911,
											"end": 14929,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 14911,
											"end": 14929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14911,
											"end": 14929,
											"name": "tag",
											"source": 11,
											"value": "492"
										},
										{
											"begin": 14911,
											"end": 14929,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14895,
											"end": 14931,
											"name": "tag",
											"source": 11,
											"value": "491"
										},
										{
											"begin": 14895,
											"end": 14931,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14747,
											"end": 14938,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14747,
											"end": 14938,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14747,
											"end": 14938,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14747,
											"end": 14938,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14747,
											"end": 14938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14944,
											"end": 15354,
											"name": "tag",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 14944,
											"end": 15354,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14984,
											"end": 14991,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15007,
											"end": 15027,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "494"
										},
										{
											"begin": 15025,
											"end": 15026,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15007,
											"end": 15027,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 15007,
											"end": 15027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15007,
											"end": 15027,
											"name": "tag",
											"source": 11,
											"value": "494"
										},
										{
											"begin": 15007,
											"end": 15027,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15002,
											"end": 15027,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15002,
											"end": 15027,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15041,
											"end": 15061,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "495"
										},
										{
											"begin": 15059,
											"end": 15060,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15041,
											"end": 15061,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 15041,
											"end": 15061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15041,
											"end": 15061,
											"name": "tag",
											"source": 11,
											"value": "495"
										},
										{
											"begin": 15041,
											"end": 15061,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15036,
											"end": 15061,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15036,
											"end": 15061,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15096,
											"end": 15097,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15093,
											"end": 15094,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15089,
											"end": 15098,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 15118,
											"end": 15148,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "496"
										},
										{
											"begin": 15136,
											"end": 15147,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15118,
											"end": 15148,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 15118,
											"end": 15148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15118,
											"end": 15148,
											"name": "tag",
											"source": 11,
											"value": "496"
										},
										{
											"begin": 15118,
											"end": 15148,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15107,
											"end": 15148,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15107,
											"end": 15148,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15297,
											"end": 15298,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15288,
											"end": 15295,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15284,
											"end": 15299,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 15281,
											"end": 15282,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15278,
											"end": 15300,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 15258,
											"end": 15259,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15251,
											"end": 15260,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 15231,
											"end": 15314,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 15208,
											"end": 15347,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "497"
										},
										{
											"begin": 15208,
											"end": 15347,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 15327,
											"end": 15345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "498"
										},
										{
											"begin": 15327,
											"end": 15345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 15327,
											"end": 15345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15327,
											"end": 15345,
											"name": "tag",
											"source": 11,
											"value": "498"
										},
										{
											"begin": 15327,
											"end": 15345,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15208,
											"end": 15347,
											"name": "tag",
											"source": 11,
											"value": "497"
										},
										{
											"begin": 15208,
											"end": 15347,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14992,
											"end": 15354,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14944,
											"end": 15354,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14944,
											"end": 15354,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14944,
											"end": 15354,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14944,
											"end": 15354,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14944,
											"end": 15354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15360,
											"end": 15583,
											"name": "tag",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 15360,
											"end": 15583,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15500,
											"end": 15534,
											"name": "PUSH",
											"source": 11,
											"value": "4D756C7469706C696572206D7573742062652067726561746572207468616E20"
										},
										{
											"begin": 15496,
											"end": 15497,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15488,
											"end": 15494,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15484,
											"end": 15498,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15477,
											"end": 15535,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15569,
											"end": 15575,
											"name": "PUSH",
											"source": 11,
											"value": "7A65726F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15564,
											"end": 15566,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15556,
											"end": 15562,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15552,
											"end": 15567,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15545,
											"end": 15576,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15360,
											"end": 15583,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15360,
											"end": 15583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15589,
											"end": 15955,
											"name": "tag",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 15589,
											"end": 15955,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15731,
											"end": 15734,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15752,
											"end": 15819,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "501"
										},
										{
											"begin": 15816,
											"end": 15818,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 15811,
											"end": 15814,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15752,
											"end": 15819,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 15752,
											"end": 15819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15752,
											"end": 15819,
											"name": "tag",
											"source": 11,
											"value": "501"
										},
										{
											"begin": 15752,
											"end": 15819,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15745,
											"end": 15819,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15745,
											"end": 15819,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15828,
											"end": 15921,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "502"
										},
										{
											"begin": 15917,
											"end": 15920,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15828,
											"end": 15921,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 15828,
											"end": 15921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15828,
											"end": 15921,
											"name": "tag",
											"source": 11,
											"value": "502"
										},
										{
											"begin": 15828,
											"end": 15921,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15946,
											"end": 15948,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 15941,
											"end": 15944,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15937,
											"end": 15949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15930,
											"end": 15949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15930,
											"end": 15949,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15589,
											"end": 15955,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15589,
											"end": 15955,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15589,
											"end": 15955,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15589,
											"end": 15955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15961,
											"end": 16380,
											"name": "tag",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 15961,
											"end": 16380,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16127,
											"end": 16131,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16165,
											"end": 16167,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16154,
											"end": 16163,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16150,
											"end": 16168,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16142,
											"end": 16168,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16142,
											"end": 16168,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16214,
											"end": 16223,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16208,
											"end": 16212,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16204,
											"end": 16224,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 16200,
											"end": 16201,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16189,
											"end": 16198,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16185,
											"end": 16202,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16178,
											"end": 16225,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16242,
											"end": 16373,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "504"
										},
										{
											"begin": 16368,
											"end": 16372,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16242,
											"end": 16373,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 16242,
											"end": 16373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16242,
											"end": 16373,
											"name": "tag",
											"source": 11,
											"value": "504"
										},
										{
											"begin": 16242,
											"end": 16373,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16234,
											"end": 16373,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16234,
											"end": 16373,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15961,
											"end": 16380,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15961,
											"end": 16380,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15961,
											"end": 16380,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15961,
											"end": 16380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16386,
											"end": 16556,
											"name": "tag",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 16386,
											"end": 16556,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16526,
											"end": 16548,
											"name": "PUSH",
											"source": 11,
											"value": "4F6666736574206F7574206F6620626F756E6473000000000000000000000000"
										},
										{
											"begin": 16522,
											"end": 16523,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16514,
											"end": 16520,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16510,
											"end": 16524,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16503,
											"end": 16549,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16386,
											"end": 16556,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16386,
											"end": 16556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16562,
											"end": 16928,
											"name": "tag",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 16562,
											"end": 16928,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16704,
											"end": 16707,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16725,
											"end": 16792,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "507"
										},
										{
											"begin": 16789,
											"end": 16791,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 16784,
											"end": 16787,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16725,
											"end": 16792,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 16725,
											"end": 16792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16725,
											"end": 16792,
											"name": "tag",
											"source": 11,
											"value": "507"
										},
										{
											"begin": 16725,
											"end": 16792,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16718,
											"end": 16792,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16718,
											"end": 16792,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16801,
											"end": 16894,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "508"
										},
										{
											"begin": 16890,
											"end": 16893,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16801,
											"end": 16894,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 16801,
											"end": 16894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16801,
											"end": 16894,
											"name": "tag",
											"source": 11,
											"value": "508"
										},
										{
											"begin": 16801,
											"end": 16894,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16919,
											"end": 16921,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16914,
											"end": 16917,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16910,
											"end": 16922,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16903,
											"end": 16922,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16903,
											"end": 16922,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16562,
											"end": 16928,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16562,
											"end": 16928,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16562,
											"end": 16928,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16562,
											"end": 16928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16934,
											"end": 17353,
											"name": "tag",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 16934,
											"end": 17353,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17100,
											"end": 17104,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17138,
											"end": 17140,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17127,
											"end": 17136,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17123,
											"end": 17141,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17115,
											"end": 17141,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17115,
											"end": 17141,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17187,
											"end": 17196,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17181,
											"end": 17185,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17177,
											"end": 17197,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 17173,
											"end": 17174,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17162,
											"end": 17171,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17158,
											"end": 17175,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17151,
											"end": 17198,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17215,
											"end": 17346,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "510"
										},
										{
											"begin": 17341,
											"end": 17345,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17215,
											"end": 17346,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 17215,
											"end": 17346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17215,
											"end": 17346,
											"name": "tag",
											"source": 11,
											"value": "510"
										},
										{
											"begin": 17215,
											"end": 17346,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17207,
											"end": 17346,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17207,
											"end": 17346,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16934,
											"end": 17353,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16934,
											"end": 17353,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16934,
											"end": 17353,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16934,
											"end": 17353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17359,
											"end": 17553,
											"name": "tag",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 17359,
											"end": 17553,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17399,
											"end": 17403,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17419,
											"end": 17439,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "512"
										},
										{
											"begin": 17437,
											"end": 17438,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17419,
											"end": 17439,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 17419,
											"end": 17439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17419,
											"end": 17439,
											"name": "tag",
											"source": 11,
											"value": "512"
										},
										{
											"begin": 17419,
											"end": 17439,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17414,
											"end": 17439,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17414,
											"end": 17439,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17453,
											"end": 17473,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "513"
										},
										{
											"begin": 17471,
											"end": 17472,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17453,
											"end": 17473,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 17453,
											"end": 17473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17453,
											"end": 17473,
											"name": "tag",
											"source": 11,
											"value": "513"
										},
										{
											"begin": 17453,
											"end": 17473,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17448,
											"end": 17473,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 17448,
											"end": 17473,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17497,
											"end": 17498,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17494,
											"end": 17495,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17490,
											"end": 17499,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 17482,
											"end": 17499,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17482,
											"end": 17499,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17521,
											"end": 17522,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17515,
											"end": 17519,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17512,
											"end": 17523,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 17509,
											"end": 17546,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 17509,
											"end": 17546,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "514"
										},
										{
											"begin": 17509,
											"end": 17546,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 17526,
											"end": 17544,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "515"
										},
										{
											"begin": 17526,
											"end": 17544,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 17526,
											"end": 17544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17526,
											"end": 17544,
											"name": "tag",
											"source": 11,
											"value": "515"
										},
										{
											"begin": 17526,
											"end": 17544,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17509,
											"end": 17546,
											"name": "tag",
											"source": 11,
											"value": "514"
										},
										{
											"begin": 17509,
											"end": 17546,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17359,
											"end": 17553,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 17359,
											"end": 17553,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17359,
											"end": 17553,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17359,
											"end": 17553,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17359,
											"end": 17553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17559,
											"end": 17739,
											"name": "tag",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 17559,
											"end": 17739,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17607,
											"end": 17684,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17604,
											"end": 17605,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17597,
											"end": 17685,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17704,
											"end": 17708,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 17701,
											"end": 17702,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 17694,
											"end": 17709,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17728,
											"end": 17732,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 17725,
											"end": 17726,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17718,
											"end": 17733,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 17745,
											"end": 17925,
											"name": "tag",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 17745,
											"end": 17925,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17793,
											"end": 17870,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17790,
											"end": 17791,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17783,
											"end": 17871,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17890,
											"end": 17894,
											"name": "PUSH",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 17887,
											"end": 17888,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 17880,
											"end": 17895,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17914,
											"end": 17918,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 17911,
											"end": 17912,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17904,
											"end": 17919,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 17931,
											"end": 18164,
											"name": "tag",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 17931,
											"end": 18164,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17970,
											"end": 17973,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17993,
											"end": 18017,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "519"
										},
										{
											"begin": 18011,
											"end": 18016,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17993,
											"end": 18017,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 17993,
											"end": 18017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17993,
											"end": 18017,
											"name": "tag",
											"source": 11,
											"value": "519"
										},
										{
											"begin": 17993,
											"end": 18017,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17984,
											"end": 18017,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17984,
											"end": 18017,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18039,
											"end": 18105,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18032,
											"end": 18037,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18029,
											"end": 18106,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 18026,
											"end": 18129,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "520"
										},
										{
											"begin": 18026,
											"end": 18129,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 18109,
											"end": 18127,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "521"
										},
										{
											"begin": 18109,
											"end": 18127,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 18109,
											"end": 18127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18109,
											"end": 18127,
											"name": "tag",
											"source": 11,
											"value": "521"
										},
										{
											"begin": 18109,
											"end": 18127,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18026,
											"end": 18129,
											"name": "tag",
											"source": 11,
											"value": "520"
										},
										{
											"begin": 18026,
											"end": 18129,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18156,
											"end": 18157,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 18149,
											"end": 18154,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18145,
											"end": 18158,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18138,
											"end": 18158,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18138,
											"end": 18158,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17931,
											"end": 18164,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17931,
											"end": 18164,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17931,
											"end": 18164,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17931,
											"end": 18164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18170,
											"end": 18502,
											"name": "tag",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 18170,
											"end": 18502,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18291,
											"end": 18295,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18329,
											"end": 18331,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 18318,
											"end": 18327,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18314,
											"end": 18332,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18306,
											"end": 18332,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18306,
											"end": 18332,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18342,
											"end": 18413,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "523"
										},
										{
											"begin": 18410,
											"end": 18411,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18399,
											"end": 18408,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18395,
											"end": 18412,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18386,
											"end": 18392,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 18342,
											"end": 18413,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 18342,
											"end": 18413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18342,
											"end": 18413,
											"name": "tag",
											"source": 11,
											"value": "523"
										},
										{
											"begin": 18342,
											"end": 18413,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18423,
											"end": 18495,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "524"
										},
										{
											"begin": 18491,
											"end": 18493,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18480,
											"end": 18489,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18476,
											"end": 18494,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18467,
											"end": 18473,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 18423,
											"end": 18495,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 18423,
											"end": 18495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18423,
											"end": 18495,
											"name": "tag",
											"source": 11,
											"value": "524"
										},
										{
											"begin": 18423,
											"end": 18495,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18170,
											"end": 18502,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 18170,
											"end": 18502,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 18170,
											"end": 18502,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18170,
											"end": 18502,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18170,
											"end": 18502,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18170,
											"end": 18502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18508,
											"end": 18651,
											"name": "tag",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 18508,
											"end": 18651,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18565,
											"end": 18570,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18596,
											"end": 18602,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18590,
											"end": 18603,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18612,
											"end": 18645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "526"
										},
										{
											"begin": 18639,
											"end": 18644,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18612,
											"end": 18645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 18612,
											"end": 18645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18612,
											"end": 18645,
											"name": "tag",
											"source": 11,
											"value": "526"
										},
										{
											"begin": 18612,
											"end": 18645,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18508,
											"end": 18651,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 18508,
											"end": 18651,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18508,
											"end": 18651,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18508,
											"end": 18651,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18508,
											"end": 18651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18657,
											"end": 19008,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 18657,
											"end": 19008,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18727,
											"end": 18733,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18776,
											"end": 18778,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18764,
											"end": 18773,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18755,
											"end": 18762,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 18751,
											"end": 18774,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 18747,
											"end": 18779,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 18744,
											"end": 18863,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 18744,
											"end": 18863,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "528"
										},
										{
											"begin": 18744,
											"end": 18863,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 18782,
											"end": 18861,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "529"
										},
										{
											"begin": 18782,
											"end": 18861,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 18782,
											"end": 18861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18782,
											"end": 18861,
											"name": "tag",
											"source": 11,
											"value": "529"
										},
										{
											"begin": 18782,
											"end": 18861,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18744,
											"end": 18863,
											"name": "tag",
											"source": 11,
											"value": "528"
										},
										{
											"begin": 18744,
											"end": 18863,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18902,
											"end": 18903,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18927,
											"end": 18991,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "530"
										},
										{
											"begin": 18983,
											"end": 18990,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 18974,
											"end": 18980,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18963,
											"end": 18972,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 18959,
											"end": 18981,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18927,
											"end": 18991,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 18927,
											"end": 18991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18927,
											"end": 18991,
											"name": "tag",
											"source": 11,
											"value": "530"
										},
										{
											"begin": 18927,
											"end": 18991,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18917,
											"end": 18991,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18917,
											"end": 18991,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18873,
											"end": 19001,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18657,
											"end": 19008,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 18657,
											"end": 19008,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18657,
											"end": 19008,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18657,
											"end": 19008,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18657,
											"end": 19008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19014,
											"end": 19186,
											"name": "tag",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 19014,
											"end": 19186,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19154,
											"end": 19178,
											"name": "PUSH",
											"source": 11,
											"value": "496E73756666696369656E7420616C6C6F77616E636500000000000000000000"
										},
										{
											"begin": 19150,
											"end": 19151,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19142,
											"end": 19148,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19138,
											"end": 19152,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19131,
											"end": 19179,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19014,
											"end": 19186,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19014,
											"end": 19186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19192,
											"end": 19558,
											"name": "tag",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 19192,
											"end": 19558,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19334,
											"end": 19337,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19355,
											"end": 19422,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "533"
										},
										{
											"begin": 19419,
											"end": 19421,
											"name": "PUSH",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 19414,
											"end": 19417,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19355,
											"end": 19422,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 19355,
											"end": 19422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19355,
											"end": 19422,
											"name": "tag",
											"source": 11,
											"value": "533"
										},
										{
											"begin": 19355,
											"end": 19422,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19348,
											"end": 19422,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19348,
											"end": 19422,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19431,
											"end": 19524,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "534"
										},
										{
											"begin": 19520,
											"end": 19523,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19431,
											"end": 19524,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 19431,
											"end": 19524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19431,
											"end": 19524,
											"name": "tag",
											"source": 11,
											"value": "534"
										},
										{
											"begin": 19431,
											"end": 19524,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19549,
											"end": 19551,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19544,
											"end": 19547,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19540,
											"end": 19552,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19533,
											"end": 19552,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19533,
											"end": 19552,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19192,
											"end": 19558,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19192,
											"end": 19558,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19192,
											"end": 19558,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19192,
											"end": 19558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19564,
											"end": 19983,
											"name": "tag",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 19564,
											"end": 19983,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19730,
											"end": 19734,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19768,
											"end": 19770,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19757,
											"end": 19766,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19753,
											"end": 19771,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19745,
											"end": 19771,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19745,
											"end": 19771,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19817,
											"end": 19826,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19811,
											"end": 19815,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19807,
											"end": 19827,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 19803,
											"end": 19804,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19792,
											"end": 19801,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19788,
											"end": 19805,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19781,
											"end": 19828,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19845,
											"end": 19976,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "536"
										},
										{
											"begin": 19971,
											"end": 19975,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19845,
											"end": 19976,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 19845,
											"end": 19976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19845,
											"end": 19976,
											"name": "tag",
											"source": 11,
											"value": "536"
										},
										{
											"begin": 19845,
											"end": 19976,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19837,
											"end": 19976,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19837,
											"end": 19976,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19564,
											"end": 19983,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19564,
											"end": 19983,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19564,
											"end": 19983,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19564,
											"end": 19983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19989,
											"end": 20137,
											"name": "tag",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 19989,
											"end": 20137,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20087,
											"end": 20093,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20082,
											"end": 20085,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20077,
											"end": 20080,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 20064,
											"end": 20094,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 20128,
											"end": 20129,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20119,
											"end": 20125,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 20114,
											"end": 20117,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 20110,
											"end": 20126,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20103,
											"end": 20130,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19989,
											"end": 20137,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19989,
											"end": 20137,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19989,
											"end": 20137,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19989,
											"end": 20137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20143,
											"end": 20245,
											"name": "tag",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 20143,
											"end": 20245,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20184,
											"end": 20190,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20235,
											"end": 20237,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 20231,
											"end": 20238,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 20226,
											"end": 20228,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 20219,
											"end": 20224,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 20215,
											"end": 20229,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20211,
											"end": 20239,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 20201,
											"end": 20239,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20201,
											"end": 20239,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20143,
											"end": 20245,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20143,
											"end": 20245,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20143,
											"end": 20245,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20143,
											"end": 20245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20275,
											"end": 20592,
											"name": "tag",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 20275,
											"end": 20592,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20373,
											"end": 20376,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20394,
											"end": 20465,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "540"
										},
										{
											"begin": 20458,
											"end": 20464,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 20453,
											"end": 20456,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 20394,
											"end": 20465,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 20394,
											"end": 20465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20394,
											"end": 20465,
											"name": "tag",
											"source": 11,
											"value": "540"
										},
										{
											"begin": 20394,
											"end": 20465,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20387,
											"end": 20465,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 20387,
											"end": 20465,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20475,
											"end": 20531,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "541"
										},
										{
											"begin": 20524,
											"end": 20530,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 20519,
											"end": 20522,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 20512,
											"end": 20517,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 20475,
											"end": 20531,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 20475,
											"end": 20531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20475,
											"end": 20531,
											"name": "tag",
											"source": 11,
											"value": "541"
										},
										{
											"begin": 20475,
											"end": 20531,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20556,
											"end": 20585,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "542"
										},
										{
											"begin": 20578,
											"end": 20584,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 20556,
											"end": 20585,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 20556,
											"end": 20585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20556,
											"end": 20585,
											"name": "tag",
											"source": 11,
											"value": "542"
										},
										{
											"begin": 20556,
											"end": 20585,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20551,
											"end": 20554,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 20547,
											"end": 20586,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20540,
											"end": 20586,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20540,
											"end": 20586,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20275,
											"end": 20592,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 20275,
											"end": 20592,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 20275,
											"end": 20592,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20275,
											"end": 20592,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20275,
											"end": 20592,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20275,
											"end": 20592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20598,
											"end": 20931,
											"name": "tag",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 20598,
											"end": 20931,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20721,
											"end": 20725,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20759,
											"end": 20761,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20748,
											"end": 20757,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20744,
											"end": 20762,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20736,
											"end": 20762,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20736,
											"end": 20762,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20808,
											"end": 20817,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20802,
											"end": 20806,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20798,
											"end": 20818,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 20794,
											"end": 20795,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20783,
											"end": 20792,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 20779,
											"end": 20796,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20772,
											"end": 20819,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20836,
											"end": 20924,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "544"
										},
										{
											"begin": 20919,
											"end": 20923,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20910,
											"end": 20916,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 20902,
											"end": 20908,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 20836,
											"end": 20924,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 20836,
											"end": 20924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20836,
											"end": 20924,
											"name": "tag",
											"source": 11,
											"value": "544"
										},
										{
											"begin": 20836,
											"end": 20924,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20828,
											"end": 20924,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20828,
											"end": 20924,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20598,
											"end": 20931,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 20598,
											"end": 20931,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 20598,
											"end": 20931,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20598,
											"end": 20931,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20598,
											"end": 20931,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20598,
											"end": 20931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20937,
											"end": 21269,
											"name": "tag",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 20937,
											"end": 21269,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21058,
											"end": 21062,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21096,
											"end": 21098,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 21085,
											"end": 21094,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21081,
											"end": 21099,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21073,
											"end": 21099,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21073,
											"end": 21099,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21109,
											"end": 21180,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "546"
										},
										{
											"begin": 21177,
											"end": 21178,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21166,
											"end": 21175,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21162,
											"end": 21179,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21153,
											"end": 21159,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 21109,
											"end": 21180,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 21109,
											"end": 21180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21109,
											"end": 21180,
											"name": "tag",
											"source": 11,
											"value": "546"
										},
										{
											"begin": 21109,
											"end": 21180,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21190,
											"end": 21262,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "547"
										},
										{
											"begin": 21258,
											"end": 21260,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21247,
											"end": 21256,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21243,
											"end": 21261,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21234,
											"end": 21240,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 21190,
											"end": 21262,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 21190,
											"end": 21262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21190,
											"end": 21262,
											"name": "tag",
											"source": 11,
											"value": "547"
										},
										{
											"begin": 21190,
											"end": 21262,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20937,
											"end": 21269,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 20937,
											"end": 21269,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 20937,
											"end": 21269,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20937,
											"end": 21269,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20937,
											"end": 21269,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20937,
											"end": 21269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21275,
											"end": 21717,
											"name": "tag",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 21275,
											"end": 21717,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21424,
											"end": 21428,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21462,
											"end": 21464,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 21451,
											"end": 21460,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21447,
											"end": 21465,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21439,
											"end": 21465,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21439,
											"end": 21465,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21475,
											"end": 21546,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "549"
										},
										{
											"begin": 21543,
											"end": 21544,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21532,
											"end": 21541,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21528,
											"end": 21545,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21519,
											"end": 21525,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 21475,
											"end": 21546,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 21475,
											"end": 21546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21475,
											"end": 21546,
											"name": "tag",
											"source": 11,
											"value": "549"
										},
										{
											"begin": 21475,
											"end": 21546,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21556,
											"end": 21628,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "550"
										},
										{
											"begin": 21624,
											"end": 21626,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21613,
											"end": 21622,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21609,
											"end": 21627,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21600,
											"end": 21606,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 21556,
											"end": 21628,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 21556,
											"end": 21628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21556,
											"end": 21628,
											"name": "tag",
											"source": 11,
											"value": "550"
										},
										{
											"begin": 21556,
											"end": 21628,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21638,
											"end": 21710,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "551"
										},
										{
											"begin": 21706,
											"end": 21708,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 21695,
											"end": 21704,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21691,
											"end": 21709,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21682,
											"end": 21688,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 21638,
											"end": 21710,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 21638,
											"end": 21710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21638,
											"end": 21710,
											"name": "tag",
											"source": 11,
											"value": "551"
										},
										{
											"begin": 21638,
											"end": 21710,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21275,
											"end": 21717,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 21275,
											"end": 21717,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 21275,
											"end": 21717,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21275,
											"end": 21717,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21275,
											"end": 21717,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21275,
											"end": 21717,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21275,
											"end": 21717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21723,
											"end": 22055,
											"name": "tag",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 21723,
											"end": 22055,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21844,
											"end": 21848,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21882,
											"end": 21884,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 21871,
											"end": 21880,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21867,
											"end": 21885,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21859,
											"end": 21885,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21859,
											"end": 21885,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21895,
											"end": 21966,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "553"
										},
										{
											"begin": 21963,
											"end": 21964,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21952,
											"end": 21961,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21948,
											"end": 21965,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21939,
											"end": 21945,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 21895,
											"end": 21966,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 21895,
											"end": 21966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21895,
											"end": 21966,
											"name": "tag",
											"source": 11,
											"value": "553"
										},
										{
											"begin": 21895,
											"end": 21966,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21976,
											"end": 22048,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "554"
										},
										{
											"begin": 22044,
											"end": 22046,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 22033,
											"end": 22042,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 22029,
											"end": 22047,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22020,
											"end": 22026,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 21976,
											"end": 22048,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 21976,
											"end": 22048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21976,
											"end": 22048,
											"name": "tag",
											"source": 11,
											"value": "554"
										},
										{
											"begin": 21976,
											"end": 22048,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21723,
											"end": 22055,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 21723,
											"end": 22055,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 21723,
											"end": 22055,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21723,
											"end": 22055,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21723,
											"end": 22055,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21723,
											"end": 22055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/game.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ADMIN_ROLE()": "75b238fc",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"REPAIR_COST()": "d12af19a",
							"gameToken()": "c3dfdae6",
							"getLeaderboard(uint256,uint256)": "73af16fc",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getScore(address)": "d47875d0",
							"grantAdminRole(address)": "c634b78e",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"playerAddresses(uint256)": "15c6aee2",
							"players(address)": "e2eb41ff",
							"renounceRole(bytes32,address)": "36568abe",
							"repairVehicle(string)": "ed4b7eaa",
							"revokeAdminRole(address)": "9a19c7b0",
							"revokeRole(bytes32,address)": "d547741f",
							"submitScore(address,uint256)": "1db544c0",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenMultiplier()": "ba3f5a12",
							"updateTokenMultiplier(uint256)": "3596362b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMultiplier\",\"type\":\"uint256\"}],\"name\":\"FormulaUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"PlayerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensEarned\",\"type\":\"uint256\"}],\"name\":\"ScoreSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"component\",\"type\":\"string\"}],\"name\":\"VehicleRepaired\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REPAIR_COST\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"getLeaderboard\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"}],\"internalType\":\"struct GameLogic.LeaderboardEntry[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"getScore\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantAdminRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"playerAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"players\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastSubmissionTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"component\",\"type\":\"string\"}],\"name\":\"repairVehicle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeAdminRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"}],\"name\":\"submitScore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMultiplier\",\"type\":\"uint256\"}],\"name\":\"updateTokenMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/game.sol\":\"GameLogic\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/game.sol\":{\"keccak256\":\"0x1dc75926c61c0405f99213aa12d25f10be2eaef59533679f47bb97ee5f1c1032\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8efb63a35665941a0bdd7f3d83ea2bae80118318469d697504ec73caff92b709\",\"dweb:/ipfs/QmYx74UBsArucXP7s83ntAfHxBaXpnUqs8nFtPVrjz8iBM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "contracts/game.sol:GameLogic",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)22_storage)"
							},
							{
								"astId": 1091,
								"contract": "contracts/game.sol:GameLogic",
								"label": "gameToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)547"
							},
							{
								"astId": 1094,
								"contract": "contracts/game.sol:GameLogic",
								"label": "tokenMultiplier",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1121,
								"contract": "contracts/game.sol:GameLogic",
								"label": "players",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_struct(Player)1111_storage)"
							},
							{
								"astId": 1124,
								"contract": "contracts/game.sol:GameLogic",
								"label": "playerAddresses",
								"offset": 0,
								"slot": "4",
								"type": "t_array(t_address)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)547": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_struct(Player)1111_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct GameLogic.Player)",
								"numberOfBytes": "32",
								"value": "t_struct(Player)1111_storage"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)22_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)22_storage"
							},
							"t_struct(Player)1111_storage": {
								"encoding": "inplace",
								"label": "struct GameLogic.Player",
								"members": [
									{
										"astId": 1108,
										"contract": "contracts/game.sol:GameLogic",
										"label": "score",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1110,
										"contract": "contracts/game.sol:GameLogic",
										"label": "lastSubmissionTimestamp",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(RoleData)22_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 19,
										"contract": "contracts/game.sol:GameLogic",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 21,
										"contract": "contracts/game.sol:GameLogic",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							296
						],
						"Context": [
							1041
						],
						"ERC165": [
							1065
						],
						"IAccessControl": [
							379
						],
						"IERC165": [
							1077
						]
					},
					"id": 297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 380,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 379,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 1042,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1041,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 8,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 1066,
							"src": "233:66:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1077,
										"src": "241:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 7,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1065,
										"src": "250:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 10,
										"name": "Context",
										"nameLocations": [
											"1997:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1041,
										"src": "1997:7:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:7:0"
								},
								{
									"baseName": {
										"id": 12,
										"name": "IAccessControl",
										"nameLocations": [
											"2006:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 379,
										"src": "2006:14:0"
									},
									"id": 13,
									"nodeType": "InheritanceSpecifier",
									"src": "2006:14:0"
								},
								{
									"baseName": {
										"id": 14,
										"name": "ERC165",
										"nameLocations": [
											"2022:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1065,
										"src": "2022:6:0"
									},
									"id": 15,
									"nodeType": "InheritanceSpecifier",
									"src": "2022:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 9,
								"nodeType": "StructuredDocumentation",
								"src": "301:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 296,
							"linearizedBaseContracts": [
								296,
								1065,
								1077,
								379,
								1041
							],
							"name": "AccessControl",
							"nameLocation": "1980:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 22,
									"members": [
										{
											"constant": false,
											"id": 19,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2094:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "2061:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 18,
												"keyName": "account",
												"keyNameLocation": "2077:7:0",
												"keyType": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2061:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2088:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 21,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2119:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "2111:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 20,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2111:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2042:8:0",
									"nodeType": "StructDefinition",
									"scope": 296,
									"src": "2035:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2183:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 296,
									"src": "2141:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 26,
										"keyName": "role",
										"keyNameLocation": "2157:4:0",
										"keyType": {
											"id": 23,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2149:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2141:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 25,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 24,
												"name": "RoleData",
												"nameLocations": [
													"2165:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 22,
												"src": "2165:8:0"
											},
											"referencedDeclaration": 22,
											"src": "2165:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$22_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 30,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2220:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 296,
									"src": "2196:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 28,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2196:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 29,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2241:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "2463:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 36,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "2484:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 35,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															94,
															115
														],
														"referencedDeclaration": 94,
														"src": "2473:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2473:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2473:16:0"
											},
											{
												"id": 39,
												"nodeType": "PlaceholderStatement",
												"src": "2499:1:0"
											}
										]
									},
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "2252:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 41,
									"name": "onlyRole",
									"nameLocation": "2440:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2457:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "2449:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 32,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2448:14:0"
									},
									"src": "2431:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1064
									],
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "2632:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 55,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 50,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "2649:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 52,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 379,
																		"src": "2669:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$379_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$379_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 51,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2664:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2664:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$379",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2685:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2664:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2649:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 58,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 44,
																"src": "2724:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 56,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2700:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$296_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2706:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1064,
															"src": "2700:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2700:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2649:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 49,
												"id": 61,
												"nodeType": "Return",
												"src": "2642:94:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "2513:23:0",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2550:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 46,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2608:8:0"
									},
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2575:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2568:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 43,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2567:20:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2626:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 47,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2626:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2625:6:0"
									},
									"scope": 296,
									"src": "2541:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										346
									],
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2913:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 73,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "2930:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 75,
															"indexExpression": {
																"id": 74,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "2937:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2930:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$22_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2943:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "2930:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 78,
													"indexExpression": {
														"id": 77,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "2951:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2930:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 72,
												"id": 79,
												"nodeType": "Return",
												"src": "2923:36:0"
											}
										]
									},
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "2749:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2839:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2855:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2847:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 65,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2847:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2869:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2861:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2861:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2846:31:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2907:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 70,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2907:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2906:6:0"
									},
									"scope": 296,
									"src": "2830:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "3231:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 88,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "3252:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 89,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1023,
																"src": "3258:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3258:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 87,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															94,
															115
														],
														"referencedDeclaration": 115,
														"src": "3241:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3241:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "3241:30:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2972:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3184:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3203:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "3195:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 83,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3195:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3194:14:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3231:0:0"
									},
									"scope": 296,
									"src": "3175:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "3481:124:0",
										"statements": [
											{
												"condition": {
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3495:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 103,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3504:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 104,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "3510:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 102,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "3496:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3496:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 113,
												"nodeType": "IfStatement",
												"src": "3491:108:0",
												"trueBody": {
													"id": 112,
													"nodeType": "Block",
													"src": "3520:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 108,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "3574:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 109,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "3583:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 107,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "3541:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3541:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 111,
															"nodeType": "RevertStatement",
															"src": "3534:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "3284:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3417:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3436:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3428:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 96,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3450:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3442:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3442:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3427:31:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3481:0:0"
									},
									"scope": 296,
									"src": "3408:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										354
									],
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "3860:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 123,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "3877:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 125,
														"indexExpression": {
															"id": 124,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "3884:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3877:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$22_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3890:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 21,
													"src": "3877:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 122,
												"id": 127,
												"nodeType": "Return",
												"src": "3870:29:0"
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "3611:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3795:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3816:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "3808:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 117,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3807:14:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "3851:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 120,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:9:0"
									},
									"scope": 296,
									"src": "3786:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										362
									],
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "4296:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 143,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "4317:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 144,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "4323:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 142,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "4306:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4306:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "4306:25:0"
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "3912:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 148,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 138,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "4289:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 137,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "4276:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 140,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 136,
												"name": "onlyRole",
												"nameLocations": [
													"4267:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "4267:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4267:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4211:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4229:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "4221:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 131,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4221:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4243:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "4235:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4235:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4220:31:0"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4296:0:0"
									},
									"scope": 296,
									"src": "4202:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										370
									],
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "4713:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 162,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "4735:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 163,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4741:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 161,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "4723:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4723:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "4723:26:0"
											}
										]
									},
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "4344:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 157,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "4706:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 156,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "4693:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4693:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 159,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 155,
												"name": "onlyRole",
												"nameLocations": [
													"4684:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "4684:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4684:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4627:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4646:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4638:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 150,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4638:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4637:31:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4713:0:0"
									},
									"scope": 296,
									"src": "4618:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										378
									],
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "5383:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 175,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "5397:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 176,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "5419:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5419:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5397:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 183,
												"nodeType": "IfStatement",
												"src": "5393:102:0",
												"trueBody": {
													"id": 182,
													"nodeType": "Block",
													"src": "5433:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 179,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 309,
																	"src": "5454:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5454:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 181,
															"nodeType": "RevertStatement",
															"src": "5447:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "5517:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 186,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "5523:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "5505:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5505:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5505:37:0"
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "4762:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5313:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5334:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5326:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 169,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5348:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5340:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5325:42:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5383:0:0"
									},
									"scope": 296,
									"src": "5304:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "5747:174:0",
										"statements": [
											{
												"assignments": [
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 199,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5765:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 217,
														"src": "5757:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 198,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5757:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 203,
												"initialValue": {
													"arguments": [
														{
															"id": 201,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5798:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 200,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "5785:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5785:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5757:46:0"
											},
											{
												"expression": {
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 204,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "5813:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 206,
															"indexExpression": {
																"id": 205,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "5820:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5813:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$22_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5826:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 21,
														"src": "5813:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 208,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "5838:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5813:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "5813:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 212,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5879:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "5885:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 214,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "5904:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 211,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "5862:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5862:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "EmitStatement",
												"src": "5857:57:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "5555:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5683:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5705:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5697:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 192,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5697:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5719:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5711:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 194,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5711:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5696:33:0"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5747:0:0"
									},
									"scope": 296,
									"src": "5674:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "6238:233:0",
										"statements": [
											{
												"condition": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6252:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 229,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "6261:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 230,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "6267:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 228,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "6253:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6253:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 254,
													"nodeType": "Block",
													"src": "6428:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6449:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 227,
															"id": 253,
															"nodeType": "Return",
															"src": "6442:12:0"
														}
													]
												},
												"id": 255,
												"nodeType": "IfStatement",
												"src": "6248:217:0",
												"trueBody": {
													"id": 251,
													"nodeType": "Block",
													"src": "6277:145:0",
													"statements": [
														{
															"expression": {
																"id": 240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 233,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 27,
																				"src": "6291:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 235,
																			"indexExpression": {
																				"id": 234,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 221,
																				"src": "6298:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6291:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$22_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 236,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6304:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 19,
																		"src": "6291:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 238,
																	"indexExpression": {
																		"id": 237,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 223,
																		"src": "6312:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6291:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6323:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6291:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 241,
															"nodeType": "ExpressionStatement",
															"src": "6291:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 243,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "6358:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 244,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 223,
																		"src": "6364:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 245,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1023,
																			"src": "6373:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6373:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 242,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "6346:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6346:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 248,
															"nodeType": "EmitStatement",
															"src": "6341:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6407:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 227,
															"id": 250,
															"nodeType": "Return",
															"src": "6400:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "5927:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6164:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6183:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6175:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 220,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6197:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6189:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6189:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6174:31:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6232:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6232:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6231:6:0"
									},
									"scope": 296,
									"src": "6155:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "6792:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 268,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "6814:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 269,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "6820:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 267,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "6806:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6806:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 292,
													"nodeType": "Block",
													"src": "6982:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7003:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 266,
															"id": 291,
															"nodeType": "Return",
															"src": "6996:12:0"
														}
													]
												},
												"id": 293,
												"nodeType": "IfStatement",
												"src": "6802:217:0",
												"trueBody": {
													"id": 289,
													"nodeType": "Block",
													"src": "6830:146:0",
													"statements": [
														{
															"expression": {
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 271,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 27,
																				"src": "6844:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 273,
																			"indexExpression": {
																				"id": 272,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 260,
																				"src": "6851:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6844:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$22_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 274,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6857:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 19,
																		"src": "6844:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 276,
																	"indexExpression": {
																		"id": 275,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "6865:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6844:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6876:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6844:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 279,
															"nodeType": "ExpressionStatement",
															"src": "6844:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 281,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "6912:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 282,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "6918:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 283,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1023,
																			"src": "6927:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6927:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 280,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "6900:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6900:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 286,
															"nodeType": "EmitStatement",
															"src": "6895:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 266,
															"id": 288,
															"nodeType": "Return",
															"src": "6954:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "6477:226:0",
										"text": " @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6717:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6737:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6729:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 259,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6751:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6743:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6743:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6728:31:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6786:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6786:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6785:6:0"
									},
									"scope": 296,
									"src": "6708:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 297,
							"src": "1962:5065:0",
							"usedErrors": [
								306,
								309
							],
							"usedEvents": [
								318,
								327,
								336
							]
						}
					],
					"src": "108:6920:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							379
						]
					},
					"id": 380,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 298,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 299,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 379,
							"linearizedBaseContracts": [
								379
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 306,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 303,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 309,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 318,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 311,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 313,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 315,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 327,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 320,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 336,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 329,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 346,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 338,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 379,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 354,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 348,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 351,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 379,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 356,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 379,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 370,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 364,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 379,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 372,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 379,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 380,
							"src": "226:3116:1",
							"usedErrors": [
								306,
								309
							],
							"usedEvents": [
								318,
								327,
								336
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							461
						],
						"IERC165": [
							1077
						],
						"IERC20": [
							547
						]
					},
					"id": 462,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 381,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 383,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 462,
							"sourceUnit": 470,
							"src": "133:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 382,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 547,
										"src": "141:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 385,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 462,
							"sourceUnit": 466,
							"src": "170:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 384,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1077,
										"src": "178:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 387,
										"name": "IERC20",
										"nameLocations": [
											"590:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 547,
										"src": "590:6:2"
									},
									"id": 388,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:2"
								},
								{
									"baseName": {
										"id": 389,
										"name": "IERC165",
										"nameLocations": [
											"598:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1077,
										"src": "598:7:2"
									},
									"id": 390,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:2"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 386,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:2",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 461,
							"linearizedBaseContracts": [
								461,
								1077,
								547
							],
							"name": "IERC1363",
							"nameLocation": "578:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 400,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1548:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1560:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:2"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1593:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:2"
									},
									"scope": 461,
									"src": "1523:76:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 412,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2088:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2100:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2115:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 406,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:2"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2154:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 409,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:2"
									},
									"scope": 461,
									"src": "2063:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 424,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "2653:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "2667:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "2679:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:2"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "2712:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 421,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:2"
									},
									"scope": 461,
									"src": "2624:94:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 425,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 438,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "3294:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "3308:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "3320:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "3335:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 432,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:2"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "3374:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 435,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:2"
									},
									"scope": 461,
									"src": "3265:115:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 448,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3805:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3822:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:2"
									},
									"returnParameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3855:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 445,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:2"
									},
									"scope": 461,
									"src": "3781:80:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 449,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 460,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "4374:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "4391:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "4406:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 454,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:2"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "4445:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 457,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:2"
									},
									"scope": 461,
									"src": "4350:101:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 462,
							"src": "568:3885:2",
							"usedErrors": [],
							"usedEvents": [
								481,
								490
							]
						}
					],
					"src": "107:4347:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1077
						]
					},
					"id": 466,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 463,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 465,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 466,
							"sourceUnit": 1078,
							"src": "133:59:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 464,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1077,
										"src": "141:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:87:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							547
						]
					},
					"id": 470,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 467,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "105:25:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 469,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 470,
							"sourceUnit": 548,
							"src": "132:49:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 468,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 547,
										"src": "140:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:77:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							547
						]
					},
					"id": 548,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 471,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 472,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 547,
							"linearizedBaseContracts": [
								547
							],
							"name": "IERC20",
							"nameLocation": "215:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 481,
									"name": "Transfer",
									"nameLocation": "397:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "406:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "428:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "448:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:5"
									},
									"src": "391:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 482,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 490,
									"name": "Approval",
									"nameLocation": "628:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "637:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "660:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "685:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:5"
									},
									"src": "622:78:5"
								},
								{
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 496,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:5"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "822:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:5"
									},
									"scope": 547,
									"src": "776:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 504,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "932:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:5"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "972:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:5"
									},
									"scope": 547,
									"src": "913:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 505,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 514,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "1223:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "1235:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:5"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "1268:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 511,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:5"
									},
									"scope": 547,
									"src": "1205:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 515,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 524,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "1568:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "1583:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:5"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "1623:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:5"
									},
									"scope": 547,
									"src": "1549:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 534,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "2327:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "2344:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:5"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "2377:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 531,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:5"
									},
									"scope": 547,
									"src": "2310:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 546,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "2713:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "2727:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "2739:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:5"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "2772:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 543,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:5"
									},
									"scope": 547,
									"src": "2691:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 548,
							"src": "205:2575:5",
							"usedErrors": [],
							"usedEvents": [
								481,
								490
							]
						}
					],
					"src": "106:2675:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							461
						],
						"IERC20": [
							547
						],
						"SafeERC20": [
							1011
						]
					},
					"id": 1012,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 549,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 551,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1012,
							"sourceUnit": 548,
							"src": "141:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 550,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 547,
										"src": "149:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 553,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1012,
							"sourceUnit": 462,
							"src": "179:58:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 552,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 461,
										"src": "187:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 554,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1011,
							"linearizedBaseContracts": [
								1011
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:6",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 559,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "823:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:6"
									},
									"src": "792:46:6"
								},
								{
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:6",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 568,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "959:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "976:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "1002:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:6"
									},
									"src": "920:109:6"
								},
								{
									"body": {
										"id": 591,
										"nodeType": "Block",
										"src": "1291:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 580,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "1321:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$547",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 583,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 572,
																		"src": "1343:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$547",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 514,
																	"src": "1343:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 585,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 574,
																			"src": "1360:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 586,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 576,
																			"src": "1364:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 587,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 581,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$547",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 579,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "1301:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:6"
											}
										]
									},
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "1241:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$547",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 571,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 570,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 547,
														"src": "1241:6:6"
													},
													"referencedDeclaration": 547,
													"src": "1241:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$547",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "1255:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "1267:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:6"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:6"
									},
									"scope": 1011,
									"src": "1219:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 618,
										"nodeType": "Block",
										"src": "1708:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 606,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "1738:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$547",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 609,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 596,
																		"src": "1760:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$547",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 546,
																	"src": "1760:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 611,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 598,
																			"src": "1781:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 612,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 600,
																			"src": "1787:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 613,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 602,
																			"src": "1791:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 614,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 607,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$547",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 605,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "1718:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:6"
											}
										]
									},
									"documentation": {
										"id": 593,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "1644:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$547",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 595,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 594,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 547,
														"src": "1644:6:6"
													},
													"referencedDeclaration": 547,
													"src": "1644:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$547",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "1658:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "1672:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "1684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:6"
									},
									"returnParameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:6"
									},
									"scope": 1011,
									"src": "1618:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "2033:99:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 633,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "2074:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$547",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 636,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 623,
																		"src": "2096:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$547",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 514,
																	"src": "2096:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 638,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 625,
																			"src": "2113:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 639,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 627,
																			"src": "2117:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 640,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 634,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 635,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$547",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 632,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "2050:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 631,
												"id": 643,
												"nodeType": "Return",
												"src": "2043:82:6"
											}
										]
									},
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:6",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "1968:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$547",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 622,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 621,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 547,
														"src": "1968:6:6"
													},
													"referencedDeclaration": 547,
													"src": "1968:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$547",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "1982:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "1994:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:6"
									},
									"returnParameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "2027:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 629,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:6"
									},
									"scope": 1011,
									"src": "1943:189:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "2381:109:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 661,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "2422:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$547",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 664,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 649,
																		"src": "2444:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$547",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 546,
																	"src": "2444:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 666,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 651,
																			"src": "2465:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 667,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 653,
																			"src": "2471:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 668,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 655,
																			"src": "2475:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 669,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 662,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 663,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$547",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 660,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "2398:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 659,
												"id": 672,
												"nodeType": "Return",
												"src": "2391:92:6"
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:6",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "2302:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$547",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 648,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 647,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 547,
														"src": "2302:6:6"
													},
													"referencedDeclaration": 547,
													"src": "2302:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$547",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "2316:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "2330:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "2342:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:6"
									},
									"returnParameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "2375:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 657,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:6"
									},
									"scope": 1011,
									"src": "2273:217:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 704,
										"nodeType": "Block",
										"src": "3232:139:6",
										"statements": [
											{
												"assignments": [
													686
												],
												"declarations": [
													{
														"constant": false,
														"id": 686,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 704,
														"src": "3242:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 685,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 695,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 691,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1011",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1011",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 689,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 693,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 680,
															"src": "3296:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 687,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "3265:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$547",
																"typeString": "contract IERC20"
															}
														},
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 524,
														"src": "3265:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 697,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "3327:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$547",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 698,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 680,
															"src": "3334:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 699,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 686,
																"src": "3343:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 700,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 682,
																"src": "3358:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$547",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 696,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "3314:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:6"
											}
										]
									},
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3177:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$547",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 677,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 676,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 547,
														"src": "3177:6:6"
													},
													"referencedDeclaration": 547,
													"src": "3177:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$547",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3191:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3208:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:6"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:6"
									},
									"scope": 1011,
									"src": "3146:225:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 747,
										"nodeType": "Block",
										"src": "4137:370:6",
										"statements": [
											{
												"id": 746,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:6",
												"statements": [
													{
														"assignments": [
															717
														],
														"declarations": [
															{
																"constant": false,
																"id": 717,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:6",
																"nodeType": "VariableDeclaration",
																"scope": 746,
																"src": "4171:24:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 716,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 726,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 722,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1011",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1011",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 720,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 724,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 711,
																	"src": "4229:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 718,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "4198:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$547",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 524,
																"src": "4198:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 727,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 717,
																"src": "4255:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 728,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 713,
																"src": "4274:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 737,
														"nodeType": "IfStatement",
														"src": "4251:160:6",
														"trueBody": {
															"id": 736,
															"nodeType": "Block",
															"src": "4293:118:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 731,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 711,
																				"src": "4351:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 732,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 717,
																				"src": "4360:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 733,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 713,
																				"src": "4378:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 730,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 568,
																			"src": "4318:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 735,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 739,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "4437:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$547",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 740,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 711,
																	"src": "4444:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 741,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 717,
																		"src": "4453:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 742,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 713,
																		"src": "4472:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$547",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 738,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "4424:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 745,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 748,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "4070:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$547",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 708,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 707,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 547,
														"src": "4070:6:6"
													},
													"referencedDeclaration": 547,
													"src": "4070:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$547",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "4084:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "4101:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:6"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:6"
									},
									"scope": 1011,
									"src": "4039:468:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 794,
										"nodeType": "Block",
										"src": "5161:303:6",
										"statements": [
											{
												"assignments": [
													760
												],
												"declarations": [
													{
														"constant": false,
														"id": 760,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 794,
														"src": "5171:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 759,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 769,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 763,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 752,
																"src": "5214:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$547",
																	"typeString": "contract IERC20"
																}
															},
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:6",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 534,
															"src": "5214:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 765,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "5230:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 766,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 756,
																	"src": "5239:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 767,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 761,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 762,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:6",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:6"
											},
											{
												"condition": {
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 771,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 752,
																"src": "5286:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$547",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 772,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 760,
																"src": "5293:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$547",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 770,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "5262:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 793,
												"nodeType": "IfStatement",
												"src": "5257:201:6",
												"trueBody": {
													"id": 792,
													"nodeType": "Block",
													"src": "5308:150:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 776,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 752,
																		"src": "5342:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$547",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 779,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 752,
																					"src": "5364:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$547",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 780,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 534,
																				"src": "5364:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 781,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 754,
																						"src": "5380:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 782,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 783,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 777,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 778,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:6",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 784,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$547",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 775,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 969,
																	"src": "5322:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 786,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 788,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 752,
																		"src": "5427:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$547",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 789,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 760,
																		"src": "5434:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$547",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 787,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 969,
																	"src": "5407:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 791,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "5106:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$547",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 751,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 750,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 547,
														"src": "5106:6:6"
													},
													"referencedDeclaration": 547,
													"src": "5106:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$547",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "5120:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "5137:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:6"
									},
									"returnParameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:6"
									},
									"scope": 1011,
									"src": "5084:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 837,
										"nodeType": "Block",
										"src": "5911:219:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 808,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "5925:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 810,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 811,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 826,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 822,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 801,
																	"src": "6034:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 823,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "6038:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 824,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 805,
																	"src": "6045:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 820,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 799,
																	"src": "6012:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$461",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:6",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 412,
																"src": "6012:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 835,
													"nodeType": "IfStatement",
													"src": "6007:117:6",
													"trueBody": {
														"id": 834,
														"nodeType": "Block",
														"src": "6052:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 830,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 799,
																					"src": "6106:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$461",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$461",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 829,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 828,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 831,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 827,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 559,
																		"src": "6073:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 833,
																"nodeType": "RevertStatement",
																"src": "6066:47:6"
															}
														]
													}
												},
												"id": 836,
												"nodeType": "IfStatement",
												"src": "5921:203:6",
												"trueBody": {
													"id": 819,
													"nodeType": "Block",
													"src": "5946:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 814,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "5973:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$461",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 815,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 801,
																		"src": "5980:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 816,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 803,
																		"src": "5984:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$461",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 813,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 592,
																	"src": "5960:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 818,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 796,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:6",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "5840:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$461",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 798,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 797,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 461,
														"src": "5840:8:6"
													},
													"referencedDeclaration": 461,
													"src": "5840:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$461",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "5856:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "5868:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "5883:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 804,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:6"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:6"
									},
									"scope": 1011,
									"src": "5808:322:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 884,
										"nodeType": "Block",
										"src": "6649:239:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 853,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 846,
																"src": "6663:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 855,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 856,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 868,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 844,
																	"src": "6786:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 869,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 846,
																	"src": "6792:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 870,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 848,
																	"src": "6796:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 871,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 850,
																	"src": "6803:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 866,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 842,
																	"src": "6760:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$461",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:6",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 438,
																"src": "6760:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 882,
													"nodeType": "IfStatement",
													"src": "6755:127:6",
													"trueBody": {
														"id": 881,
														"nodeType": "Block",
														"src": "6810:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 877,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 842,
																					"src": "6864:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$461",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$461",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 876,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 875,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 878,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 874,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 559,
																		"src": "6831:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 880,
																"nodeType": "RevertStatement",
																"src": "6824:47:6"
															}
														]
													}
												},
												"id": 883,
												"nodeType": "IfStatement",
												"src": "6659:223:6",
												"trueBody": {
													"id": 865,
													"nodeType": "Block",
													"src": "6684:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 859,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 842,
																		"src": "6715:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$461",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 860,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 844,
																		"src": "6722:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 861,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 846,
																		"src": "6728:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 862,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 848,
																		"src": "6732:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$461",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 858,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 619,
																	"src": "6698:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 864,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 839,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:6",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "6527:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$461",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 841,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 840,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 461,
														"src": "6527:8:6"
													},
													"referencedDeclaration": 461,
													"src": "6527:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$461",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "6551:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "6573:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "6593:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "6616:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 849,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:6"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:6"
									},
									"scope": 1011,
									"src": "6482:406:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 927,
										"nodeType": "Block",
										"src": "7655:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 898,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 891,
																"src": "7669:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 900,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 901,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 916,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 912,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 891,
																	"src": "7777:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 913,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 893,
																	"src": "7781:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 914,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 895,
																	"src": "7788:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 910,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 889,
																	"src": "7756:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$461",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:6",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 460,
																"src": "7756:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 925,
													"nodeType": "IfStatement",
													"src": "7751:116:6",
													"trueBody": {
														"id": 924,
														"nodeType": "Block",
														"src": "7795:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 920,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 889,
																					"src": "7849:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$461",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$461",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 919,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 918,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 921,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 917,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 559,
																		"src": "7816:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 923,
																"nodeType": "RevertStatement",
																"src": "7809:47:6"
															}
														]
													}
												},
												"id": 926,
												"nodeType": "IfStatement",
												"src": "7665:202:6",
												"trueBody": {
													"id": 909,
													"nodeType": "Block",
													"src": "7690:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 904,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 889,
																		"src": "7717:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$461",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 905,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 891,
																		"src": "7724:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 906,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 893,
																		"src": "7728:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$461",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 903,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 795,
																	"src": "7704:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 908,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:6",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 928,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "7584:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$461",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 888,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 887,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 461,
														"src": "7584:8:6"
													},
													"referencedDeclaration": 461,
													"src": "7584:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$461",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "7600:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "7612:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "7627:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 894,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:6"
									},
									"returnParameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:6"
									},
									"scope": 1011,
									"src": "7553:320:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 968,
										"nodeType": "Block",
										"src": "8440:650:6",
										"statements": [
											{
												"assignments": [
													938
												],
												"declarations": [
													{
														"constant": false,
														"id": 938,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 968,
														"src": "8450:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 937,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 939,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:6"
											},
											{
												"assignments": [
													941
												],
												"declarations": [
													{
														"constant": false,
														"id": 941,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 968,
														"src": "8478:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 940,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 942,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:6"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:6",
													"nodeType": "YulBlock",
													"src": "8532:396:6",
													"statements": [
														{
															"nativeSrc": "8546:75:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:6"
																		},
																		"nativeSrc": "8566:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:6",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:6"
																		},
																		"nativeSrc": "8583:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:6"
																		},
																		"nativeSrc": "8600:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:6"
																},
																"nativeSrc": "8561:60:6",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:6"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:6",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:6",
																"nodeType": "YulBlock",
																"src": "8682:157:6",
																"statements": [
																	{
																		"nativeSrc": "8700:22:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:6",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:6",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:6"
																			},
																			"nativeSrc": "8711:11:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:6"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:6",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:6"
																					},
																					"nativeSrc": "8762:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:6"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:6",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:6"
																			},
																			"nativeSrc": "8739:40:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:6"
																		},
																		"nativeSrc": "8739:40:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:6"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:6"
																					},
																					"nativeSrc": "8808:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:6"
																			},
																			"nativeSrc": "8796:29:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:6"
																		},
																		"nativeSrc": "8796:29:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:6"
																},
																"nativeSrc": "8666:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:6"
															},
															"nativeSrc": "8663:176:6",
															"nodeType": "YulIf",
															"src": "8663:176:6"
														},
														{
															"nativeSrc": "8852:30:6",
															"nodeType": "YulAssignment",
															"src": "8852:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:6"
																},
																"nativeSrc": "8866:16:6",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:6"
																}
															]
														},
														{
															"nativeSrc": "8895:23:6",
															"nodeType": "YulAssignment",
															"src": "8895:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:6"
																},
																"nativeSrc": "8910:8:6",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 934,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:6",
														"valueSize": 1
													},
													{
														"declaration": 934,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:6",
														"valueSize": 1
													},
													{
														"declaration": 938,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:6",
														"valueSize": 1
													},
													{
														"declaration": 941,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:6",
														"valueSize": 1
													},
													{
														"declaration": 932,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 943,
												"nodeType": "InlineAssembly",
												"src": "8507:421:6"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 946,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 944,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "8942:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 957,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 955,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "8994:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:6",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 949,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 932,
																			"src": "8968:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$547",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$547",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 947,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:6",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 967,
												"nodeType": "IfStatement",
												"src": "8938:146:6",
												"trueBody": {
													"id": 966,
													"nodeType": "Block",
													"src": "9012:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 962,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 932,
																				"src": "9066:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$547",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$547",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 961,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 960,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 959,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 559,
																	"src": "9033:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 965,
															"nodeType": "RevertStatement",
															"src": "9026:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 929,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "8399:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$547",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 931,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 930,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 547,
														"src": "8399:6:6"
													},
													"referencedDeclaration": 547,
													"src": "8399:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$547",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "8413:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 933,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:6"
									},
									"returnParameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:6"
									},
									"scope": 1011,
									"src": "8370:720:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1009,
										"nodeType": "Block",
										"src": "9681:391:6",
										"statements": [
											{
												"assignments": [
													981
												],
												"declarations": [
													{
														"constant": false,
														"id": 981,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1009,
														"src": "9691:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 980,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 982,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:6"
											},
											{
												"assignments": [
													984
												],
												"declarations": [
													{
														"constant": false,
														"id": 984,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1009,
														"src": "9713:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 983,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 985,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:6"
											},
											{
												"assignments": [
													987
												],
												"declarations": [
													{
														"constant": false,
														"id": 987,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1009,
														"src": "9741:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 986,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 988,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:6"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:6",
													"nodeType": "YulBlock",
													"src": "9795:174:6",
													"statements": [
														{
															"nativeSrc": "9809:71:6",
															"nodeType": "YulAssignment",
															"src": "9809:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:6"
																		},
																		"nativeSrc": "9825:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:6",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:6"
																		},
																		"nativeSrc": "9842:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:6"
																		},
																		"nativeSrc": "9859:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:6"
																},
																"nativeSrc": "9820:60:6",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:6"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:6"
																}
															]
														},
														{
															"nativeSrc": "9893:30:6",
															"nodeType": "YulAssignment",
															"src": "9893:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:6"
																},
																"nativeSrc": "9907:16:6",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:6"
																}
															]
														},
														{
															"nativeSrc": "9936:23:6",
															"nodeType": "YulAssignment",
															"src": "9936:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:6"
																},
																"nativeSrc": "9951:8:6",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 975,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:6",
														"valueSize": 1
													},
													{
														"declaration": 975,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:6",
														"valueSize": 1
													},
													{
														"declaration": 984,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:6",
														"valueSize": 1
													},
													{
														"declaration": 987,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:6",
														"valueSize": 1
													},
													{
														"declaration": 981,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:6",
														"valueSize": 1
													},
													{
														"declaration": 973,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 989,
												"nodeType": "InlineAssembly",
												"src": "9770:199:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 990,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 981,
														"src": "9985:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 991,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 984,
																		"src": "9997:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 992,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1004,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1002,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 987,
																		"src": "10048:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:6",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 996,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 973,
																						"src": "10023:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$547",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$547",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 995,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 994,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 997,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 998,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1000,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1006,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 979,
												"id": 1008,
												"nodeType": "Return",
												"src": "9978:87:6"
											}
										]
									},
									"documentation": {
										"id": 970,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 1010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "9625:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$547",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 972,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 971,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 547,
														"src": "9625:6:6"
													},
													"referencedDeclaration": 547,
													"src": "9625:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$547",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "9639:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 974,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:6"
									},
									"returnParameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "9675:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 977,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:6"
									},
									"scope": 1011,
									"src": "9592:480:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1012,
							"src": "698:9376:6",
							"usedErrors": [
								559,
								568
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1041
						]
					},
					"id": 1042,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1013,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1014,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1041,
							"linearizedBaseContracts": [
								1041
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1022,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1019,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1018,
												"id": 1021,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1041,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1028,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1027,
												"id": 1030,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1025,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1041,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1039,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1036,
												"id": 1038,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1041,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1042,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1065
						],
						"IERC165": [
							1077
						]
					},
					"id": 1066,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1043,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1045,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1066,
							"sourceUnit": 1078,
							"src": "140:38:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1044,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1077,
										"src": "148:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1047,
										"name": "IERC165",
										"nameLocations": [
											"688:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1077,
										"src": "688:7:8"
									},
									"id": 1048,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:8"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1046,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1065,
							"linearizedBaseContracts": [
								1065,
								1077
							],
							"name": "ERC165",
							"nameLocation": "678:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1076
									],
									"body": {
										"id": 1063,
										"nodeType": "Block",
										"src": "812:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1056,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "829:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1058,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1077,
																	"src": "849:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1077_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1077_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1057,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "844:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "844:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1077",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1060,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "858:11:8",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "844:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "829:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1055,
												"id": 1062,
												"nodeType": "Return",
												"src": "822:47:8"
											}
										]
									},
									"documentation": {
										"id": 1049,
										"nodeType": "StructuredDocumentation",
										"src": "702:23:8",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 1064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "739:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "764:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "757:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1050,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "757:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:20:8"
									},
									"returnParameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "806:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1053,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "806:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "805:6:8"
									},
									"scope": 1065,
									"src": "730:146:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1066,
							"src": "660:218:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:765:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1077
						]
					},
					"id": 1078,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1067,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1068,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:9",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1077,
							"linearizedBaseContracts": [
								1077
							],
							"name": "IERC165",
							"nameLocation": "433:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1069,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1076,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "819:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1070,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:9"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "862:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1073,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:9"
									},
									"scope": 1077,
									"src": "792:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1078,
							"src": "423:447:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:9"
				},
				"id": 9
			},
			"contracts/game.sol": {
				"ast": {
					"absolutePath": "contracts/game.sol",
					"exportedSymbols": {
						"AccessControl": [
							296
						],
						"Context": [
							1041
						],
						"ERC165": [
							1065
						],
						"GameLogic": [
							1554
						],
						"IAccessControl": [
							379
						],
						"IERC1363": [
							461
						],
						"IERC165": [
							1077
						],
						"IERC20": [
							547
						],
						"SafeERC20": [
							1011
						]
					},
					"id": 1555,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1079,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1080,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1555,
							"sourceUnit": 548,
							"src": "58:56:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1081,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1555,
							"sourceUnit": 1012,
							"src": "115:65:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1082,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1555,
							"sourceUnit": 297,
							"src": "181:58:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1083,
										"name": "AccessControl",
										"nameLocations": [
											"263:13:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "263:13:10"
									},
									"id": 1084,
									"nodeType": "InheritanceSpecifier",
									"src": "263:13:10"
								}
							],
							"canonicalName": "GameLogic",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1554,
							"linearizedBaseContracts": [
								1554,
								296,
								1065,
								1077,
								379,
								1041
							],
							"name": "GameLogic",
							"nameLocation": "250:9:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1088,
									"libraryName": {
										"id": 1085,
										"name": "SafeERC20",
										"nameLocations": [
											"289:9:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1011,
										"src": "289:9:10"
									},
									"nodeType": "UsingForDirective",
									"src": "283:27:10",
									"typeName": {
										"id": 1087,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1086,
											"name": "IERC20",
											"nameLocations": [
												"303:6:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 547,
											"src": "303:6:10"
										},
										"referencedDeclaration": 547,
										"src": "303:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$547",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "c3dfdae6",
									"id": 1091,
									"mutability": "mutable",
									"name": "gameToken",
									"nameLocation": "330:9:10",
									"nodeType": "VariableDeclaration",
									"scope": 1554,
									"src": "316:23:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$547",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1090,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1089,
											"name": "IERC20",
											"nameLocations": [
												"316:6:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 547,
											"src": "316:6:10"
										},
										"referencedDeclaration": 547,
										"src": "316:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$547",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ba3f5a12",
									"id": 1094,
									"mutability": "mutable",
									"name": "tokenMultiplier",
									"nameLocation": "401:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 1554,
									"src": "386:34:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1092,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "386:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1093,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "419:1:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "d12af19a",
									"id": 1101,
									"mutability": "constant",
									"name": "REPAIR_COST",
									"nameLocation": "490:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1554,
									"src": "466:52:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1095,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "466:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_100000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000"
										},
										"id": 1100,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "313030",
											"id": 1096,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "504:3:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100_by_1",
												"typeString": "int_const 100"
											},
											"value": "100"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1099,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1097,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "510:2:10",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1098,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "516:2:10",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "510:8:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "504:14:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "75b238fc",
									"id": 1106,
									"mutability": "constant",
									"name": "ADMIN_ROLE",
									"nameLocation": "596:10:10",
									"nodeType": "VariableDeclaration",
									"scope": 1554,
									"src": "572:60:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1102,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "572:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41444d494e5f524f4c45",
												"id": 1104,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "619:12:10",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												},
												"value": "ADMIN_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												}
											],
											"id": 1103,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "609:9:10",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1105,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "609:23:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "GameLogic.Player",
									"id": 1111,
									"members": [
										{
											"constant": false,
											"id": 1108,
											"mutability": "mutable",
											"name": "score",
											"nameLocation": "671:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1111,
											"src": "663:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1107,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "663:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1110,
											"mutability": "mutable",
											"name": "lastSubmissionTimestamp",
											"nameLocation": "694:23:10",
											"nodeType": "VariableDeclaration",
											"scope": 1111,
											"src": "686:31:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1109,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "686:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Player",
									"nameLocation": "646:6:10",
									"nodeType": "StructDefinition",
									"scope": 1554,
									"src": "639:85:10",
									"visibility": "public"
								},
								{
									"canonicalName": "GameLogic.LeaderboardEntry",
									"id": 1116,
									"members": [
										{
											"constant": false,
											"id": 1113,
											"mutability": "mutable",
											"name": "player",
											"nameLocation": "772:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 1116,
											"src": "764:14:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1112,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "764:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1115,
											"mutability": "mutable",
											"name": "score",
											"nameLocation": "796:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1116,
											"src": "788:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1114,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "788:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "LeaderboardEntry",
									"nameLocation": "737:16:10",
									"nodeType": "StructDefinition",
									"scope": 1554,
									"src": "730:78:10",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e2eb41ff",
									"id": 1121,
									"mutability": "mutable",
									"name": "players",
									"nameLocation": "848:7:10",
									"nodeType": "VariableDeclaration",
									"scope": 1554,
									"src": "814:41:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$1111_storage_$",
										"typeString": "mapping(address => struct GameLogic.Player)"
									},
									"typeName": {
										"id": 1120,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1117,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "822:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "814:26:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$1111_storage_$",
											"typeString": "mapping(address => struct GameLogic.Player)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1119,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1118,
												"name": "Player",
												"nameLocations": [
													"833:6:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1111,
												"src": "833:6:10"
											},
											"referencedDeclaration": 1111,
											"src": "833:6:10",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Player_$1111_storage_ptr",
												"typeString": "struct GameLogic.Player"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "15c6aee2",
									"id": 1124,
									"mutability": "mutable",
									"name": "playerAddresses",
									"nameLocation": "893:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 1554,
									"src": "876:32:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1122,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "876:7:10",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1123,
										"nodeType": "ArrayTypeName",
										"src": "876:9:10",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "b7f20d0949b6a8bc59d005af4a52f7ff5d0cfcde9056fa556adb0e4b24dcb6d2",
									"id": 1132,
									"name": "ScoreSubmitted",
									"nameLocation": "996:14:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"indexed": true,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "1027:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "1011:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1128,
												"indexed": false,
												"mutability": "mutable",
												"name": "score",
												"nameLocation": "1043:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "1035:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1130,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokensEarned",
												"nameLocation": "1058:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "1050:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1050:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:61:10"
									},
									"src": "990:82:10"
								},
								{
									"anonymous": false,
									"eventSelector": "e6b19b2c6617851a0f4c49df91138e172046ffa3fc94114d4a7294d0e4362dd6",
									"id": 1136,
									"name": "FormulaUpdated",
									"nameLocation": "1083:14:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"indexed": false,
												"mutability": "mutable",
												"name": "newMultiplier",
												"nameLocation": "1106:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "1098:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1098:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1097:23:10"
									},
									"src": "1077:44:10"
								},
								{
									"anonymous": false,
									"eventSelector": "769873612369de25d7a32b1071976767e3071b8182b9353e1cd5d6cf25b33dca",
									"id": 1142,
									"name": "VehicleRepaired",
									"nameLocation": "1132:15:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"indexed": true,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "1164:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "1148:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1148:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"indexed": false,
												"mutability": "mutable",
												"name": "component",
												"nameLocation": "1179:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "1172:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1139,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1172:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1147:42:10"
									},
									"src": "1126:64:10"
								},
								{
									"anonymous": false,
									"eventSelector": "f2ae205522024c14e5a7a26ba6d1fb1252dc8e161b5abc79ed5795fd3c5b9261",
									"id": 1146,
									"name": "PlayerAdded",
									"nameLocation": "1201:11:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"indexed": true,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "1229:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "1213:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1213:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1212:24:10"
									},
									"src": "1195:42:10"
								},
								{
									"body": {
										"id": 1169,
										"nodeType": "Block",
										"src": "1278:191:10",
										"statements": [
											{
												"expression": {
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1151,
														"name": "gameToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1091,
														"src": "1288:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$547",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1153,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1148,
																"src": "1307:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1152,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "1300:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$547_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1154,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1300:21:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$547",
															"typeString": "contract IERC20"
														}
													},
													"src": "1288:33:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$547",
														"typeString": "contract IERC20"
													}
												},
												"id": 1156,
												"nodeType": "ExpressionStatement",
												"src": "1288:33:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1158,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "1387:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1159,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1407:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1411:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1407:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1157,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "1376:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1376:42:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1162,
												"nodeType": "ExpressionStatement",
												"src": "1376:42:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1164,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "1439:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1165,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1451:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1455:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1451:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1163,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "1428:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1428:34:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1168,
												"nodeType": "ExpressionStatement",
												"src": "1428:34:10"
											}
										]
									},
									"id": 1170,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "1263:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "1255:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1254:23:10"
									},
									"returnParameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1278:0:10"
									},
									"scope": 1554,
									"src": "1243:226:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1260,
										"nodeType": "Block",
										"src": "1602:728:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1181,
																"name": "player",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1172,
																"src": "1620:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1638:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1630:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1182,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1630:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1630:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1620:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420706c617965722061646472657373",
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1642:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_89d1227f4ad2981902a8cceca87767b4412485e5f09406e0c7532110c6c96e36",
																"typeString": "literal_string \"Invalid player address\""
															},
															"value": "Invalid player address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_89d1227f4ad2981902a8cceca87767b4412485e5f09406e0c7532110c6c96e36",
																"typeString": "literal_string \"Invalid player address\""
															}
														],
														"id": 1180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1612:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1612:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1189,
												"nodeType": "ExpressionStatement",
												"src": "1612:55:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1191,
																"name": "score",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1174,
																"src": "1685:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1693:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1685:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53636f7265206d7573742062652067726561746572207468616e207a65726f",
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1696:33:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_398ada248aa1fe4fb1217cf136e95109d6d0cf282d97dd6caac95b709fec5ccc",
																"typeString": "literal_string \"Score must be greater than zero\""
															},
															"value": "Score must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_398ada248aa1fe4fb1217cf136e95109d6d0cf282d97dd6caac95b709fec5ccc",
																"typeString": "literal_string \"Score must be greater than zero\""
															}
														],
														"id": 1190,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1677:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1677:53:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1196,
												"nodeType": "ExpressionStatement",
												"src": "1677:53:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1197,
																	"name": "players",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1121,
																	"src": "1789:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$1111_storage_$",
																		"typeString": "mapping(address => struct GameLogic.Player storage ref)"
																	}
																},
																"id": 1199,
																"indexExpression": {
																	"id": 1198,
																	"name": "player",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1172,
																	"src": "1797:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1789:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Player_$1111_storage",
																	"typeString": "struct GameLogic.Player storage ref"
																}
															},
															"id": 1200,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1805:5:10",
															"memberName": "score",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1108,
															"src": "1789:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1814:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1789:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1203,
																	"name": "players",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1121,
																	"src": "1819:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$1111_storage_$",
																		"typeString": "mapping(address => struct GameLogic.Player storage ref)"
																	}
																},
																"id": 1205,
																"indexExpression": {
																	"id": 1204,
																	"name": "player",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1172,
																	"src": "1827:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1819:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Player_$1111_storage",
																	"typeString": "struct GameLogic.Player storage ref"
																}
															},
															"id": 1206,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1835:23:10",
															"memberName": "lastSubmissionTimestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1110,
															"src": "1819:39:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1862:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1819:44:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1789:74:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1221,
												"nodeType": "IfStatement",
												"src": "1785:171:10",
												"trueBody": {
													"id": 1220,
													"nodeType": "Block",
													"src": "1865:91:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1213,
																		"name": "player",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1172,
																		"src": "1900:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1210,
																		"name": "playerAddresses",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1124,
																		"src": "1879:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1895:4:10",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "1879:20:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer,address)"
																	}
																},
																"id": 1214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1879:28:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1215,
															"nodeType": "ExpressionStatement",
															"src": "1879:28:10"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1217,
																		"name": "player",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1172,
																		"src": "1938:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1216,
																	"name": "PlayerAdded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1146,
																	"src": "1926:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1926:19:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1219,
															"nodeType": "EmitStatement",
															"src": "1921:24:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1222,
																"name": "players",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1121,
																"src": "1966:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$1111_storage_$",
																	"typeString": "mapping(address => struct GameLogic.Player storage ref)"
																}
															},
															"id": 1224,
															"indexExpression": {
																"id": 1223,
																"name": "player",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1172,
																"src": "1974:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1966:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Player_$1111_storage",
																"typeString": "struct GameLogic.Player storage ref"
															}
														},
														"id": 1225,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1982:5:10",
														"memberName": "score",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1108,
														"src": "1966:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1226,
														"name": "score",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "1991:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1966:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1228,
												"nodeType": "ExpressionStatement",
												"src": "1966:30:10"
											},
											{
												"expression": {
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1229,
																"name": "players",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1121,
																"src": "2006:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$1111_storage_$",
																	"typeString": "mapping(address => struct GameLogic.Player storage ref)"
																}
															},
															"id": 1231,
															"indexExpression": {
																"id": 1230,
																"name": "player",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1172,
																"src": "2014:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2006:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Player_$1111_storage",
																"typeString": "struct GameLogic.Player storage ref"
															}
														},
														"id": 1232,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2022:23:10",
														"memberName": "lastSubmissionTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1110,
														"src": "2006:39:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1233,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2048:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2054:9:10",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2048:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2006:57:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1236,
												"nodeType": "ExpressionStatement",
												"src": "2006:57:10"
											},
											{
												"assignments": [
													1238
												],
												"declarations": [
													{
														"constant": false,
														"id": 1238,
														"mutability": "mutable",
														"name": "tokensToMint",
														"nameLocation": "2161:12:10",
														"nodeType": "VariableDeclaration",
														"scope": 1260,
														"src": "2153:20:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1237,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2153:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1246,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1241,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1239,
															"name": "score",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1174,
															"src": "2176:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1240,
															"name": "tokenMultiplier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "2184:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2176:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"id": 1244,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2202:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "3138",
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2208:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															},
															"value": "18"
														},
														"src": "2202:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														}
													},
													"src": "2176:34:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2153:57:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1250,
															"name": "player",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "2243:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1251,
															"name": "tokensToMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "2251:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1247,
															"name": "gameToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "2220:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$547",
																"typeString": "contract IERC20"
															}
														},
														"id": 1249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2230:12:10",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 592,
														"src": "2220:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$547_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2220:44:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1253,
												"nodeType": "ExpressionStatement",
												"src": "2220:44:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1255,
															"name": "player",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "2295:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1256,
															"name": "score",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1174,
															"src": "2303:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1257,
															"name": "tokensToMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "2310:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1254,
														"name": "ScoreSubmitted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "2280:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2280:43:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1259,
												"nodeType": "EmitStatement",
												"src": "2275:48:10"
											}
										]
									},
									"functionSelector": "1db544c0",
									"id": 1261,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1177,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1106,
													"src": "1590:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1178,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1176,
												"name": "onlyRole",
												"nameLocations": [
													"1581:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "1581:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1581:20:10"
										}
									],
									"name": "submitScore",
									"nameLocation": "1529:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "1549:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "1541:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1541:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "score",
												"nameLocation": "1565:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "1557:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1540:31:10"
									},
									"returnParameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:10"
									},
									"scope": 1554,
									"src": "1520:810:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1273,
										"nodeType": "Block",
										"src": "2437:45:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1268,
															"name": "players",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "2454:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$1111_storage_$",
																"typeString": "mapping(address => struct GameLogic.Player storage ref)"
															}
														},
														"id": 1270,
														"indexExpression": {
															"id": 1269,
															"name": "wallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "2462:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2454:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Player_$1111_storage",
															"typeString": "struct GameLogic.Player storage ref"
														}
													},
													"id": 1271,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2470:5:10",
													"memberName": "score",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1108,
													"src": "2454:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1267,
												"id": 1272,
												"nodeType": "Return",
												"src": "2447:28:10"
											}
										]
									},
									"functionSelector": "d47875d0",
									"id": 1274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getScore",
									"nameLocation": "2380:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "wallet",
												"nameLocation": "2397:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "2389:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2389:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2388:16:10"
									},
									"returnParameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "2428:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2428:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2427:9:10"
									},
									"scope": 1554,
									"src": "2371:111:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1461,
										"nodeType": "Block",
										"src": "2626:1292:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1286,
																"name": "offset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1276,
																"src": "2644:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 1287,
																	"name": "playerAddresses",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1124,
																	"src": "2653:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 1288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2669:6:10",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2653:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2644:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6666736574206f7574206f6620626f756e6473",
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2677:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bd7762eaf702b467ee1c1a0b6ba487d7210427f0d0614f20734e4fa41b5fb777",
																"typeString": "literal_string \"Offset out of bounds\""
															},
															"value": "Offset out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bd7762eaf702b467ee1c1a0b6ba487d7210427f0d0614f20734e4fa41b5fb777",
																"typeString": "literal_string \"Offset out of bounds\""
															}
														],
														"id": 1285,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2636:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2636:64:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1292,
												"nodeType": "ExpressionStatement",
												"src": "2636:64:10"
											},
											{
												"assignments": [
													1294
												],
												"declarations": [
													{
														"constant": false,
														"id": 1294,
														"mutability": "mutable",
														"name": "maxLength",
														"nameLocation": "2718:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 1461,
														"src": "2710:17:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1293,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2710:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1299,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1295,
															"name": "playerAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "2730:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2746:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2730:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1297,
														"name": "offset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1276,
														"src": "2755:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2730:31:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2710:51:10"
											},
											{
												"assignments": [
													1301
												],
												"declarations": [
													{
														"constant": false,
														"id": 1301,
														"mutability": "mutable",
														"name": "actualLength",
														"nameLocation": "2779:12:10",
														"nodeType": "VariableDeclaration",
														"scope": 1461,
														"src": "2771:20:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1300,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2771:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1308,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1302,
															"name": "limit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "2794:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1303,
															"name": "maxLength",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1294,
															"src": "2802:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2794:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1306,
														"name": "limit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1278,
														"src": "2826:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2794:37:10",
													"trueExpression": {
														"id": 1305,
														"name": "maxLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "2814:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2771:60:10"
											},
											{
												"assignments": [
													1313
												],
												"declarations": [
													{
														"constant": false,
														"id": 1313,
														"mutability": "mutable",
														"name": "leaderboard",
														"nameLocation": "2867:11:10",
														"nodeType": "VariableDeclaration",
														"scope": 1461,
														"src": "2841:37:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct GameLogic.LeaderboardEntry[]"
														},
														"typeName": {
															"baseType": {
																"id": 1311,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1310,
																	"name": "LeaderboardEntry",
																	"nameLocations": [
																		"2841:16:10"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1116,
																	"src": "2841:16:10"
																},
																"referencedDeclaration": 1116,
																"src": "2841:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LeaderboardEntry_$1116_storage_ptr",
																	"typeString": "struct GameLogic.LeaderboardEntry"
																}
															},
															"id": 1312,
															"nodeType": "ArrayTypeName",
															"src": "2841:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_LeaderboardEntry_$1116_storage_$dyn_storage_ptr",
																"typeString": "struct GameLogic.LeaderboardEntry[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1320,
												"initialValue": {
													"arguments": [
														{
															"id": 1318,
															"name": "actualLength",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "2904:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1317,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2881:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct GameLogic.LeaderboardEntry memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1315,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1314,
																	"name": "LeaderboardEntry",
																	"nameLocations": [
																		"2885:16:10"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1116,
																	"src": "2885:16:10"
																},
																"referencedDeclaration": 1116,
																"src": "2885:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LeaderboardEntry_$1116_storage_ptr",
																	"typeString": "struct GameLogic.LeaderboardEntry"
																}
															},
															"id": 1316,
															"nodeType": "ArrayTypeName",
															"src": "2885:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_LeaderboardEntry_$1116_storage_$dyn_storage_ptr",
																"typeString": "struct GameLogic.LeaderboardEntry[]"
															}
														}
													},
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2881:36:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct GameLogic.LeaderboardEntry memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2841:76:10"
											},
											{
												"assignments": [
													1325
												],
												"declarations": [
													{
														"constant": false,
														"id": 1325,
														"mutability": "mutable",
														"name": "entries",
														"nameLocation": "3002:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1461,
														"src": "2976:33:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct GameLogic.LeaderboardEntry[]"
														},
														"typeName": {
															"baseType": {
																"id": 1323,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1322,
																	"name": "LeaderboardEntry",
																	"nameLocations": [
																		"2976:16:10"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1116,
																	"src": "2976:16:10"
																},
																"referencedDeclaration": 1116,
																"src": "2976:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LeaderboardEntry_$1116_storage_ptr",
																	"typeString": "struct GameLogic.LeaderboardEntry"
																}
															},
															"id": 1324,
															"nodeType": "ArrayTypeName",
															"src": "2976:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_LeaderboardEntry_$1116_storage_$dyn_storage_ptr",
																"typeString": "struct GameLogic.LeaderboardEntry[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1333,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1330,
																"name": "playerAddresses",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1124,
																"src": "3035:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_storage",
																	"typeString": "address[] storage ref"
																}
															},
															"id": 1331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3051:6:10",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3035:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1329,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3012:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct GameLogic.LeaderboardEntry memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1327,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1326,
																	"name": "LeaderboardEntry",
																	"nameLocations": [
																		"3016:16:10"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1116,
																	"src": "3016:16:10"
																},
																"referencedDeclaration": 1116,
																"src": "3016:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LeaderboardEntry_$1116_storage_ptr",
																	"typeString": "struct GameLogic.LeaderboardEntry"
																}
															},
															"id": 1328,
															"nodeType": "ArrayTypeName",
															"src": "3016:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_LeaderboardEntry_$1116_storage_$dyn_storage_ptr",
																"typeString": "struct GameLogic.LeaderboardEntry[]"
															}
														}
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3012:46:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct GameLogic.LeaderboardEntry memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2976:82:10"
											},
											{
												"body": {
													"id": 1361,
													"nodeType": "Block",
													"src": "3121:109:10",
													"statements": [
														{
															"expression": {
																"id": 1359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1345,
																		"name": "entries",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1325,
																		"src": "3135:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct GameLogic.LeaderboardEntry memory[] memory"
																		}
																	},
																	"id": 1347,
																	"indexExpression": {
																		"id": 1346,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1335,
																		"src": "3143:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3135:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_LeaderboardEntry_$1116_memory_ptr",
																		"typeString": "struct GameLogic.LeaderboardEntry memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 1349,
																				"name": "playerAddresses",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1124,
																				"src": "3165:15:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 1351,
																			"indexExpression": {
																				"id": 1350,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1335,
																				"src": "3181:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3165:18:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"expression": {
																				"baseExpression": {
																					"id": 1352,
																					"name": "players",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1121,
																					"src": "3185:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$1111_storage_$",
																						"typeString": "mapping(address => struct GameLogic.Player storage ref)"
																					}
																				},
																				"id": 1356,
																				"indexExpression": {
																					"baseExpression": {
																						"id": 1353,
																						"name": "playerAddresses",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1124,
																						"src": "3193:15:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_storage",
																							"typeString": "address[] storage ref"
																						}
																					},
																					"id": 1355,
																					"indexExpression": {
																						"id": 1354,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1335,
																						"src": "3209:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3193:18:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3185:27:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Player_$1111_storage",
																					"typeString": "struct GameLogic.Player storage ref"
																				}
																			},
																			"id": 1357,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3213:5:10",
																			"memberName": "score",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1108,
																			"src": "3185:33:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1348,
																		"name": "LeaderboardEntry",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1116,
																		"src": "3148:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_LeaderboardEntry_$1116_storage_ptr_$",
																			"typeString": "type(struct GameLogic.LeaderboardEntry storage pointer)"
																		}
																	},
																	"id": 1358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3148:71:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_LeaderboardEntry_$1116_memory_ptr",
																		"typeString": "struct GameLogic.LeaderboardEntry memory"
																	}
																},
																"src": "3135:84:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LeaderboardEntry_$1116_memory_ptr",
																	"typeString": "struct GameLogic.LeaderboardEntry memory"
																}
															},
															"id": 1360,
															"nodeType": "ExpressionStatement",
															"src": "3135:84:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1338,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1335,
														"src": "3088:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1339,
															"name": "playerAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "3092:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1340,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3108:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3092:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3088:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1362,
												"initializationExpression": {
													"assignments": [
														1335
													],
													"declarations": [
														{
															"constant": false,
															"id": 1335,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3081:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 1362,
															"src": "3073:9:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1334,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3073:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1337,
													"initialValue": {
														"hexValue": "30",
														"id": 1336,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3085:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3073:13:10"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3116:3:10",
														"subExpression": {
															"id": 1342,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "3116:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1344,
													"nodeType": "ExpressionStatement",
													"src": "3116:3:10"
												},
												"nodeType": "ForStatement",
												"src": "3068:162:10"
											},
											{
												"body": {
													"id": 1435,
													"nodeType": "Block",
													"src": "3355:370:10",
													"statements": [
														{
															"assignments": [
																1381
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1381,
																	"mutability": "mutable",
																	"name": "maxIndex",
																	"nameLocation": "3377:8:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1435,
																	"src": "3369:16:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1380,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3369:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1383,
															"initialValue": {
																"id": 1382,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1364,
																"src": "3388:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3369:20:10"
														},
														{
															"body": {
																"id": 1412,
																"nodeType": "Block",
																"src": "3452:133:10",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1405,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 1397,
																						"name": "entries",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1325,
																						"src": "3474:7:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr",
																							"typeString": "struct GameLogic.LeaderboardEntry memory[] memory"
																						}
																					},
																					"id": 1399,
																					"indexExpression": {
																						"id": 1398,
																						"name": "j",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1385,
																						"src": "3482:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3474:10:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_LeaderboardEntry_$1116_memory_ptr",
																						"typeString": "struct GameLogic.LeaderboardEntry memory"
																					}
																				},
																				"id": 1400,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3485:5:10",
																				"memberName": "score",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1115,
																				"src": "3474:16:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 1401,
																						"name": "entries",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1325,
																						"src": "3493:7:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr",
																							"typeString": "struct GameLogic.LeaderboardEntry memory[] memory"
																						}
																					},
																					"id": 1403,
																					"indexExpression": {
																						"id": 1402,
																						"name": "maxIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1381,
																						"src": "3501:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3493:17:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_LeaderboardEntry_$1116_memory_ptr",
																						"typeString": "struct GameLogic.LeaderboardEntry memory"
																					}
																				},
																				"id": 1404,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3511:5:10",
																				"memberName": "score",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1115,
																				"src": "3493:23:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3474:42:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1411,
																		"nodeType": "IfStatement",
																		"src": "3470:101:10",
																		"trueBody": {
																			"id": 1410,
																			"nodeType": "Block",
																			"src": "3518:53:10",
																			"statements": [
																				{
																					"expression": {
																						"id": 1408,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 1406,
																							"name": "maxIndex",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1381,
																							"src": "3540:8:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"id": 1407,
																							"name": "j",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1385,
																							"src": "3551:1:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3540:12:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1409,
																					"nodeType": "ExpressionStatement",
																					"src": "3540:12:10"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1393,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1390,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "3427:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1391,
																		"name": "entries",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1325,
																		"src": "3431:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct GameLogic.LeaderboardEntry memory[] memory"
																		}
																	},
																	"id": 1392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3439:6:10",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3431:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3427:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1413,
															"initializationExpression": {
																"assignments": [
																	1385
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1385,
																		"mutability": "mutable",
																		"name": "j",
																		"nameLocation": "3416:1:10",
																		"nodeType": "VariableDeclaration",
																		"scope": 1413,
																		"src": "3408:9:10",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1384,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "3408:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1389,
																"initialValue": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1386,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1364,
																		"src": "3420:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3424:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "3420:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "3408:17:10"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 1395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "3447:3:10",
																	"subExpression": {
																		"id": 1394,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1385,
																		"src": "3447:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1396,
																"nodeType": "ExpressionStatement",
																"src": "3447:3:10"
															},
															"nodeType": "ForStatement",
															"src": "3403:182:10"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1414,
																	"name": "maxIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1381,
																	"src": "3602:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 1415,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1364,
																	"src": "3614:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3602:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1434,
															"nodeType": "IfStatement",
															"src": "3598:117:10",
															"trueBody": {
																"id": 1433,
																"nodeType": "Block",
																"src": "3617:98:10",
																"statements": [
																	{
																		"expression": {
																			"id": 1431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"components": [
																					{
																						"baseExpression": {
																							"id": 1417,
																							"name": "entries",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1325,
																							"src": "3636:7:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct GameLogic.LeaderboardEntry memory[] memory"
																							}
																						},
																						"id": 1419,
																						"indexExpression": {
																							"id": 1418,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1364,
																							"src": "3644:1:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "3636:10:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_LeaderboardEntry_$1116_memory_ptr",
																							"typeString": "struct GameLogic.LeaderboardEntry memory"
																						}
																					},
																					{
																						"baseExpression": {
																							"id": 1420,
																							"name": "entries",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1325,
																							"src": "3648:7:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct GameLogic.LeaderboardEntry memory[] memory"
																							}
																						},
																						"id": 1422,
																						"indexExpression": {
																							"id": 1421,
																							"name": "maxIndex",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1381,
																							"src": "3656:8:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "3648:17:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_LeaderboardEntry_$1116_memory_ptr",
																							"typeString": "struct GameLogic.LeaderboardEntry memory"
																						}
																					}
																				],
																				"id": 1423,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "TupleExpression",
																				"src": "3635:31:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$",
																					"typeString": "tuple(struct GameLogic.LeaderboardEntry memory,struct GameLogic.LeaderboardEntry memory)"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"components": [
																					{
																						"baseExpression": {
																							"id": 1424,
																							"name": "entries",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1325,
																							"src": "3670:7:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct GameLogic.LeaderboardEntry memory[] memory"
																							}
																						},
																						"id": 1426,
																						"indexExpression": {
																							"id": 1425,
																							"name": "maxIndex",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1381,
																							"src": "3678:8:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "3670:17:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_LeaderboardEntry_$1116_memory_ptr",
																							"typeString": "struct GameLogic.LeaderboardEntry memory"
																						}
																					},
																					{
																						"baseExpression": {
																							"id": 1427,
																							"name": "entries",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1325,
																							"src": "3689:7:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct GameLogic.LeaderboardEntry memory[] memory"
																							}
																						},
																						"id": 1429,
																						"indexExpression": {
																							"id": 1428,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1364,
																							"src": "3697:1:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "3689:10:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_LeaderboardEntry_$1116_memory_ptr",
																							"typeString": "struct GameLogic.LeaderboardEntry memory"
																						}
																					}
																				],
																				"id": 1430,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3669:31:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$",
																					"typeString": "tuple(struct GameLogic.LeaderboardEntry memory,struct GameLogic.LeaderboardEntry memory)"
																				}
																			},
																			"src": "3635:65:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1432,
																		"nodeType": "ExpressionStatement",
																		"src": "3635:65:10"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1367,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "3301:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"expression": {
																"id": 1368,
																"name": "entries",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1325,
																"src": "3305:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct GameLogic.LeaderboardEntry memory[] memory"
																}
															},
															"id": 1369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3313:6:10",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3305:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3301:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1371,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "3323:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1372,
																"name": "offset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1276,
																"src": "3327:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1373,
																"name": "actualLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1301,
																"src": "3336:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3327:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3323:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3301:47:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1436,
												"initializationExpression": {
													"assignments": [
														1364
													],
													"declarations": [
														{
															"constant": false,
															"id": 1364,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3294:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 1436,
															"src": "3286:9:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1363,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3286:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1366,
													"initialValue": {
														"hexValue": "30",
														"id": 1365,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3298:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3286:13:10"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1378,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3350:3:10",
														"subExpression": {
															"id": 1377,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "3350:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1379,
													"nodeType": "ExpressionStatement",
													"src": "3350:3:10"
												},
												"nodeType": "ForStatement",
												"src": "3281:444:10"
											},
											{
												"body": {
													"id": 1457,
													"nodeType": "Block",
													"src": "3822:61:10",
													"statements": [
														{
															"expression": {
																"id": 1455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1447,
																		"name": "leaderboard",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1313,
																		"src": "3836:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct GameLogic.LeaderboardEntry memory[] memory"
																		}
																	},
																	"id": 1449,
																	"indexExpression": {
																		"id": 1448,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1438,
																		"src": "3848:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3836:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_LeaderboardEntry_$1116_memory_ptr",
																		"typeString": "struct GameLogic.LeaderboardEntry memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1450,
																		"name": "entries",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1325,
																		"src": "3853:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct GameLogic.LeaderboardEntry memory[] memory"
																		}
																	},
																	"id": 1454,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1453,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1451,
																			"name": "offset",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1276,
																			"src": "3861:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1452,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1438,
																			"src": "3870:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3861:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3853:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_LeaderboardEntry_$1116_memory_ptr",
																		"typeString": "struct GameLogic.LeaderboardEntry memory"
																	}
																},
																"src": "3836:36:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LeaderboardEntry_$1116_memory_ptr",
																	"typeString": "struct GameLogic.LeaderboardEntry memory"
																}
															},
															"id": 1456,
															"nodeType": "ExpressionStatement",
															"src": "3836:36:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1441,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1438,
														"src": "3799:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1442,
														"name": "actualLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1301,
														"src": "3803:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3799:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1458,
												"initializationExpression": {
													"assignments": [
														1438
													],
													"declarations": [
														{
															"constant": false,
															"id": 1438,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3792:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 1458,
															"src": "3784:9:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1437,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3784:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1440,
													"initialValue": {
														"hexValue": "30",
														"id": 1439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3796:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3784:13:10"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3817:3:10",
														"subExpression": {
															"id": 1444,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1438,
															"src": "3817:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1446,
													"nodeType": "ExpressionStatement",
													"src": "3817:3:10"
												},
												"nodeType": "ForStatement",
												"src": "3779:104:10"
											},
											{
												"expression": {
													"id": 1459,
													"name": "leaderboard",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1313,
													"src": "3900:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct GameLogic.LeaderboardEntry memory[] memory"
													}
												},
												"functionReturnParameters": 1284,
												"id": 1460,
												"nodeType": "Return",
												"src": "3893:18:10"
											}
										]
									},
									"functionSelector": "73af16fc",
									"id": 1462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLeaderboard",
									"nameLocation": "2530:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "offset",
												"nameLocation": "2553:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "2545:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2545:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "limit",
												"nameLocation": "2569:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "2561:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2561:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2544:31:10"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "2599:25:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_LeaderboardEntry_$1116_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct GameLogic.LeaderboardEntry[]"
												},
												"typeName": {
													"baseType": {
														"id": 1281,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1280,
															"name": "LeaderboardEntry",
															"nameLocations": [
																"2599:16:10"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1116,
															"src": "2599:16:10"
														},
														"referencedDeclaration": 1116,
														"src": "2599:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_LeaderboardEntry_$1116_storage_ptr",
															"typeString": "struct GameLogic.LeaderboardEntry"
														}
													},
													"id": 1282,
													"nodeType": "ArrayTypeName",
													"src": "2599:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_LeaderboardEntry_$1116_storage_$dyn_storage_ptr",
														"typeString": "struct GameLogic.LeaderboardEntry[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2598:27:10"
									},
									"scope": 1554,
									"src": "2521:1397:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1500,
										"nodeType": "Block",
										"src": "4015:242:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1470,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4053:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4057:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4053:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1474,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4073:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_GameLogic_$1554",
																					"typeString": "contract GameLogic"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_GameLogic_$1554",
																					"typeString": "contract GameLogic"
																				}
																			],
																			"id": 1473,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4065:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1472,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4065:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4065:13:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1468,
																		"name": "gameToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1091,
																		"src": "4033:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$547",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4043:9:10",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 524,
																	"src": "4033:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 1476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4033:46:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1477,
																"name": "REPAIR_COST",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1101,
																"src": "4083:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4033:61:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420616c6c6f77616e6365",
															"id": 1479,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4096:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
																"typeString": "literal_string \"Insufficient allowance\""
															},
															"value": "Insufficient allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
																"typeString": "literal_string \"Insufficient allowance\""
															}
														],
														"id": 1467,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4025:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:96:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1481,
												"nodeType": "ExpressionStatement",
												"src": "4025:96:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1485,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4158:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4162:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4158:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1489,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4178:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GameLogic_$1554",
																		"typeString": "contract GameLogic"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GameLogic_$1554",
																		"typeString": "contract GameLogic"
																	}
																],
																"id": 1488,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4170:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1487,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4170:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4170:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1491,
															"name": "REPAIR_COST",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "4185:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1482,
															"name": "gameToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "4131:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$547",
																"typeString": "contract IERC20"
															}
														},
														"id": 1484,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4141:16:10",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 619,
														"src": "4131:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$547_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$547_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4131:66:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1493,
												"nodeType": "ExpressionStatement",
												"src": "4131:66:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1495,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4228:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4232:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4228:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1497,
															"name": "component",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "4240:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														],
														"id": 1494,
														"name": "VehicleRepaired",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1142,
														"src": "4212:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,string memory)"
														}
													},
													"id": 1498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4212:38:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1499,
												"nodeType": "EmitStatement",
												"src": "4207:43:10"
											}
										]
									},
									"functionSelector": "ed4b7eaa",
									"id": 1501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "repairVehicle",
									"nameLocation": "3965:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "component",
												"nameLocation": "3995:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "3979:25:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1463,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3979:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3978:27:10"
									},
									"returnParameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4015:0:10"
									},
									"scope": 1554,
									"src": "3956:301:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1524,
										"nodeType": "Block",
										"src": "4407:168:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1510,
																"name": "newMultiplier",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1503,
																"src": "4425:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1511,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4441:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4425:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d756c7469706c696572206d7573742062652067726561746572207468616e207a65726f",
															"id": 1513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4444:38:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a9017d63cbf4a2c4f26e7cdb5a4fe6fa27d0445793ac73adc9717af021961238",
																"typeString": "literal_string \"Multiplier must be greater than zero\""
															},
															"value": "Multiplier must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a9017d63cbf4a2c4f26e7cdb5a4fe6fa27d0445793ac73adc9717af021961238",
																"typeString": "literal_string \"Multiplier must be greater than zero\""
															}
														],
														"id": 1509,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4417:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4417:66:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1515,
												"nodeType": "ExpressionStatement",
												"src": "4417:66:10"
											},
											{
												"expression": {
													"id": 1518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1516,
														"name": "tokenMultiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1094,
														"src": "4493:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1517,
														"name": "newMultiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1503,
														"src": "4511:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4493:31:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1519,
												"nodeType": "ExpressionStatement",
												"src": "4493:31:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1521,
															"name": "newMultiplier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1503,
															"src": "4554:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1520,
														"name": "FormulaUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1136,
														"src": "4539:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4539:29:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1523,
												"nodeType": "EmitStatement",
												"src": "4534:34:10"
											}
										]
									},
									"functionSelector": "3596362b",
									"id": 1525,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1506,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1106,
													"src": "4395:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1507,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1505,
												"name": "onlyRole",
												"nameLocations": [
													"4386:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "4386:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "4386:20:10"
										}
									],
									"name": "updateTokenMultiplier",
									"nameLocation": "4332:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "newMultiplier",
												"nameLocation": "4362:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "4354:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4354:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4353:23:10"
									},
									"returnParameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4407:0:10"
									},
									"scope": 1554,
									"src": "4323:252:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1538,
										"nodeType": "Block",
										"src": "4694:47:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1534,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "4714:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1535,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1527,
															"src": "4726:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1533,
														"name": "grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 148,
														"src": "4704:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4704:30:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1537,
												"nodeType": "ExpressionStatement",
												"src": "4704:30:10"
											}
										]
									},
									"functionSelector": "c634b78e",
									"id": 1539,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1530,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 30,
													"src": "4674:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1531,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1529,
												"name": "onlyRole",
												"nameLocations": [
													"4665:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "4665:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "4665:28:10"
										}
									],
									"name": "grantAdminRole",
									"nameLocation": "4624:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4647:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "4639:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4639:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4638:17:10"
									},
									"returnParameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4694:0:10"
									},
									"scope": 1554,
									"src": "4615:126:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1552,
										"nodeType": "Block",
										"src": "4827:48:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1548,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "4848:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1549,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1541,
															"src": "4860:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1547,
														"name": "revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "4837:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4837:31:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1551,
												"nodeType": "ExpressionStatement",
												"src": "4837:31:10"
											}
										]
									},
									"functionSelector": "9a19c7b0",
									"id": 1553,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1544,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 30,
													"src": "4807:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1545,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1543,
												"name": "onlyRole",
												"nameLocations": [
													"4798:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "4798:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "4798:28:10"
										}
									],
									"name": "revokeAdminRole",
									"nameLocation": "4756:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4780:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "4772:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4772:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4771:17:10"
									},
									"returnParameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4827:0:10"
									},
									"scope": 1554,
									"src": "4747:128:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1555,
							"src": "241:4636:10",
							"usedErrors": [
								306,
								309,
								559
							],
							"usedEvents": [
								318,
								327,
								336,
								1132,
								1136,
								1142,
								1146
							]
						}
					],
					"src": "32:4845:10"
				},
				"id": 10
			}
		}
	}
}